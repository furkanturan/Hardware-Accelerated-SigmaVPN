SetSeed(99);

x := Random(2^128, 2^256-1);

printf "x = %h\n", x;

printf "\n";
printf "Magma's Calculation:\n";
printf "x mod 2^130 - 5 is %h\n", x mod (2^130 - 5);

printf "\n";printf "\n";

// ------------------------

q := x div 2^130;
r := x mod 2^130;
rem := r +  q * 5;

printf "x mod 2^130 - 5 is %h\n", rem;
printf "\n";printf "\n";
// ------------------------

// Implement the modulus with "Reduction Modulo" algorithm:
// Algorithm 14.47 at pg.605 of Handbook of Applied Cryptography

q := x div 2^130;                printf "1. q = %h\n", q;
//r := x - q * 2^130;
r := x mod 2^130;                printf "2. r = %h\n", r;

rem := r;
i := 0;

while q gt 0 do

    tmp := (q * 5) div 2^130;    printf "3. t = %h\n", tmp;

    r := q * 5 - tmp * 2^130;    printf "4. r = %h\n", r;
    q := tmp;                    printf "5. q = %h\n", q;
    rem := rem + r;

    i := i + 1;

    printf "q = %h\n", q;
end while;


printf "\n";
printf "Reduction Modulo Calculation:\n";
printf "x mod 2^130 - 5 is %h\n", rem;
printf "Loop is taken for %o times\n", i;
