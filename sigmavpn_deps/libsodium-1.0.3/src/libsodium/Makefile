# Makefile.in generated by automake 1.15 from Makefile.am.
# src/libsodium/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/libsodium
pkgincludedir = $(includedir)/libsodium
pkglibdir = $(libdir)/libsodium
pkglibexecdir = $(libexecdir)/libsodium
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = arm-xilinx-linux-gnueabi
am__append_1 = \
	randombytes/salsa20/randombytes_salsa20_random.c \
	randombytes/sysrandom/randombytes_sysrandom.c

#am__append_2 = \
#	crypto_scalarmult/curve25519/donna_c64/api.h \
#	crypto_scalarmult/curve25519/donna_c64/base_curve25519_donna_c64.c \
#	crypto_scalarmult/curve25519/donna_c64/smult_curve25519_donna_c64.c

am__append_3 = \
	crypto_scalarmult/curve25519/ref10/api.h \
	crypto_scalarmult/curve25519/ref10/base_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe.h \
	crypto_scalarmult/curve25519/ref10/fe_0_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe_1_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe_add_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe_copy_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe_cswap_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe_frombytes_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe_invert_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe_mul_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe_mul121666_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe_sq_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe_sub_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe_tobytes_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/montgomery.h \
	crypto_scalarmult/curve25519/ref10/pow225521.h \
	crypto_scalarmult/curve25519/ref10/scalarmult_curve25519_ref10.c

#am__append_4 = \
#	crypto_stream/salsa20/amd64_xmm6/api.h \
#	crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S

am__append_5 = \
	crypto_stream/salsa20/ref/api.h \
	crypto_stream/salsa20/ref/stream_salsa20_ref.c \
	crypto_stream/salsa20/ref/xor_salsa20_ref.c

am__append_6 = \
	crypto_core/salsa2012/ref/core_salsa2012.c \
	crypto_core/salsa2012/core_salsa2012_api.c \
	crypto_core/salsa2012/ref/api.h \
	crypto_core/salsa208/ref/core_salsa208.c \
	crypto_core/salsa208/core_salsa208_api.c \
	crypto_core/salsa208/ref/api.h \
	crypto_sign/edwards25519sha512batch/sign_edwards25519sha512batch_api.c \
	crypto_sign/edwards25519sha512batch/ref/api.h \
	crypto_sign/edwards25519sha512batch/ref/fe25519.h \
	crypto_sign/edwards25519sha512batch/ref/fe25519_edwards25519sha512batch.c \
	crypto_sign/edwards25519sha512batch/ref/ge25519.h \
	crypto_sign/edwards25519sha512batch/ref/ge25519_edwards25519sha512batch.c \
	crypto_sign/edwards25519sha512batch/ref/sc25519.h \
	crypto_sign/edwards25519sha512batch/ref/sc25519_edwards25519sha512batch.c \
	crypto_sign/edwards25519sha512batch/ref/sign_edwards25519sha512batch.c \
	crypto_stream/aes128ctr/portable/afternm_aes128ctr.c \
	crypto_stream/aes128ctr/stream_aes128ctr_api.c \
	crypto_stream/aes128ctr/portable/api.h \
	crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c \
	crypto_stream/aes128ctr/portable/common.h \
	crypto_stream/aes128ctr/portable/common_aes128ctr.c \
	crypto_stream/aes128ctr/portable/consts.h \
	crypto_stream/aes128ctr/portable/consts_aes128ctr.c \
	crypto_stream/aes128ctr/portable/int128.h \
	crypto_stream/aes128ctr/portable/int128_aes128ctr.c \
	crypto_stream/aes128ctr/portable/stream_aes128ctr.c \
	crypto_stream/aes128ctr/portable/types.h \
	crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c \
	crypto_stream/salsa2012/stream_salsa2012_api.c \
	crypto_stream/salsa2012/ref/api.h \
	crypto_stream/salsa2012/ref/stream_salsa2012.c \
	crypto_stream/salsa2012/ref/xor_salsa2012.c \
	crypto_stream/salsa208/stream_salsa208_api.c \
	crypto_stream/salsa208/ref/api.h \
	crypto_stream/salsa208/ref/stream_salsa208.c \
	crypto_stream/salsa208/ref/xor_salsa208.c

#am__append_7 = -Wl,--output-def,libsodium-$(DLL_VERSION).def
subdir = src/libsodium
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/m4/ld-output-def.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(defexecdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libsodium_la_LIBADD =
am__libsodium_la_SOURCES_DIST =  \
	crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c \
	crypto_auth/crypto_auth.c \
	crypto_auth/hmacsha256/auth_hmacsha256_api.c \
	crypto_auth/hmacsha256/cp/api.h \
	crypto_auth/hmacsha256/cp/hmac_hmacsha256.c \
	crypto_auth/hmacsha256/cp/verify_hmacsha256.c \
	crypto_auth/hmacsha512/auth_hmacsha512_api.c \
	crypto_auth/hmacsha512/cp/api.h \
	crypto_auth/hmacsha512/cp/hmac_hmacsha512.c \
	crypto_auth/hmacsha512/cp/verify_hmacsha512.c \
	crypto_auth/hmacsha512256/auth_hmacsha512256_api.c \
	crypto_auth/hmacsha512256/cp/api.h \
	crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c \
	crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c \
	crypto_box/crypto_box.c crypto_box/crypto_box_easy.c \
	crypto_box/crypto_box_seal.c \
	crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c \
	crypto_box/curve25519xsalsa20poly1305/ref/api.h \
	crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c \
	crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c \
	crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c \
	crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c \
	crypto_core/hsalsa20/ref2/core_hsalsa20.c \
	crypto_core/hsalsa20/core_hsalsa20_api.c \
	crypto_core/hsalsa20/ref2/api.h \
	crypto_core/salsa20/ref/core_salsa20.c \
	crypto_core/salsa20/core_salsa20_api.c \
	crypto_core/salsa20/ref/api.h \
	crypto_generichash/crypto_generichash.c \
	crypto_generichash/blake2/generichash_blake2_api.c \
	crypto_generichash/blake2/ref/api.h \
	crypto_generichash/blake2/ref/blake2-impl.h \
	crypto_generichash/blake2/ref/blake2.h \
	crypto_generichash/blake2/ref/blake2b-ref.c \
	crypto_generichash/blake2/ref/generichash_blake2b.c \
	crypto_hash/crypto_hash.c crypto_hash/sha256/hash_sha256_api.c \
	crypto_hash/sha256/cp/api.h \
	crypto_hash/sha256/cp/hash_sha256.c \
	crypto_hash/sha512/hash_sha512_api.c \
	crypto_hash/sha512/cp/api.h \
	crypto_hash/sha512/cp/hash_sha512.c \
	crypto_onetimeauth/crypto_onetimeauth.c \
	crypto_onetimeauth/poly1305/onetimeauth_poly1305.c \
	crypto_onetimeauth/poly1305/onetimeauth_poly1305_api.c \
	crypto_onetimeauth/poly1305/onetimeauth_poly1305_try.c \
	crypto_onetimeauth/poly1305/donna/poly1305_donna.h \
	crypto_onetimeauth/poly1305/donna/poly1305_donna32.h \
	crypto_onetimeauth/poly1305/donna/poly1305_donna64.h \
	crypto_onetimeauth/poly1305/donna/auth_poly1305_donna.c \
	crypto_onetimeauth/poly1305/donna/verify_poly1305_donna.c \
	crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c \
	crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h \
	crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c \
	crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c \
	crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.h \
	crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c \
	crypto_pwhash/scryptsalsa208sha256/sysendian.h \
	crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c \
	crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c \
	crypto_scalarmult/crypto_scalarmult.c \
	crypto_scalarmult/curve25519/scalarmult_curve25519_api.c \
	crypto_secretbox/crypto_secretbox.c \
	crypto_secretbox/crypto_secretbox_easy.c \
	crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c \
	crypto_secretbox/xsalsa20poly1305/ref/api.h \
	crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c \
	crypto_shorthash/crypto_shorthash.c \
	crypto_shorthash/siphash24/shorthash_siphash24_api.c \
	crypto_shorthash/siphash24/ref/api.h \
	crypto_shorthash/siphash24/ref/shorthash_siphash24.c \
	crypto_sign/crypto_sign.c crypto_sign/ed25519/ref10/base.h \
	crypto_sign/ed25519/ref10/base2.h \
	crypto_sign/ed25519/sign_ed25519_api.c \
	crypto_sign/ed25519/ref10/api.h crypto_sign/ed25519/ref10/d.h \
	crypto_sign/ed25519/ref10/d2.h crypto_sign/ed25519/ref10/fe.h \
	crypto_sign/ed25519/ref10/fe_0.c \
	crypto_sign/ed25519/ref10/fe_1.c \
	crypto_sign/ed25519/ref10/fe_add.c \
	crypto_sign/ed25519/ref10/fe_cmov.c \
	crypto_sign/ed25519/ref10/fe_copy.c \
	crypto_sign/ed25519/ref10/fe_frombytes.c \
	crypto_sign/ed25519/ref10/fe_invert.c \
	crypto_sign/ed25519/ref10/fe_isnegative.c \
	crypto_sign/ed25519/ref10/fe_isnonzero.c \
	crypto_sign/ed25519/ref10/fe_mul.c \
	crypto_sign/ed25519/ref10/fe_neg.c \
	crypto_sign/ed25519/ref10/fe_pow22523.c \
	crypto_sign/ed25519/ref10/fe_sq.c \
	crypto_sign/ed25519/ref10/fe_sq2.c \
	crypto_sign/ed25519/ref10/fe_sub.c \
	crypto_sign/ed25519/ref10/fe_tobytes.c \
	crypto_sign/ed25519/ref10/ge.h \
	crypto_sign/ed25519/ref10/ge_add.c \
	crypto_sign/ed25519/ref10/ge_add.h \
	crypto_sign/ed25519/ref10/ge_double_scalarmult.c \
	crypto_sign/ed25519/ref10/ge_frombytes.c \
	crypto_sign/ed25519/ref10/ge_madd.c \
	crypto_sign/ed25519/ref10/ge_madd.h \
	crypto_sign/ed25519/ref10/ge_msub.c \
	crypto_sign/ed25519/ref10/ge_msub.h \
	crypto_sign/ed25519/ref10/ge_p1p1_to_p2.c \
	crypto_sign/ed25519/ref10/ge_p1p1_to_p3.c \
	crypto_sign/ed25519/ref10/ge_p2_0.c \
	crypto_sign/ed25519/ref10/ge_p2_dbl.c \
	crypto_sign/ed25519/ref10/ge_p2_dbl.h \
	crypto_sign/ed25519/ref10/ge_p3_0.c \
	crypto_sign/ed25519/ref10/ge_p3_dbl.c \
	crypto_sign/ed25519/ref10/ge_p3_to_cached.c \
	crypto_sign/ed25519/ref10/ge_p3_to_p2.c \
	crypto_sign/ed25519/ref10/ge_p3_tobytes.c \
	crypto_sign/ed25519/ref10/ge_precomp_0.c \
	crypto_sign/ed25519/ref10/ge_scalarmult_base.c \
	crypto_sign/ed25519/ref10/ge_sub.c \
	crypto_sign/ed25519/ref10/ge_sub.h \
	crypto_sign/ed25519/ref10/ge_tobytes.c \
	crypto_sign/ed25519/ref10/keypair.c \
	crypto_sign/ed25519/ref10/open.c \
	crypto_sign/ed25519/ref10/pow22523.h \
	crypto_sign/ed25519/ref10/pow225521.h \
	crypto_sign/ed25519/ref10/sc.h \
	crypto_sign/ed25519/ref10/sc_muladd.c \
	crypto_sign/ed25519/ref10/sc_reduce.c \
	crypto_sign/ed25519/ref10/sign.c \
	crypto_sign/ed25519/ref10/sqrtm1.h \
	crypto_stream/crypto_stream.c \
	crypto_stream/chacha20/stream_chacha20_api.c \
	crypto_stream/chacha20/ref/api.h \
	crypto_stream/chacha20/ref/stream_chacha20_ref.c \
	crypto_stream/salsa20/stream_salsa20_api.c \
	crypto_stream/xsalsa20/stream_xsalsa20_api.c \
	crypto_stream/xsalsa20/ref/api.h \
	crypto_stream/xsalsa20/ref/stream_xsalsa20.c \
	crypto_stream/xsalsa20/ref/xor_xsalsa20.c \
	crypto_verify/16/verify_16_api.c crypto_verify/16/ref/api.h \
	crypto_verify/16/ref/verify_16.c \
	crypto_verify/32/verify_32_api.c crypto_verify/32/ref/api.h \
	crypto_verify/32/ref/verify_32.c \
	crypto_verify/64/verify_64_api.c crypto_verify/64/ref/api.h \
	crypto_verify/64/ref/verify_64.c randombytes/randombytes.c \
	sodium/core.c sodium/runtime.c sodium/utils.c sodium/version.c \
	randombytes/salsa20/randombytes_salsa20_random.c \
	randombytes/sysrandom/randombytes_sysrandom.c \
	crypto_scalarmult/curve25519/donna_c64/api.h \
	crypto_scalarmult/curve25519/donna_c64/base_curve25519_donna_c64.c \
	crypto_scalarmult/curve25519/donna_c64/smult_curve25519_donna_c64.c \
	crypto_scalarmult/curve25519/ref10/api.h \
	crypto_scalarmult/curve25519/ref10/base_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe.h \
	crypto_scalarmult/curve25519/ref10/fe_0_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe_1_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe_add_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe_copy_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe_cswap_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe_frombytes_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe_invert_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe_mul_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe_mul121666_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe_sq_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe_sub_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/fe_tobytes_curve25519_ref10.c \
	crypto_scalarmult/curve25519/ref10/montgomery.h \
	crypto_scalarmult/curve25519/ref10/pow225521.h \
	crypto_scalarmult/curve25519/ref10/scalarmult_curve25519_ref10.c \
	crypto_stream/salsa20/amd64_xmm6/api.h \
	crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S \
	crypto_stream/salsa20/ref/api.h \
	crypto_stream/salsa20/ref/stream_salsa20_ref.c \
	crypto_stream/salsa20/ref/xor_salsa20_ref.c \
	crypto_core/salsa2012/ref/core_salsa2012.c \
	crypto_core/salsa2012/core_salsa2012_api.c \
	crypto_core/salsa2012/ref/api.h \
	crypto_core/salsa208/ref/core_salsa208.c \
	crypto_core/salsa208/core_salsa208_api.c \
	crypto_core/salsa208/ref/api.h \
	crypto_sign/edwards25519sha512batch/sign_edwards25519sha512batch_api.c \
	crypto_sign/edwards25519sha512batch/ref/api.h \
	crypto_sign/edwards25519sha512batch/ref/fe25519.h \
	crypto_sign/edwards25519sha512batch/ref/fe25519_edwards25519sha512batch.c \
	crypto_sign/edwards25519sha512batch/ref/ge25519.h \
	crypto_sign/edwards25519sha512batch/ref/ge25519_edwards25519sha512batch.c \
	crypto_sign/edwards25519sha512batch/ref/sc25519.h \
	crypto_sign/edwards25519sha512batch/ref/sc25519_edwards25519sha512batch.c \
	crypto_sign/edwards25519sha512batch/ref/sign_edwards25519sha512batch.c \
	crypto_stream/aes128ctr/portable/afternm_aes128ctr.c \
	crypto_stream/aes128ctr/stream_aes128ctr_api.c \
	crypto_stream/aes128ctr/portable/api.h \
	crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c \
	crypto_stream/aes128ctr/portable/common.h \
	crypto_stream/aes128ctr/portable/common_aes128ctr.c \
	crypto_stream/aes128ctr/portable/consts.h \
	crypto_stream/aes128ctr/portable/consts_aes128ctr.c \
	crypto_stream/aes128ctr/portable/int128.h \
	crypto_stream/aes128ctr/portable/int128_aes128ctr.c \
	crypto_stream/aes128ctr/portable/stream_aes128ctr.c \
	crypto_stream/aes128ctr/portable/types.h \
	crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c \
	crypto_stream/salsa2012/stream_salsa2012_api.c \
	crypto_stream/salsa2012/ref/api.h \
	crypto_stream/salsa2012/ref/stream_salsa2012.c \
	crypto_stream/salsa2012/ref/xor_salsa2012.c \
	crypto_stream/salsa208/stream_salsa208_api.c \
	crypto_stream/salsa208/ref/api.h \
	crypto_stream/salsa208/ref/stream_salsa208.c \
	crypto_stream/salsa208/ref/xor_salsa208.c
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = randombytes/salsa20/libsodium_la-randombytes_salsa20_random.lo \
	randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo
#am__objects_2 = crypto_scalarmult/curve25519/donna_c64/libsodium_la-base_curve25519_donna_c64.lo \
#	crypto_scalarmult/curve25519/donna_c64/libsodium_la-smult_curve25519_donna_c64.lo
am__objects_3 = crypto_scalarmult/curve25519/ref10/libsodium_la-base_curve25519_ref10.lo \
	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_0_curve25519_ref10.lo \
	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_1_curve25519_ref10.lo \
	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_add_curve25519_ref10.lo \
	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_copy_curve25519_ref10.lo \
	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_cswap_curve25519_ref10.lo \
	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_frombytes_curve25519_ref10.lo \
	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_invert_curve25519_ref10.lo \
	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul_curve25519_ref10.lo \
	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul121666_curve25519_ref10.lo \
	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sq_curve25519_ref10.lo \
	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sub_curve25519_ref10.lo \
	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_tobytes_curve25519_ref10.lo \
	crypto_scalarmult/curve25519/ref10/libsodium_la-scalarmult_curve25519_ref10.lo
#am__objects_4 = crypto_stream/salsa20/amd64_xmm6/libsodium_la-stream_salsa20_amd64_xmm6.lo
am__objects_5 = crypto_stream/salsa20/ref/libsodium_la-stream_salsa20_ref.lo \
	crypto_stream/salsa20/ref/libsodium_la-xor_salsa20_ref.lo
am__objects_6 = crypto_core/salsa2012/ref/libsodium_la-core_salsa2012.lo \
	crypto_core/salsa2012/libsodium_la-core_salsa2012_api.lo \
	crypto_core/salsa208/ref/libsodium_la-core_salsa208.lo \
	crypto_core/salsa208/libsodium_la-core_salsa208_api.lo \
	crypto_sign/edwards25519sha512batch/libsodium_la-sign_edwards25519sha512batch_api.lo \
	crypto_sign/edwards25519sha512batch/ref/libsodium_la-fe25519_edwards25519sha512batch.lo \
	crypto_sign/edwards25519sha512batch/ref/libsodium_la-ge25519_edwards25519sha512batch.lo \
	crypto_sign/edwards25519sha512batch/ref/libsodium_la-sc25519_edwards25519sha512batch.lo \
	crypto_sign/edwards25519sha512batch/ref/libsodium_la-sign_edwards25519sha512batch.lo \
	crypto_stream/aes128ctr/portable/libsodium_la-afternm_aes128ctr.lo \
	crypto_stream/aes128ctr/libsodium_la-stream_aes128ctr_api.lo \
	crypto_stream/aes128ctr/portable/libsodium_la-beforenm_aes128ctr.lo \
	crypto_stream/aes128ctr/portable/libsodium_la-common_aes128ctr.lo \
	crypto_stream/aes128ctr/portable/libsodium_la-consts_aes128ctr.lo \
	crypto_stream/aes128ctr/portable/libsodium_la-int128_aes128ctr.lo \
	crypto_stream/aes128ctr/portable/libsodium_la-stream_aes128ctr.lo \
	crypto_stream/aes128ctr/portable/libsodium_la-xor_afternm_aes128ctr.lo \
	crypto_stream/salsa2012/libsodium_la-stream_salsa2012_api.lo \
	crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012.lo \
	crypto_stream/salsa2012/ref/libsodium_la-xor_salsa2012.lo \
	crypto_stream/salsa208/libsodium_la-stream_salsa208_api.lo \
	crypto_stream/salsa208/ref/libsodium_la-stream_salsa208.lo \
	crypto_stream/salsa208/ref/libsodium_la-xor_salsa208.lo
am_libsodium_la_OBJECTS = crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo \
	crypto_auth/libsodium_la-crypto_auth.lo \
	crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256_api.lo \
	crypto_auth/hmacsha256/cp/libsodium_la-hmac_hmacsha256.lo \
	crypto_auth/hmacsha256/cp/libsodium_la-verify_hmacsha256.lo \
	crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512_api.lo \
	crypto_auth/hmacsha512/cp/libsodium_la-hmac_hmacsha512.lo \
	crypto_auth/hmacsha512/cp/libsodium_la-verify_hmacsha512.lo \
	crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256_api.lo \
	crypto_auth/hmacsha512256/cp/libsodium_la-hmac_hmacsha512256.lo \
	crypto_auth/hmacsha512256/cp/libsodium_la-verify_hmacsha512256.lo \
	crypto_box/libsodium_la-crypto_box.lo \
	crypto_box/libsodium_la-crypto_box_easy.lo \
	crypto_box/libsodium_la-crypto_box_seal.lo \
	crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305_api.lo \
	crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-after_curve25519xsalsa20poly1305.lo \
	crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-before_curve25519xsalsa20poly1305.lo \
	crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-box_curve25519xsalsa20poly1305.lo \
	crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-keypair_curve25519xsalsa20poly1305.lo \
	crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20.lo \
	crypto_core/hsalsa20/libsodium_la-core_hsalsa20_api.lo \
	crypto_core/salsa20/ref/libsodium_la-core_salsa20.lo \
	crypto_core/salsa20/libsodium_la-core_salsa20_api.lo \
	crypto_generichash/libsodium_la-crypto_generichash.lo \
	crypto_generichash/blake2/libsodium_la-generichash_blake2_api.lo \
	crypto_generichash/blake2/ref/libsodium_la-blake2b-ref.lo \
	crypto_generichash/blake2/ref/libsodium_la-generichash_blake2b.lo \
	crypto_hash/libsodium_la-crypto_hash.lo \
	crypto_hash/sha256/libsodium_la-hash_sha256_api.lo \
	crypto_hash/sha256/cp/libsodium_la-hash_sha256.lo \
	crypto_hash/sha512/libsodium_la-hash_sha512_api.lo \
	crypto_hash/sha512/cp/libsodium_la-hash_sha512.lo \
	crypto_onetimeauth/libsodium_la-crypto_onetimeauth.lo \
	crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305.lo \
	crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305_api.lo \
	crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305_try.lo \
	crypto_onetimeauth/poly1305/donna/libsodium_la-auth_poly1305_donna.lo \
	crypto_onetimeauth/poly1305/donna/libsodium_la-verify_poly1305_donna.lo \
	crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo \
	crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo \
	crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo \
	crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo \
	crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo \
	crypto_pwhash/scryptsalsa208sha256/sse/libsodium_la-pwhash_scryptsalsa208sha256_sse.lo \
	crypto_scalarmult/libsodium_la-crypto_scalarmult.lo \
	crypto_scalarmult/curve25519/libsodium_la-scalarmult_curve25519_api.lo \
	crypto_secretbox/libsodium_la-crypto_secretbox.lo \
	crypto_secretbox/libsodium_la-crypto_secretbox_easy.lo \
	crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305_api.lo \
	crypto_secretbox/xsalsa20poly1305/ref/libsodium_la-box_xsalsa20poly1305.lo \
	crypto_shorthash/libsodium_la-crypto_shorthash.lo \
	crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24_api.lo \
	crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24.lo \
	crypto_sign/libsodium_la-crypto_sign.lo \
	crypto_sign/ed25519/libsodium_la-sign_ed25519_api.lo \
	crypto_sign/ed25519/ref10/libsodium_la-fe_0.lo \
	crypto_sign/ed25519/ref10/libsodium_la-fe_1.lo \
	crypto_sign/ed25519/ref10/libsodium_la-fe_add.lo \
	crypto_sign/ed25519/ref10/libsodium_la-fe_cmov.lo \
	crypto_sign/ed25519/ref10/libsodium_la-fe_copy.lo \
	crypto_sign/ed25519/ref10/libsodium_la-fe_frombytes.lo \
	crypto_sign/ed25519/ref10/libsodium_la-fe_invert.lo \
	crypto_sign/ed25519/ref10/libsodium_la-fe_isnegative.lo \
	crypto_sign/ed25519/ref10/libsodium_la-fe_isnonzero.lo \
	crypto_sign/ed25519/ref10/libsodium_la-fe_mul.lo \
	crypto_sign/ed25519/ref10/libsodium_la-fe_neg.lo \
	crypto_sign/ed25519/ref10/libsodium_la-fe_pow22523.lo \
	crypto_sign/ed25519/ref10/libsodium_la-fe_sq.lo \
	crypto_sign/ed25519/ref10/libsodium_la-fe_sq2.lo \
	crypto_sign/ed25519/ref10/libsodium_la-fe_sub.lo \
	crypto_sign/ed25519/ref10/libsodium_la-fe_tobytes.lo \
	crypto_sign/ed25519/ref10/libsodium_la-ge_add.lo \
	crypto_sign/ed25519/ref10/libsodium_la-ge_double_scalarmult.lo \
	crypto_sign/ed25519/ref10/libsodium_la-ge_frombytes.lo \
	crypto_sign/ed25519/ref10/libsodium_la-ge_madd.lo \
	crypto_sign/ed25519/ref10/libsodium_la-ge_msub.lo \
	crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p2.lo \
	crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p3.lo \
	crypto_sign/ed25519/ref10/libsodium_la-ge_p2_0.lo \
	crypto_sign/ed25519/ref10/libsodium_la-ge_p2_dbl.lo \
	crypto_sign/ed25519/ref10/libsodium_la-ge_p3_0.lo \
	crypto_sign/ed25519/ref10/libsodium_la-ge_p3_dbl.lo \
	crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_cached.lo \
	crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_p2.lo \
	crypto_sign/ed25519/ref10/libsodium_la-ge_p3_tobytes.lo \
	crypto_sign/ed25519/ref10/libsodium_la-ge_precomp_0.lo \
	crypto_sign/ed25519/ref10/libsodium_la-ge_scalarmult_base.lo \
	crypto_sign/ed25519/ref10/libsodium_la-ge_sub.lo \
	crypto_sign/ed25519/ref10/libsodium_la-ge_tobytes.lo \
	crypto_sign/ed25519/ref10/libsodium_la-keypair.lo \
	crypto_sign/ed25519/ref10/libsodium_la-open.lo \
	crypto_sign/ed25519/ref10/libsodium_la-sc_muladd.lo \
	crypto_sign/ed25519/ref10/libsodium_la-sc_reduce.lo \
	crypto_sign/ed25519/ref10/libsodium_la-sign.lo \
	crypto_stream/libsodium_la-crypto_stream.lo \
	crypto_stream/chacha20/libsodium_la-stream_chacha20_api.lo \
	crypto_stream/chacha20/ref/libsodium_la-stream_chacha20_ref.lo \
	crypto_stream/salsa20/libsodium_la-stream_salsa20_api.lo \
	crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20_api.lo \
	crypto_stream/xsalsa20/ref/libsodium_la-stream_xsalsa20.lo \
	crypto_stream/xsalsa20/ref/libsodium_la-xor_xsalsa20.lo \
	crypto_verify/16/libsodium_la-verify_16_api.lo \
	crypto_verify/16/ref/libsodium_la-verify_16.lo \
	crypto_verify/32/libsodium_la-verify_32_api.lo \
	crypto_verify/32/ref/libsodium_la-verify_32.lo \
	crypto_verify/64/libsodium_la-verify_64_api.lo \
	crypto_verify/64/ref/libsodium_la-verify_64.lo \
	randombytes/libsodium_la-randombytes.lo \
	sodium/libsodium_la-core.lo sodium/libsodium_la-runtime.lo \
	sodium/libsodium_la-utils.lo sodium/libsodium_la-version.lo \
	$(am__objects_1) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4) $(am__objects_5) $(am__objects_6)
libsodium_la_OBJECTS = $(am_libsodium_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libsodium_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libsodium_la_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
LTCPPASCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CCASFLAGS) $(CCASFLAGS)
AM_V_CPPAS = $(am__v_CPPAS_$(V))
am__v_CPPAS_ = $(am__v_CPPAS_$(AM_DEFAULT_VERBOSITY))
am__v_CPPAS_0 = @echo "  CPPAS   " $@;
am__v_CPPAS_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libsodium_la_SOURCES)
DIST_SOURCES = $(am__libsodium_la_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(defexec_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/build-aux/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/ft/Thesis/SigmaVPN/Zybo/libsodium-1.0.3/build-aux/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = arm-xilinx-linux-gnueabi-ar
AS = as
AUTOCONF = ${SHELL} /home/ft/Thesis/SigmaVPN/Zybo/libsodium-1.0.3/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/ft/Thesis/SigmaVPN/Zybo/libsodium-1.0.3/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/ft/Thesis/SigmaVPN/Zybo/libsodium-1.0.3/build-aux/missing automake-1.15
AWK = gawk
CC = arm-xilinx-linux-gnueabi-gcc -std=gnu99
CCAS = arm-xilinx-linux-gnueabi-gcc -std=gnu99
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g
CCDEPMODE = depmode=gcc3
CFLAGS = -g -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Winit-self -Wwrite-strings -Wdiv-by-zero
CPP = arm-xilinx-linux-gnueabi-gcc -std=gnu99 -E
CPPFLAGS =  -D_FORTIFY_SOURCE=2
CWFLAGS =  -Wall -Wextra -Wbad-function-cast -Wcast-align -Wcast-qual -Wchar-subscripts -Wcomment -Wfloat-equal -Wformat=2 -Wimplicit -Wmissing-declarations -Wmissing-prototypes -Wnormalized=id -Woverride-init -Wparentheses -Wpointer-arith -Wredundant-decls -Wstrict-prototypes -Wswitch-enum
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"libsodium\" -DPACKAGE_TARNAME=\"libsodium\" -DPACKAGE_VERSION=\"1.0.3\" -DPACKAGE_STRING=\"libsodium\ 1.0.3\" -DPACKAGE_BUGREPORT=\"https://github.com/jedisct1/libsodium/issues\" -DPACKAGE_URL=\"https://github.com/jedisct1/libsodium\" -DPACKAGE=\"libsodium\" -DVERSION=\"1.0.3\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DHAVE_SYS_MMAN_H=1 -DNATIVE_LITTLE_ENDIAN=1 -DHAVE_WEAK_SYMBOLS=1 -DCPU_ALIGNED_ACCESS_REQUIRED=1 -DHAVE_MMAP=1 -DHAVE_MLOCK=1 -DHAVE_MADVISE=1 -DHAVE_MPROTECT=1 -DHAVE_POSIX_MEMALIGN=1
DEPDIR = .deps
DLLTOOL = false
DLL_VERSION = 6
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
HAVE_AMD64_ASM_V = 0
HAVE_CPUID_V = 0
HAVE_TI_MODE_V = 0
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
ISODATE = 2015-09-06
LD = /opt/Xilinx/SDK/2014.3.1/gnu/arm/lin/arm-xilinx-linux-gnueabi/bin/ld
LDFLAGS =  -pie -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_DEPS = build-aux/ltmain.sh
LIBTOOL_EXTRA_FLAGS =  -version-info 15:0:2
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = #
MAKEINFO = ${SHELL} /home/ft/Thesis/SigmaVPN/Zybo/libsodium-1.0.3/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /opt/Xilinx/SDK/2014.3.1/gnu/arm/lin/bin/arm-xilinx-linux-gnueabi-nm -B
NMEDIT = 
OBJDUMP = arm-xilinx-linux-gnueabi-objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = libsodium
PACKAGE_BUGREPORT = https://github.com/jedisct1/libsodium/issues
PACKAGE_NAME = libsodium
PACKAGE_STRING = libsodium 1.0.3
PACKAGE_TARNAME = libsodium
PACKAGE_URL = https://github.com/jedisct1/libsodium
PACKAGE_VERSION = 1.0.3
PATH_SEPARATOR = :
RANLIB = arm-xilinx-linux-gnueabi-ranlib
SAFECODE_HOME = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SODIUM_LIBRARY_VERSION = 15:0:2
SODIUM_LIBRARY_VERSION_MAJOR = 7
SODIUM_LIBRARY_VERSION_MINOR = 5
STRIP = arm-xilinx-linux-gnueabi-strip
TEST_LDFLAGS = 
VERSION = 1.0.3
abs_builddir = /home/ft/Thesis/SigmaVPN/Zybo/libsodium-1.0.3/src/libsodium
abs_srcdir = /home/ft/Thesis/SigmaVPN/Zybo/libsodium-1.0.3/src/libsodium
abs_top_builddir = /home/ft/Thesis/SigmaVPN/Zybo/libsodium-1.0.3
abs_top_srcdir = /home/ft/Thesis/SigmaVPN/Zybo/libsodium-1.0.3
ac_ct_AR = 
ac_ct_CC = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = arm-xilinx-linux-gnueabi
host_alias = arm-xilinx-linux-gnueabi
host_cpu = arm
host_os = linux-gnueabi
host_vendor = xilinx
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/ft/Thesis/SigmaVPN/Zybo/libsodium-1.0.3/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/ft/Thesis/SigmaVPN/Zybo/libsodium_installdir
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
lib_LTLIBRARIES = \
	libsodium.la

libsodium_la_SOURCES =  \
	crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c \
	crypto_auth/crypto_auth.c \
	crypto_auth/hmacsha256/auth_hmacsha256_api.c \
	crypto_auth/hmacsha256/cp/api.h \
	crypto_auth/hmacsha256/cp/hmac_hmacsha256.c \
	crypto_auth/hmacsha256/cp/verify_hmacsha256.c \
	crypto_auth/hmacsha512/auth_hmacsha512_api.c \
	crypto_auth/hmacsha512/cp/api.h \
	crypto_auth/hmacsha512/cp/hmac_hmacsha512.c \
	crypto_auth/hmacsha512/cp/verify_hmacsha512.c \
	crypto_auth/hmacsha512256/auth_hmacsha512256_api.c \
	crypto_auth/hmacsha512256/cp/api.h \
	crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c \
	crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c \
	crypto_box/crypto_box.c crypto_box/crypto_box_easy.c \
	crypto_box/crypto_box_seal.c \
	crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c \
	crypto_box/curve25519xsalsa20poly1305/ref/api.h \
	crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c \
	crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c \
	crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c \
	crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c \
	crypto_core/hsalsa20/ref2/core_hsalsa20.c \
	crypto_core/hsalsa20/core_hsalsa20_api.c \
	crypto_core/hsalsa20/ref2/api.h \
	crypto_core/salsa20/ref/core_salsa20.c \
	crypto_core/salsa20/core_salsa20_api.c \
	crypto_core/salsa20/ref/api.h \
	crypto_generichash/crypto_generichash.c \
	crypto_generichash/blake2/generichash_blake2_api.c \
	crypto_generichash/blake2/ref/api.h \
	crypto_generichash/blake2/ref/blake2-impl.h \
	crypto_generichash/blake2/ref/blake2.h \
	crypto_generichash/blake2/ref/blake2b-ref.c \
	crypto_generichash/blake2/ref/generichash_blake2b.c \
	crypto_hash/crypto_hash.c crypto_hash/sha256/hash_sha256_api.c \
	crypto_hash/sha256/cp/api.h \
	crypto_hash/sha256/cp/hash_sha256.c \
	crypto_hash/sha512/hash_sha512_api.c \
	crypto_hash/sha512/cp/api.h \
	crypto_hash/sha512/cp/hash_sha512.c \
	crypto_onetimeauth/crypto_onetimeauth.c \
	crypto_onetimeauth/poly1305/onetimeauth_poly1305.c \
	crypto_onetimeauth/poly1305/onetimeauth_poly1305_api.c \
	crypto_onetimeauth/poly1305/onetimeauth_poly1305_try.c \
	crypto_onetimeauth/poly1305/donna/poly1305_donna.h \
	crypto_onetimeauth/poly1305/donna/poly1305_donna32.h \
	crypto_onetimeauth/poly1305/donna/poly1305_donna64.h \
	crypto_onetimeauth/poly1305/donna/auth_poly1305_donna.c \
	crypto_onetimeauth/poly1305/donna/verify_poly1305_donna.c \
	crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c \
	crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h \
	crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c \
	crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c \
	crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.h \
	crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c \
	crypto_pwhash/scryptsalsa208sha256/sysendian.h \
	crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c \
	crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c \
	crypto_scalarmult/crypto_scalarmult.c \
	crypto_scalarmult/curve25519/scalarmult_curve25519_api.c \
	crypto_secretbox/crypto_secretbox.c \
	crypto_secretbox/crypto_secretbox_easy.c \
	crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c \
	crypto_secretbox/xsalsa20poly1305/ref/api.h \
	crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c \
	crypto_shorthash/crypto_shorthash.c \
	crypto_shorthash/siphash24/shorthash_siphash24_api.c \
	crypto_shorthash/siphash24/ref/api.h \
	crypto_shorthash/siphash24/ref/shorthash_siphash24.c \
	crypto_sign/crypto_sign.c crypto_sign/ed25519/ref10/base.h \
	crypto_sign/ed25519/ref10/base2.h \
	crypto_sign/ed25519/sign_ed25519_api.c \
	crypto_sign/ed25519/ref10/api.h crypto_sign/ed25519/ref10/d.h \
	crypto_sign/ed25519/ref10/d2.h crypto_sign/ed25519/ref10/fe.h \
	crypto_sign/ed25519/ref10/fe_0.c \
	crypto_sign/ed25519/ref10/fe_1.c \
	crypto_sign/ed25519/ref10/fe_add.c \
	crypto_sign/ed25519/ref10/fe_cmov.c \
	crypto_sign/ed25519/ref10/fe_copy.c \
	crypto_sign/ed25519/ref10/fe_frombytes.c \
	crypto_sign/ed25519/ref10/fe_invert.c \
	crypto_sign/ed25519/ref10/fe_isnegative.c \
	crypto_sign/ed25519/ref10/fe_isnonzero.c \
	crypto_sign/ed25519/ref10/fe_mul.c \
	crypto_sign/ed25519/ref10/fe_neg.c \
	crypto_sign/ed25519/ref10/fe_pow22523.c \
	crypto_sign/ed25519/ref10/fe_sq.c \
	crypto_sign/ed25519/ref10/fe_sq2.c \
	crypto_sign/ed25519/ref10/fe_sub.c \
	crypto_sign/ed25519/ref10/fe_tobytes.c \
	crypto_sign/ed25519/ref10/ge.h \
	crypto_sign/ed25519/ref10/ge_add.c \
	crypto_sign/ed25519/ref10/ge_add.h \
	crypto_sign/ed25519/ref10/ge_double_scalarmult.c \
	crypto_sign/ed25519/ref10/ge_frombytes.c \
	crypto_sign/ed25519/ref10/ge_madd.c \
	crypto_sign/ed25519/ref10/ge_madd.h \
	crypto_sign/ed25519/ref10/ge_msub.c \
	crypto_sign/ed25519/ref10/ge_msub.h \
	crypto_sign/ed25519/ref10/ge_p1p1_to_p2.c \
	crypto_sign/ed25519/ref10/ge_p1p1_to_p3.c \
	crypto_sign/ed25519/ref10/ge_p2_0.c \
	crypto_sign/ed25519/ref10/ge_p2_dbl.c \
	crypto_sign/ed25519/ref10/ge_p2_dbl.h \
	crypto_sign/ed25519/ref10/ge_p3_0.c \
	crypto_sign/ed25519/ref10/ge_p3_dbl.c \
	crypto_sign/ed25519/ref10/ge_p3_to_cached.c \
	crypto_sign/ed25519/ref10/ge_p3_to_p2.c \
	crypto_sign/ed25519/ref10/ge_p3_tobytes.c \
	crypto_sign/ed25519/ref10/ge_precomp_0.c \
	crypto_sign/ed25519/ref10/ge_scalarmult_base.c \
	crypto_sign/ed25519/ref10/ge_sub.c \
	crypto_sign/ed25519/ref10/ge_sub.h \
	crypto_sign/ed25519/ref10/ge_tobytes.c \
	crypto_sign/ed25519/ref10/keypair.c \
	crypto_sign/ed25519/ref10/open.c \
	crypto_sign/ed25519/ref10/pow22523.h \
	crypto_sign/ed25519/ref10/pow225521.h \
	crypto_sign/ed25519/ref10/sc.h \
	crypto_sign/ed25519/ref10/sc_muladd.c \
	crypto_sign/ed25519/ref10/sc_reduce.c \
	crypto_sign/ed25519/ref10/sign.c \
	crypto_sign/ed25519/ref10/sqrtm1.h \
	crypto_stream/crypto_stream.c \
	crypto_stream/chacha20/stream_chacha20_api.c \
	crypto_stream/chacha20/ref/api.h \
	crypto_stream/chacha20/ref/stream_chacha20_ref.c \
	crypto_stream/salsa20/stream_salsa20_api.c \
	crypto_stream/xsalsa20/stream_xsalsa20_api.c \
	crypto_stream/xsalsa20/ref/api.h \
	crypto_stream/xsalsa20/ref/stream_xsalsa20.c \
	crypto_stream/xsalsa20/ref/xor_xsalsa20.c \
	crypto_verify/16/verify_16_api.c crypto_verify/16/ref/api.h \
	crypto_verify/16/ref/verify_16.c \
	crypto_verify/32/verify_32_api.c crypto_verify/32/ref/api.h \
	crypto_verify/32/ref/verify_32.c \
	crypto_verify/64/verify_64_api.c crypto_verify/64/ref/api.h \
	crypto_verify/64/ref/verify_64.c randombytes/randombytes.c \
	sodium/core.c sodium/runtime.c sodium/utils.c sodium/version.c \
	$(am__append_1) $(am__append_2) $(am__append_3) \
	$(am__append_4) $(am__append_5) $(am__append_6)
libsodium_la_LDFLAGS = $(AM_LDFLAGS) -export-dynamic -no-undefined \
	$(LIBTOOL_EXTRA_FLAGS) $(am__append_7)
libsodium_la_CPPFLAGS = \
	$(LTDLINCL) \
	-I$(srcdir)/include/sodium \
	-I$(builddir)/include/sodium

#defexecdir = $(bindir)
#defexec_DATA = libsodium-$(DLL_VERSION).def
#CLEANFILES = $(defexec_DATA)
SUBDIRS = \
	include

all: all-recursive

.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/libsodium/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/libsodium/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
crypto_aead/chacha20poly1305/sodium/$(am__dirstamp):
	@$(MKDIR_P) crypto_aead/chacha20poly1305/sodium
	@: > crypto_aead/chacha20poly1305/sodium/$(am__dirstamp)
crypto_aead/chacha20poly1305/sodium/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_aead/chacha20poly1305/sodium/$(DEPDIR)
	@: > crypto_aead/chacha20poly1305/sodium/$(DEPDIR)/$(am__dirstamp)
crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo:  \
	crypto_aead/chacha20poly1305/sodium/$(am__dirstamp) \
	crypto_aead/chacha20poly1305/sodium/$(DEPDIR)/$(am__dirstamp)
crypto_auth/$(am__dirstamp):
	@$(MKDIR_P) crypto_auth
	@: > crypto_auth/$(am__dirstamp)
crypto_auth/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_auth/$(DEPDIR)
	@: > crypto_auth/$(DEPDIR)/$(am__dirstamp)
crypto_auth/libsodium_la-crypto_auth.lo: crypto_auth/$(am__dirstamp) \
	crypto_auth/$(DEPDIR)/$(am__dirstamp)
crypto_auth/hmacsha256/$(am__dirstamp):
	@$(MKDIR_P) crypto_auth/hmacsha256
	@: > crypto_auth/hmacsha256/$(am__dirstamp)
crypto_auth/hmacsha256/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_auth/hmacsha256/$(DEPDIR)
	@: > crypto_auth/hmacsha256/$(DEPDIR)/$(am__dirstamp)
crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256_api.lo:  \
	crypto_auth/hmacsha256/$(am__dirstamp) \
	crypto_auth/hmacsha256/$(DEPDIR)/$(am__dirstamp)
crypto_auth/hmacsha256/cp/$(am__dirstamp):
	@$(MKDIR_P) crypto_auth/hmacsha256/cp
	@: > crypto_auth/hmacsha256/cp/$(am__dirstamp)
crypto_auth/hmacsha256/cp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_auth/hmacsha256/cp/$(DEPDIR)
	@: > crypto_auth/hmacsha256/cp/$(DEPDIR)/$(am__dirstamp)
crypto_auth/hmacsha256/cp/libsodium_la-hmac_hmacsha256.lo:  \
	crypto_auth/hmacsha256/cp/$(am__dirstamp) \
	crypto_auth/hmacsha256/cp/$(DEPDIR)/$(am__dirstamp)
crypto_auth/hmacsha256/cp/libsodium_la-verify_hmacsha256.lo:  \
	crypto_auth/hmacsha256/cp/$(am__dirstamp) \
	crypto_auth/hmacsha256/cp/$(DEPDIR)/$(am__dirstamp)
crypto_auth/hmacsha512/$(am__dirstamp):
	@$(MKDIR_P) crypto_auth/hmacsha512
	@: > crypto_auth/hmacsha512/$(am__dirstamp)
crypto_auth/hmacsha512/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_auth/hmacsha512/$(DEPDIR)
	@: > crypto_auth/hmacsha512/$(DEPDIR)/$(am__dirstamp)
crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512_api.lo:  \
	crypto_auth/hmacsha512/$(am__dirstamp) \
	crypto_auth/hmacsha512/$(DEPDIR)/$(am__dirstamp)
crypto_auth/hmacsha512/cp/$(am__dirstamp):
	@$(MKDIR_P) crypto_auth/hmacsha512/cp
	@: > crypto_auth/hmacsha512/cp/$(am__dirstamp)
crypto_auth/hmacsha512/cp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_auth/hmacsha512/cp/$(DEPDIR)
	@: > crypto_auth/hmacsha512/cp/$(DEPDIR)/$(am__dirstamp)
crypto_auth/hmacsha512/cp/libsodium_la-hmac_hmacsha512.lo:  \
	crypto_auth/hmacsha512/cp/$(am__dirstamp) \
	crypto_auth/hmacsha512/cp/$(DEPDIR)/$(am__dirstamp)
crypto_auth/hmacsha512/cp/libsodium_la-verify_hmacsha512.lo:  \
	crypto_auth/hmacsha512/cp/$(am__dirstamp) \
	crypto_auth/hmacsha512/cp/$(DEPDIR)/$(am__dirstamp)
crypto_auth/hmacsha512256/$(am__dirstamp):
	@$(MKDIR_P) crypto_auth/hmacsha512256
	@: > crypto_auth/hmacsha512256/$(am__dirstamp)
crypto_auth/hmacsha512256/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_auth/hmacsha512256/$(DEPDIR)
	@: > crypto_auth/hmacsha512256/$(DEPDIR)/$(am__dirstamp)
crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256_api.lo:  \
	crypto_auth/hmacsha512256/$(am__dirstamp) \
	crypto_auth/hmacsha512256/$(DEPDIR)/$(am__dirstamp)
crypto_auth/hmacsha512256/cp/$(am__dirstamp):
	@$(MKDIR_P) crypto_auth/hmacsha512256/cp
	@: > crypto_auth/hmacsha512256/cp/$(am__dirstamp)
crypto_auth/hmacsha512256/cp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_auth/hmacsha512256/cp/$(DEPDIR)
	@: > crypto_auth/hmacsha512256/cp/$(DEPDIR)/$(am__dirstamp)
crypto_auth/hmacsha512256/cp/libsodium_la-hmac_hmacsha512256.lo:  \
	crypto_auth/hmacsha512256/cp/$(am__dirstamp) \
	crypto_auth/hmacsha512256/cp/$(DEPDIR)/$(am__dirstamp)
crypto_auth/hmacsha512256/cp/libsodium_la-verify_hmacsha512256.lo:  \
	crypto_auth/hmacsha512256/cp/$(am__dirstamp) \
	crypto_auth/hmacsha512256/cp/$(DEPDIR)/$(am__dirstamp)
crypto_box/$(am__dirstamp):
	@$(MKDIR_P) crypto_box
	@: > crypto_box/$(am__dirstamp)
crypto_box/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_box/$(DEPDIR)
	@: > crypto_box/$(DEPDIR)/$(am__dirstamp)
crypto_box/libsodium_la-crypto_box.lo: crypto_box/$(am__dirstamp) \
	crypto_box/$(DEPDIR)/$(am__dirstamp)
crypto_box/libsodium_la-crypto_box_easy.lo:  \
	crypto_box/$(am__dirstamp) \
	crypto_box/$(DEPDIR)/$(am__dirstamp)
crypto_box/libsodium_la-crypto_box_seal.lo:  \
	crypto_box/$(am__dirstamp) \
	crypto_box/$(DEPDIR)/$(am__dirstamp)
crypto_box/curve25519xsalsa20poly1305/$(am__dirstamp):
	@$(MKDIR_P) crypto_box/curve25519xsalsa20poly1305
	@: > crypto_box/curve25519xsalsa20poly1305/$(am__dirstamp)
crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)
	@: > crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/$(am__dirstamp)
crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305_api.lo:  \
	crypto_box/curve25519xsalsa20poly1305/$(am__dirstamp) \
	crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/$(am__dirstamp)
crypto_box/curve25519xsalsa20poly1305/ref/$(am__dirstamp):
	@$(MKDIR_P) crypto_box/curve25519xsalsa20poly1305/ref
	@: > crypto_box/curve25519xsalsa20poly1305/ref/$(am__dirstamp)
crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)
	@: > crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/$(am__dirstamp)
crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-after_curve25519xsalsa20poly1305.lo:  \
	crypto_box/curve25519xsalsa20poly1305/ref/$(am__dirstamp) \
	crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/$(am__dirstamp)
crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-before_curve25519xsalsa20poly1305.lo:  \
	crypto_box/curve25519xsalsa20poly1305/ref/$(am__dirstamp) \
	crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/$(am__dirstamp)
crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-box_curve25519xsalsa20poly1305.lo:  \
	crypto_box/curve25519xsalsa20poly1305/ref/$(am__dirstamp) \
	crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/$(am__dirstamp)
crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-keypair_curve25519xsalsa20poly1305.lo:  \
	crypto_box/curve25519xsalsa20poly1305/ref/$(am__dirstamp) \
	crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/$(am__dirstamp)
crypto_core/hsalsa20/ref2/$(am__dirstamp):
	@$(MKDIR_P) crypto_core/hsalsa20/ref2
	@: > crypto_core/hsalsa20/ref2/$(am__dirstamp)
crypto_core/hsalsa20/ref2/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_core/hsalsa20/ref2/$(DEPDIR)
	@: > crypto_core/hsalsa20/ref2/$(DEPDIR)/$(am__dirstamp)
crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20.lo:  \
	crypto_core/hsalsa20/ref2/$(am__dirstamp) \
	crypto_core/hsalsa20/ref2/$(DEPDIR)/$(am__dirstamp)
crypto_core/hsalsa20/$(am__dirstamp):
	@$(MKDIR_P) crypto_core/hsalsa20
	@: > crypto_core/hsalsa20/$(am__dirstamp)
crypto_core/hsalsa20/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_core/hsalsa20/$(DEPDIR)
	@: > crypto_core/hsalsa20/$(DEPDIR)/$(am__dirstamp)
crypto_core/hsalsa20/libsodium_la-core_hsalsa20_api.lo:  \
	crypto_core/hsalsa20/$(am__dirstamp) \
	crypto_core/hsalsa20/$(DEPDIR)/$(am__dirstamp)
crypto_core/salsa20/ref/$(am__dirstamp):
	@$(MKDIR_P) crypto_core/salsa20/ref
	@: > crypto_core/salsa20/ref/$(am__dirstamp)
crypto_core/salsa20/ref/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_core/salsa20/ref/$(DEPDIR)
	@: > crypto_core/salsa20/ref/$(DEPDIR)/$(am__dirstamp)
crypto_core/salsa20/ref/libsodium_la-core_salsa20.lo:  \
	crypto_core/salsa20/ref/$(am__dirstamp) \
	crypto_core/salsa20/ref/$(DEPDIR)/$(am__dirstamp)
crypto_core/salsa20/$(am__dirstamp):
	@$(MKDIR_P) crypto_core/salsa20
	@: > crypto_core/salsa20/$(am__dirstamp)
crypto_core/salsa20/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_core/salsa20/$(DEPDIR)
	@: > crypto_core/salsa20/$(DEPDIR)/$(am__dirstamp)
crypto_core/salsa20/libsodium_la-core_salsa20_api.lo:  \
	crypto_core/salsa20/$(am__dirstamp) \
	crypto_core/salsa20/$(DEPDIR)/$(am__dirstamp)
crypto_generichash/$(am__dirstamp):
	@$(MKDIR_P) crypto_generichash
	@: > crypto_generichash/$(am__dirstamp)
crypto_generichash/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_generichash/$(DEPDIR)
	@: > crypto_generichash/$(DEPDIR)/$(am__dirstamp)
crypto_generichash/libsodium_la-crypto_generichash.lo:  \
	crypto_generichash/$(am__dirstamp) \
	crypto_generichash/$(DEPDIR)/$(am__dirstamp)
crypto_generichash/blake2/$(am__dirstamp):
	@$(MKDIR_P) crypto_generichash/blake2
	@: > crypto_generichash/blake2/$(am__dirstamp)
crypto_generichash/blake2/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_generichash/blake2/$(DEPDIR)
	@: > crypto_generichash/blake2/$(DEPDIR)/$(am__dirstamp)
crypto_generichash/blake2/libsodium_la-generichash_blake2_api.lo:  \
	crypto_generichash/blake2/$(am__dirstamp) \
	crypto_generichash/blake2/$(DEPDIR)/$(am__dirstamp)
crypto_generichash/blake2/ref/$(am__dirstamp):
	@$(MKDIR_P) crypto_generichash/blake2/ref
	@: > crypto_generichash/blake2/ref/$(am__dirstamp)
crypto_generichash/blake2/ref/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_generichash/blake2/ref/$(DEPDIR)
	@: > crypto_generichash/blake2/ref/$(DEPDIR)/$(am__dirstamp)
crypto_generichash/blake2/ref/libsodium_la-blake2b-ref.lo:  \
	crypto_generichash/blake2/ref/$(am__dirstamp) \
	crypto_generichash/blake2/ref/$(DEPDIR)/$(am__dirstamp)
crypto_generichash/blake2/ref/libsodium_la-generichash_blake2b.lo:  \
	crypto_generichash/blake2/ref/$(am__dirstamp) \
	crypto_generichash/blake2/ref/$(DEPDIR)/$(am__dirstamp)
crypto_hash/$(am__dirstamp):
	@$(MKDIR_P) crypto_hash
	@: > crypto_hash/$(am__dirstamp)
crypto_hash/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_hash/$(DEPDIR)
	@: > crypto_hash/$(DEPDIR)/$(am__dirstamp)
crypto_hash/libsodium_la-crypto_hash.lo: crypto_hash/$(am__dirstamp) \
	crypto_hash/$(DEPDIR)/$(am__dirstamp)
crypto_hash/sha256/$(am__dirstamp):
	@$(MKDIR_P) crypto_hash/sha256
	@: > crypto_hash/sha256/$(am__dirstamp)
crypto_hash/sha256/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_hash/sha256/$(DEPDIR)
	@: > crypto_hash/sha256/$(DEPDIR)/$(am__dirstamp)
crypto_hash/sha256/libsodium_la-hash_sha256_api.lo:  \
	crypto_hash/sha256/$(am__dirstamp) \
	crypto_hash/sha256/$(DEPDIR)/$(am__dirstamp)
crypto_hash/sha256/cp/$(am__dirstamp):
	@$(MKDIR_P) crypto_hash/sha256/cp
	@: > crypto_hash/sha256/cp/$(am__dirstamp)
crypto_hash/sha256/cp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_hash/sha256/cp/$(DEPDIR)
	@: > crypto_hash/sha256/cp/$(DEPDIR)/$(am__dirstamp)
crypto_hash/sha256/cp/libsodium_la-hash_sha256.lo:  \
	crypto_hash/sha256/cp/$(am__dirstamp) \
	crypto_hash/sha256/cp/$(DEPDIR)/$(am__dirstamp)
crypto_hash/sha512/$(am__dirstamp):
	@$(MKDIR_P) crypto_hash/sha512
	@: > crypto_hash/sha512/$(am__dirstamp)
crypto_hash/sha512/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_hash/sha512/$(DEPDIR)
	@: > crypto_hash/sha512/$(DEPDIR)/$(am__dirstamp)
crypto_hash/sha512/libsodium_la-hash_sha512_api.lo:  \
	crypto_hash/sha512/$(am__dirstamp) \
	crypto_hash/sha512/$(DEPDIR)/$(am__dirstamp)
crypto_hash/sha512/cp/$(am__dirstamp):
	@$(MKDIR_P) crypto_hash/sha512/cp
	@: > crypto_hash/sha512/cp/$(am__dirstamp)
crypto_hash/sha512/cp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_hash/sha512/cp/$(DEPDIR)
	@: > crypto_hash/sha512/cp/$(DEPDIR)/$(am__dirstamp)
crypto_hash/sha512/cp/libsodium_la-hash_sha512.lo:  \
	crypto_hash/sha512/cp/$(am__dirstamp) \
	crypto_hash/sha512/cp/$(DEPDIR)/$(am__dirstamp)
crypto_onetimeauth/$(am__dirstamp):
	@$(MKDIR_P) crypto_onetimeauth
	@: > crypto_onetimeauth/$(am__dirstamp)
crypto_onetimeauth/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_onetimeauth/$(DEPDIR)
	@: > crypto_onetimeauth/$(DEPDIR)/$(am__dirstamp)
crypto_onetimeauth/libsodium_la-crypto_onetimeauth.lo:  \
	crypto_onetimeauth/$(am__dirstamp) \
	crypto_onetimeauth/$(DEPDIR)/$(am__dirstamp)
crypto_onetimeauth/poly1305/$(am__dirstamp):
	@$(MKDIR_P) crypto_onetimeauth/poly1305
	@: > crypto_onetimeauth/poly1305/$(am__dirstamp)
crypto_onetimeauth/poly1305/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_onetimeauth/poly1305/$(DEPDIR)
	@: > crypto_onetimeauth/poly1305/$(DEPDIR)/$(am__dirstamp)
crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305.lo:  \
	crypto_onetimeauth/poly1305/$(am__dirstamp) \
	crypto_onetimeauth/poly1305/$(DEPDIR)/$(am__dirstamp)
crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305_api.lo:  \
	crypto_onetimeauth/poly1305/$(am__dirstamp) \
	crypto_onetimeauth/poly1305/$(DEPDIR)/$(am__dirstamp)
crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305_try.lo:  \
	crypto_onetimeauth/poly1305/$(am__dirstamp) \
	crypto_onetimeauth/poly1305/$(DEPDIR)/$(am__dirstamp)
crypto_onetimeauth/poly1305/donna/$(am__dirstamp):
	@$(MKDIR_P) crypto_onetimeauth/poly1305/donna
	@: > crypto_onetimeauth/poly1305/donna/$(am__dirstamp)
crypto_onetimeauth/poly1305/donna/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_onetimeauth/poly1305/donna/$(DEPDIR)
	@: > crypto_onetimeauth/poly1305/donna/$(DEPDIR)/$(am__dirstamp)
crypto_onetimeauth/poly1305/donna/libsodium_la-auth_poly1305_donna.lo:  \
	crypto_onetimeauth/poly1305/donna/$(am__dirstamp) \
	crypto_onetimeauth/poly1305/donna/$(DEPDIR)/$(am__dirstamp)
crypto_onetimeauth/poly1305/donna/libsodium_la-verify_poly1305_donna.lo:  \
	crypto_onetimeauth/poly1305/donna/$(am__dirstamp) \
	crypto_onetimeauth/poly1305/donna/$(DEPDIR)/$(am__dirstamp)
crypto_pwhash/scryptsalsa208sha256/$(am__dirstamp):
	@$(MKDIR_P) crypto_pwhash/scryptsalsa208sha256
	@: > crypto_pwhash/scryptsalsa208sha256/$(am__dirstamp)
crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)
	@: > crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/$(am__dirstamp)
crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo:  \
	crypto_pwhash/scryptsalsa208sha256/$(am__dirstamp) \
	crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/$(am__dirstamp)
crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo:  \
	crypto_pwhash/scryptsalsa208sha256/$(am__dirstamp) \
	crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/$(am__dirstamp)
crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo:  \
	crypto_pwhash/scryptsalsa208sha256/$(am__dirstamp) \
	crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/$(am__dirstamp)
crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo:  \
	crypto_pwhash/scryptsalsa208sha256/$(am__dirstamp) \
	crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/$(am__dirstamp)
crypto_pwhash/scryptsalsa208sha256/nosse/$(am__dirstamp):
	@$(MKDIR_P) crypto_pwhash/scryptsalsa208sha256/nosse
	@: > crypto_pwhash/scryptsalsa208sha256/nosse/$(am__dirstamp)
crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)
	@: > crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/$(am__dirstamp)
crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo:  \
	crypto_pwhash/scryptsalsa208sha256/nosse/$(am__dirstamp) \
	crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/$(am__dirstamp)
crypto_pwhash/scryptsalsa208sha256/sse/$(am__dirstamp):
	@$(MKDIR_P) crypto_pwhash/scryptsalsa208sha256/sse
	@: > crypto_pwhash/scryptsalsa208sha256/sse/$(am__dirstamp)
crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)
	@: > crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)/$(am__dirstamp)
crypto_pwhash/scryptsalsa208sha256/sse/libsodium_la-pwhash_scryptsalsa208sha256_sse.lo:  \
	crypto_pwhash/scryptsalsa208sha256/sse/$(am__dirstamp) \
	crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)/$(am__dirstamp)
crypto_scalarmult/$(am__dirstamp):
	@$(MKDIR_P) crypto_scalarmult
	@: > crypto_scalarmult/$(am__dirstamp)
crypto_scalarmult/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_scalarmult/$(DEPDIR)
	@: > crypto_scalarmult/$(DEPDIR)/$(am__dirstamp)
crypto_scalarmult/libsodium_la-crypto_scalarmult.lo:  \
	crypto_scalarmult/$(am__dirstamp) \
	crypto_scalarmult/$(DEPDIR)/$(am__dirstamp)
crypto_scalarmult/curve25519/$(am__dirstamp):
	@$(MKDIR_P) crypto_scalarmult/curve25519
	@: > crypto_scalarmult/curve25519/$(am__dirstamp)
crypto_scalarmult/curve25519/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_scalarmult/curve25519/$(DEPDIR)
	@: > crypto_scalarmult/curve25519/$(DEPDIR)/$(am__dirstamp)
crypto_scalarmult/curve25519/libsodium_la-scalarmult_curve25519_api.lo:  \
	crypto_scalarmult/curve25519/$(am__dirstamp) \
	crypto_scalarmult/curve25519/$(DEPDIR)/$(am__dirstamp)
crypto_secretbox/$(am__dirstamp):
	@$(MKDIR_P) crypto_secretbox
	@: > crypto_secretbox/$(am__dirstamp)
crypto_secretbox/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_secretbox/$(DEPDIR)
	@: > crypto_secretbox/$(DEPDIR)/$(am__dirstamp)
crypto_secretbox/libsodium_la-crypto_secretbox.lo:  \
	crypto_secretbox/$(am__dirstamp) \
	crypto_secretbox/$(DEPDIR)/$(am__dirstamp)
crypto_secretbox/libsodium_la-crypto_secretbox_easy.lo:  \
	crypto_secretbox/$(am__dirstamp) \
	crypto_secretbox/$(DEPDIR)/$(am__dirstamp)
crypto_secretbox/xsalsa20poly1305/$(am__dirstamp):
	@$(MKDIR_P) crypto_secretbox/xsalsa20poly1305
	@: > crypto_secretbox/xsalsa20poly1305/$(am__dirstamp)
crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_secretbox/xsalsa20poly1305/$(DEPDIR)
	@: > crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/$(am__dirstamp)
crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305_api.lo:  \
	crypto_secretbox/xsalsa20poly1305/$(am__dirstamp) \
	crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/$(am__dirstamp)
crypto_secretbox/xsalsa20poly1305/ref/$(am__dirstamp):
	@$(MKDIR_P) crypto_secretbox/xsalsa20poly1305/ref
	@: > crypto_secretbox/xsalsa20poly1305/ref/$(am__dirstamp)
crypto_secretbox/xsalsa20poly1305/ref/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_secretbox/xsalsa20poly1305/ref/$(DEPDIR)
	@: > crypto_secretbox/xsalsa20poly1305/ref/$(DEPDIR)/$(am__dirstamp)
crypto_secretbox/xsalsa20poly1305/ref/libsodium_la-box_xsalsa20poly1305.lo:  \
	crypto_secretbox/xsalsa20poly1305/ref/$(am__dirstamp) \
	crypto_secretbox/xsalsa20poly1305/ref/$(DEPDIR)/$(am__dirstamp)
crypto_shorthash/$(am__dirstamp):
	@$(MKDIR_P) crypto_shorthash
	@: > crypto_shorthash/$(am__dirstamp)
crypto_shorthash/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_shorthash/$(DEPDIR)
	@: > crypto_shorthash/$(DEPDIR)/$(am__dirstamp)
crypto_shorthash/libsodium_la-crypto_shorthash.lo:  \
	crypto_shorthash/$(am__dirstamp) \
	crypto_shorthash/$(DEPDIR)/$(am__dirstamp)
crypto_shorthash/siphash24/$(am__dirstamp):
	@$(MKDIR_P) crypto_shorthash/siphash24
	@: > crypto_shorthash/siphash24/$(am__dirstamp)
crypto_shorthash/siphash24/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_shorthash/siphash24/$(DEPDIR)
	@: > crypto_shorthash/siphash24/$(DEPDIR)/$(am__dirstamp)
crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24_api.lo:  \
	crypto_shorthash/siphash24/$(am__dirstamp) \
	crypto_shorthash/siphash24/$(DEPDIR)/$(am__dirstamp)
crypto_shorthash/siphash24/ref/$(am__dirstamp):
	@$(MKDIR_P) crypto_shorthash/siphash24/ref
	@: > crypto_shorthash/siphash24/ref/$(am__dirstamp)
crypto_shorthash/siphash24/ref/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_shorthash/siphash24/ref/$(DEPDIR)
	@: > crypto_shorthash/siphash24/ref/$(DEPDIR)/$(am__dirstamp)
crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24.lo:  \
	crypto_shorthash/siphash24/ref/$(am__dirstamp) \
	crypto_shorthash/siphash24/ref/$(DEPDIR)/$(am__dirstamp)
crypto_sign/$(am__dirstamp):
	@$(MKDIR_P) crypto_sign
	@: > crypto_sign/$(am__dirstamp)
crypto_sign/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_sign/$(DEPDIR)
	@: > crypto_sign/$(DEPDIR)/$(am__dirstamp)
crypto_sign/libsodium_la-crypto_sign.lo: crypto_sign/$(am__dirstamp) \
	crypto_sign/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/$(am__dirstamp):
	@$(MKDIR_P) crypto_sign/ed25519
	@: > crypto_sign/ed25519/$(am__dirstamp)
crypto_sign/ed25519/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_sign/ed25519/$(DEPDIR)
	@: > crypto_sign/ed25519/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/libsodium_la-sign_ed25519_api.lo:  \
	crypto_sign/ed25519/$(am__dirstamp) \
	crypto_sign/ed25519/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/$(am__dirstamp):
	@$(MKDIR_P) crypto_sign/ed25519/ref10
	@: > crypto_sign/ed25519/ref10/$(am__dirstamp)
crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_sign/ed25519/ref10/$(DEPDIR)
	@: > crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-fe_0.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-fe_1.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-fe_add.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-fe_cmov.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-fe_copy.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-fe_frombytes.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-fe_invert.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-fe_isnegative.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-fe_isnonzero.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-fe_mul.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-fe_neg.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-fe_pow22523.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-fe_sq.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-fe_sq2.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-fe_sub.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-fe_tobytes.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-ge_add.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-ge_double_scalarmult.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-ge_frombytes.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-ge_madd.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-ge_msub.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p2.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p3.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-ge_p2_0.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-ge_p2_dbl.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-ge_p3_0.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-ge_p3_dbl.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_cached.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_p2.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-ge_p3_tobytes.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-ge_precomp_0.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-ge_scalarmult_base.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-ge_sub.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-ge_tobytes.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-keypair.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-open.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-sc_muladd.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-sc_reduce.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_sign/ed25519/ref10/libsodium_la-sign.lo:  \
	crypto_sign/ed25519/ref10/$(am__dirstamp) \
	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_stream/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream
	@: > crypto_stream/$(am__dirstamp)
crypto_stream/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/$(DEPDIR)
	@: > crypto_stream/$(DEPDIR)/$(am__dirstamp)
crypto_stream/libsodium_la-crypto_stream.lo:  \
	crypto_stream/$(am__dirstamp) \
	crypto_stream/$(DEPDIR)/$(am__dirstamp)
crypto_stream/chacha20/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/chacha20
	@: > crypto_stream/chacha20/$(am__dirstamp)
crypto_stream/chacha20/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/chacha20/$(DEPDIR)
	@: > crypto_stream/chacha20/$(DEPDIR)/$(am__dirstamp)
crypto_stream/chacha20/libsodium_la-stream_chacha20_api.lo:  \
	crypto_stream/chacha20/$(am__dirstamp) \
	crypto_stream/chacha20/$(DEPDIR)/$(am__dirstamp)
crypto_stream/chacha20/ref/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/chacha20/ref
	@: > crypto_stream/chacha20/ref/$(am__dirstamp)
crypto_stream/chacha20/ref/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/chacha20/ref/$(DEPDIR)
	@: > crypto_stream/chacha20/ref/$(DEPDIR)/$(am__dirstamp)
crypto_stream/chacha20/ref/libsodium_la-stream_chacha20_ref.lo:  \
	crypto_stream/chacha20/ref/$(am__dirstamp) \
	crypto_stream/chacha20/ref/$(DEPDIR)/$(am__dirstamp)
crypto_stream/salsa20/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/salsa20
	@: > crypto_stream/salsa20/$(am__dirstamp)
crypto_stream/salsa20/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/salsa20/$(DEPDIR)
	@: > crypto_stream/salsa20/$(DEPDIR)/$(am__dirstamp)
crypto_stream/salsa20/libsodium_la-stream_salsa20_api.lo:  \
	crypto_stream/salsa20/$(am__dirstamp) \
	crypto_stream/salsa20/$(DEPDIR)/$(am__dirstamp)
crypto_stream/xsalsa20/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/xsalsa20
	@: > crypto_stream/xsalsa20/$(am__dirstamp)
crypto_stream/xsalsa20/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/xsalsa20/$(DEPDIR)
	@: > crypto_stream/xsalsa20/$(DEPDIR)/$(am__dirstamp)
crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20_api.lo:  \
	crypto_stream/xsalsa20/$(am__dirstamp) \
	crypto_stream/xsalsa20/$(DEPDIR)/$(am__dirstamp)
crypto_stream/xsalsa20/ref/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/xsalsa20/ref
	@: > crypto_stream/xsalsa20/ref/$(am__dirstamp)
crypto_stream/xsalsa20/ref/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/xsalsa20/ref/$(DEPDIR)
	@: > crypto_stream/xsalsa20/ref/$(DEPDIR)/$(am__dirstamp)
crypto_stream/xsalsa20/ref/libsodium_la-stream_xsalsa20.lo:  \
	crypto_stream/xsalsa20/ref/$(am__dirstamp) \
	crypto_stream/xsalsa20/ref/$(DEPDIR)/$(am__dirstamp)
crypto_stream/xsalsa20/ref/libsodium_la-xor_xsalsa20.lo:  \
	crypto_stream/xsalsa20/ref/$(am__dirstamp) \
	crypto_stream/xsalsa20/ref/$(DEPDIR)/$(am__dirstamp)
crypto_verify/16/$(am__dirstamp):
	@$(MKDIR_P) crypto_verify/16
	@: > crypto_verify/16/$(am__dirstamp)
crypto_verify/16/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_verify/16/$(DEPDIR)
	@: > crypto_verify/16/$(DEPDIR)/$(am__dirstamp)
crypto_verify/16/libsodium_la-verify_16_api.lo:  \
	crypto_verify/16/$(am__dirstamp) \
	crypto_verify/16/$(DEPDIR)/$(am__dirstamp)
crypto_verify/16/ref/$(am__dirstamp):
	@$(MKDIR_P) crypto_verify/16/ref
	@: > crypto_verify/16/ref/$(am__dirstamp)
crypto_verify/16/ref/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_verify/16/ref/$(DEPDIR)
	@: > crypto_verify/16/ref/$(DEPDIR)/$(am__dirstamp)
crypto_verify/16/ref/libsodium_la-verify_16.lo:  \
	crypto_verify/16/ref/$(am__dirstamp) \
	crypto_verify/16/ref/$(DEPDIR)/$(am__dirstamp)
crypto_verify/32/$(am__dirstamp):
	@$(MKDIR_P) crypto_verify/32
	@: > crypto_verify/32/$(am__dirstamp)
crypto_verify/32/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_verify/32/$(DEPDIR)
	@: > crypto_verify/32/$(DEPDIR)/$(am__dirstamp)
crypto_verify/32/libsodium_la-verify_32_api.lo:  \
	crypto_verify/32/$(am__dirstamp) \
	crypto_verify/32/$(DEPDIR)/$(am__dirstamp)
crypto_verify/32/ref/$(am__dirstamp):
	@$(MKDIR_P) crypto_verify/32/ref
	@: > crypto_verify/32/ref/$(am__dirstamp)
crypto_verify/32/ref/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_verify/32/ref/$(DEPDIR)
	@: > crypto_verify/32/ref/$(DEPDIR)/$(am__dirstamp)
crypto_verify/32/ref/libsodium_la-verify_32.lo:  \
	crypto_verify/32/ref/$(am__dirstamp) \
	crypto_verify/32/ref/$(DEPDIR)/$(am__dirstamp)
crypto_verify/64/$(am__dirstamp):
	@$(MKDIR_P) crypto_verify/64
	@: > crypto_verify/64/$(am__dirstamp)
crypto_verify/64/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_verify/64/$(DEPDIR)
	@: > crypto_verify/64/$(DEPDIR)/$(am__dirstamp)
crypto_verify/64/libsodium_la-verify_64_api.lo:  \
	crypto_verify/64/$(am__dirstamp) \
	crypto_verify/64/$(DEPDIR)/$(am__dirstamp)
crypto_verify/64/ref/$(am__dirstamp):
	@$(MKDIR_P) crypto_verify/64/ref
	@: > crypto_verify/64/ref/$(am__dirstamp)
crypto_verify/64/ref/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_verify/64/ref/$(DEPDIR)
	@: > crypto_verify/64/ref/$(DEPDIR)/$(am__dirstamp)
crypto_verify/64/ref/libsodium_la-verify_64.lo:  \
	crypto_verify/64/ref/$(am__dirstamp) \
	crypto_verify/64/ref/$(DEPDIR)/$(am__dirstamp)
randombytes/$(am__dirstamp):
	@$(MKDIR_P) randombytes
	@: > randombytes/$(am__dirstamp)
randombytes/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) randombytes/$(DEPDIR)
	@: > randombytes/$(DEPDIR)/$(am__dirstamp)
randombytes/libsodium_la-randombytes.lo: randombytes/$(am__dirstamp) \
	randombytes/$(DEPDIR)/$(am__dirstamp)
sodium/$(am__dirstamp):
	@$(MKDIR_P) sodium
	@: > sodium/$(am__dirstamp)
sodium/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) sodium/$(DEPDIR)
	@: > sodium/$(DEPDIR)/$(am__dirstamp)
sodium/libsodium_la-core.lo: sodium/$(am__dirstamp) \
	sodium/$(DEPDIR)/$(am__dirstamp)
sodium/libsodium_la-runtime.lo: sodium/$(am__dirstamp) \
	sodium/$(DEPDIR)/$(am__dirstamp)
sodium/libsodium_la-utils.lo: sodium/$(am__dirstamp) \
	sodium/$(DEPDIR)/$(am__dirstamp)
sodium/libsodium_la-version.lo: sodium/$(am__dirstamp) \
	sodium/$(DEPDIR)/$(am__dirstamp)
randombytes/salsa20/$(am__dirstamp):
	@$(MKDIR_P) randombytes/salsa20
	@: > randombytes/salsa20/$(am__dirstamp)
randombytes/salsa20/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) randombytes/salsa20/$(DEPDIR)
	@: > randombytes/salsa20/$(DEPDIR)/$(am__dirstamp)
randombytes/salsa20/libsodium_la-randombytes_salsa20_random.lo:  \
	randombytes/salsa20/$(am__dirstamp) \
	randombytes/salsa20/$(DEPDIR)/$(am__dirstamp)
randombytes/sysrandom/$(am__dirstamp):
	@$(MKDIR_P) randombytes/sysrandom
	@: > randombytes/sysrandom/$(am__dirstamp)
randombytes/sysrandom/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) randombytes/sysrandom/$(DEPDIR)
	@: > randombytes/sysrandom/$(DEPDIR)/$(am__dirstamp)
randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo:  \
	randombytes/sysrandom/$(am__dirstamp) \
	randombytes/sysrandom/$(DEPDIR)/$(am__dirstamp)
crypto_scalarmult/curve25519/donna_c64/$(am__dirstamp):
	@$(MKDIR_P) crypto_scalarmult/curve25519/donna_c64
	@: > crypto_scalarmult/curve25519/donna_c64/$(am__dirstamp)
crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)
	@: > crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)/$(am__dirstamp)
crypto_scalarmult/curve25519/donna_c64/libsodium_la-base_curve25519_donna_c64.lo:  \
	crypto_scalarmult/curve25519/donna_c64/$(am__dirstamp) \
	crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)/$(am__dirstamp)
crypto_scalarmult/curve25519/donna_c64/libsodium_la-smult_curve25519_donna_c64.lo:  \
	crypto_scalarmult/curve25519/donna_c64/$(am__dirstamp) \
	crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)/$(am__dirstamp)
crypto_scalarmult/curve25519/ref10/$(am__dirstamp):
	@$(MKDIR_P) crypto_scalarmult/curve25519/ref10
	@: > crypto_scalarmult/curve25519/ref10/$(am__dirstamp)
crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_scalarmult/curve25519/ref10/$(DEPDIR)
	@: > crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_scalarmult/curve25519/ref10/libsodium_la-base_curve25519_ref10.lo:  \
	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_scalarmult/curve25519/ref10/libsodium_la-fe_0_curve25519_ref10.lo:  \
	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_scalarmult/curve25519/ref10/libsodium_la-fe_1_curve25519_ref10.lo:  \
	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_scalarmult/curve25519/ref10/libsodium_la-fe_add_curve25519_ref10.lo:  \
	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_scalarmult/curve25519/ref10/libsodium_la-fe_copy_curve25519_ref10.lo:  \
	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_scalarmult/curve25519/ref10/libsodium_la-fe_cswap_curve25519_ref10.lo:  \
	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_scalarmult/curve25519/ref10/libsodium_la-fe_frombytes_curve25519_ref10.lo:  \
	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_scalarmult/curve25519/ref10/libsodium_la-fe_invert_curve25519_ref10.lo:  \
	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul_curve25519_ref10.lo:  \
	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul121666_curve25519_ref10.lo:  \
	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sq_curve25519_ref10.lo:  \
	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sub_curve25519_ref10.lo:  \
	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_scalarmult/curve25519/ref10/libsodium_la-fe_tobytes_curve25519_ref10.lo:  \
	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_scalarmult/curve25519/ref10/libsodium_la-scalarmult_curve25519_ref10.lo:  \
	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
crypto_stream/salsa20/amd64_xmm6/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/salsa20/amd64_xmm6
	@: > crypto_stream/salsa20/amd64_xmm6/$(am__dirstamp)
crypto_stream/salsa20/amd64_xmm6/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/salsa20/amd64_xmm6/$(DEPDIR)
	@: > crypto_stream/salsa20/amd64_xmm6/$(DEPDIR)/$(am__dirstamp)
crypto_stream/salsa20/amd64_xmm6/libsodium_la-stream_salsa20_amd64_xmm6.lo:  \
	crypto_stream/salsa20/amd64_xmm6/$(am__dirstamp) \
	crypto_stream/salsa20/amd64_xmm6/$(DEPDIR)/$(am__dirstamp)
crypto_stream/salsa20/ref/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/salsa20/ref
	@: > crypto_stream/salsa20/ref/$(am__dirstamp)
crypto_stream/salsa20/ref/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/salsa20/ref/$(DEPDIR)
	@: > crypto_stream/salsa20/ref/$(DEPDIR)/$(am__dirstamp)
crypto_stream/salsa20/ref/libsodium_la-stream_salsa20_ref.lo:  \
	crypto_stream/salsa20/ref/$(am__dirstamp) \
	crypto_stream/salsa20/ref/$(DEPDIR)/$(am__dirstamp)
crypto_stream/salsa20/ref/libsodium_la-xor_salsa20_ref.lo:  \
	crypto_stream/salsa20/ref/$(am__dirstamp) \
	crypto_stream/salsa20/ref/$(DEPDIR)/$(am__dirstamp)
crypto_core/salsa2012/ref/$(am__dirstamp):
	@$(MKDIR_P) crypto_core/salsa2012/ref
	@: > crypto_core/salsa2012/ref/$(am__dirstamp)
crypto_core/salsa2012/ref/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_core/salsa2012/ref/$(DEPDIR)
	@: > crypto_core/salsa2012/ref/$(DEPDIR)/$(am__dirstamp)
crypto_core/salsa2012/ref/libsodium_la-core_salsa2012.lo:  \
	crypto_core/salsa2012/ref/$(am__dirstamp) \
	crypto_core/salsa2012/ref/$(DEPDIR)/$(am__dirstamp)
crypto_core/salsa2012/$(am__dirstamp):
	@$(MKDIR_P) crypto_core/salsa2012
	@: > crypto_core/salsa2012/$(am__dirstamp)
crypto_core/salsa2012/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_core/salsa2012/$(DEPDIR)
	@: > crypto_core/salsa2012/$(DEPDIR)/$(am__dirstamp)
crypto_core/salsa2012/libsodium_la-core_salsa2012_api.lo:  \
	crypto_core/salsa2012/$(am__dirstamp) \
	crypto_core/salsa2012/$(DEPDIR)/$(am__dirstamp)
crypto_core/salsa208/ref/$(am__dirstamp):
	@$(MKDIR_P) crypto_core/salsa208/ref
	@: > crypto_core/salsa208/ref/$(am__dirstamp)
crypto_core/salsa208/ref/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_core/salsa208/ref/$(DEPDIR)
	@: > crypto_core/salsa208/ref/$(DEPDIR)/$(am__dirstamp)
crypto_core/salsa208/ref/libsodium_la-core_salsa208.lo:  \
	crypto_core/salsa208/ref/$(am__dirstamp) \
	crypto_core/salsa208/ref/$(DEPDIR)/$(am__dirstamp)
crypto_core/salsa208/$(am__dirstamp):
	@$(MKDIR_P) crypto_core/salsa208
	@: > crypto_core/salsa208/$(am__dirstamp)
crypto_core/salsa208/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_core/salsa208/$(DEPDIR)
	@: > crypto_core/salsa208/$(DEPDIR)/$(am__dirstamp)
crypto_core/salsa208/libsodium_la-core_salsa208_api.lo:  \
	crypto_core/salsa208/$(am__dirstamp) \
	crypto_core/salsa208/$(DEPDIR)/$(am__dirstamp)
crypto_sign/edwards25519sha512batch/$(am__dirstamp):
	@$(MKDIR_P) crypto_sign/edwards25519sha512batch
	@: > crypto_sign/edwards25519sha512batch/$(am__dirstamp)
crypto_sign/edwards25519sha512batch/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_sign/edwards25519sha512batch/$(DEPDIR)
	@: > crypto_sign/edwards25519sha512batch/$(DEPDIR)/$(am__dirstamp)
crypto_sign/edwards25519sha512batch/libsodium_la-sign_edwards25519sha512batch_api.lo:  \
	crypto_sign/edwards25519sha512batch/$(am__dirstamp) \
	crypto_sign/edwards25519sha512batch/$(DEPDIR)/$(am__dirstamp)
crypto_sign/edwards25519sha512batch/ref/$(am__dirstamp):
	@$(MKDIR_P) crypto_sign/edwards25519sha512batch/ref
	@: > crypto_sign/edwards25519sha512batch/ref/$(am__dirstamp)
crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)
	@: > crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/$(am__dirstamp)
crypto_sign/edwards25519sha512batch/ref/libsodium_la-fe25519_edwards25519sha512batch.lo:  \
	crypto_sign/edwards25519sha512batch/ref/$(am__dirstamp) \
	crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/$(am__dirstamp)
crypto_sign/edwards25519sha512batch/ref/libsodium_la-ge25519_edwards25519sha512batch.lo:  \
	crypto_sign/edwards25519sha512batch/ref/$(am__dirstamp) \
	crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/$(am__dirstamp)
crypto_sign/edwards25519sha512batch/ref/libsodium_la-sc25519_edwards25519sha512batch.lo:  \
	crypto_sign/edwards25519sha512batch/ref/$(am__dirstamp) \
	crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/$(am__dirstamp)
crypto_sign/edwards25519sha512batch/ref/libsodium_la-sign_edwards25519sha512batch.lo:  \
	crypto_sign/edwards25519sha512batch/ref/$(am__dirstamp) \
	crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/$(am__dirstamp)
crypto_stream/aes128ctr/portable/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/aes128ctr/portable
	@: > crypto_stream/aes128ctr/portable/$(am__dirstamp)
crypto_stream/aes128ctr/portable/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/aes128ctr/portable/$(DEPDIR)
	@: > crypto_stream/aes128ctr/portable/$(DEPDIR)/$(am__dirstamp)
crypto_stream/aes128ctr/portable/libsodium_la-afternm_aes128ctr.lo:  \
	crypto_stream/aes128ctr/portable/$(am__dirstamp) \
	crypto_stream/aes128ctr/portable/$(DEPDIR)/$(am__dirstamp)
crypto_stream/aes128ctr/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/aes128ctr
	@: > crypto_stream/aes128ctr/$(am__dirstamp)
crypto_stream/aes128ctr/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/aes128ctr/$(DEPDIR)
	@: > crypto_stream/aes128ctr/$(DEPDIR)/$(am__dirstamp)
crypto_stream/aes128ctr/libsodium_la-stream_aes128ctr_api.lo:  \
	crypto_stream/aes128ctr/$(am__dirstamp) \
	crypto_stream/aes128ctr/$(DEPDIR)/$(am__dirstamp)
crypto_stream/aes128ctr/portable/libsodium_la-beforenm_aes128ctr.lo:  \
	crypto_stream/aes128ctr/portable/$(am__dirstamp) \
	crypto_stream/aes128ctr/portable/$(DEPDIR)/$(am__dirstamp)
crypto_stream/aes128ctr/portable/libsodium_la-common_aes128ctr.lo:  \
	crypto_stream/aes128ctr/portable/$(am__dirstamp) \
	crypto_stream/aes128ctr/portable/$(DEPDIR)/$(am__dirstamp)
crypto_stream/aes128ctr/portable/libsodium_la-consts_aes128ctr.lo:  \
	crypto_stream/aes128ctr/portable/$(am__dirstamp) \
	crypto_stream/aes128ctr/portable/$(DEPDIR)/$(am__dirstamp)
crypto_stream/aes128ctr/portable/libsodium_la-int128_aes128ctr.lo:  \
	crypto_stream/aes128ctr/portable/$(am__dirstamp) \
	crypto_stream/aes128ctr/portable/$(DEPDIR)/$(am__dirstamp)
crypto_stream/aes128ctr/portable/libsodium_la-stream_aes128ctr.lo:  \
	crypto_stream/aes128ctr/portable/$(am__dirstamp) \
	crypto_stream/aes128ctr/portable/$(DEPDIR)/$(am__dirstamp)
crypto_stream/aes128ctr/portable/libsodium_la-xor_afternm_aes128ctr.lo:  \
	crypto_stream/aes128ctr/portable/$(am__dirstamp) \
	crypto_stream/aes128ctr/portable/$(DEPDIR)/$(am__dirstamp)
crypto_stream/salsa2012/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/salsa2012
	@: > crypto_stream/salsa2012/$(am__dirstamp)
crypto_stream/salsa2012/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/salsa2012/$(DEPDIR)
	@: > crypto_stream/salsa2012/$(DEPDIR)/$(am__dirstamp)
crypto_stream/salsa2012/libsodium_la-stream_salsa2012_api.lo:  \
	crypto_stream/salsa2012/$(am__dirstamp) \
	crypto_stream/salsa2012/$(DEPDIR)/$(am__dirstamp)
crypto_stream/salsa2012/ref/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/salsa2012/ref
	@: > crypto_stream/salsa2012/ref/$(am__dirstamp)
crypto_stream/salsa2012/ref/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/salsa2012/ref/$(DEPDIR)
	@: > crypto_stream/salsa2012/ref/$(DEPDIR)/$(am__dirstamp)
crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012.lo:  \
	crypto_stream/salsa2012/ref/$(am__dirstamp) \
	crypto_stream/salsa2012/ref/$(DEPDIR)/$(am__dirstamp)
crypto_stream/salsa2012/ref/libsodium_la-xor_salsa2012.lo:  \
	crypto_stream/salsa2012/ref/$(am__dirstamp) \
	crypto_stream/salsa2012/ref/$(DEPDIR)/$(am__dirstamp)
crypto_stream/salsa208/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/salsa208
	@: > crypto_stream/salsa208/$(am__dirstamp)
crypto_stream/salsa208/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/salsa208/$(DEPDIR)
	@: > crypto_stream/salsa208/$(DEPDIR)/$(am__dirstamp)
crypto_stream/salsa208/libsodium_la-stream_salsa208_api.lo:  \
	crypto_stream/salsa208/$(am__dirstamp) \
	crypto_stream/salsa208/$(DEPDIR)/$(am__dirstamp)
crypto_stream/salsa208/ref/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/salsa208/ref
	@: > crypto_stream/salsa208/ref/$(am__dirstamp)
crypto_stream/salsa208/ref/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto_stream/salsa208/ref/$(DEPDIR)
	@: > crypto_stream/salsa208/ref/$(DEPDIR)/$(am__dirstamp)
crypto_stream/salsa208/ref/libsodium_la-stream_salsa208.lo:  \
	crypto_stream/salsa208/ref/$(am__dirstamp) \
	crypto_stream/salsa208/ref/$(DEPDIR)/$(am__dirstamp)
crypto_stream/salsa208/ref/libsodium_la-xor_salsa208.lo:  \
	crypto_stream/salsa208/ref/$(am__dirstamp) \
	crypto_stream/salsa208/ref/$(DEPDIR)/$(am__dirstamp)

libsodium.la: $(libsodium_la_OBJECTS) $(libsodium_la_DEPENDENCIES) $(EXTRA_libsodium_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libsodium_la_LINK) -rpath $(libdir) $(libsodium_la_OBJECTS) $(libsodium_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f crypto_aead/chacha20poly1305/sodium/*.$(OBJEXT)
	-rm -f crypto_aead/chacha20poly1305/sodium/*.lo
	-rm -f crypto_auth/*.$(OBJEXT)
	-rm -f crypto_auth/*.lo
	-rm -f crypto_auth/hmacsha256/*.$(OBJEXT)
	-rm -f crypto_auth/hmacsha256/*.lo
	-rm -f crypto_auth/hmacsha256/cp/*.$(OBJEXT)
	-rm -f crypto_auth/hmacsha256/cp/*.lo
	-rm -f crypto_auth/hmacsha512/*.$(OBJEXT)
	-rm -f crypto_auth/hmacsha512/*.lo
	-rm -f crypto_auth/hmacsha512/cp/*.$(OBJEXT)
	-rm -f crypto_auth/hmacsha512/cp/*.lo
	-rm -f crypto_auth/hmacsha512256/*.$(OBJEXT)
	-rm -f crypto_auth/hmacsha512256/*.lo
	-rm -f crypto_auth/hmacsha512256/cp/*.$(OBJEXT)
	-rm -f crypto_auth/hmacsha512256/cp/*.lo
	-rm -f crypto_box/*.$(OBJEXT)
	-rm -f crypto_box/*.lo
	-rm -f crypto_box/curve25519xsalsa20poly1305/*.$(OBJEXT)
	-rm -f crypto_box/curve25519xsalsa20poly1305/*.lo
	-rm -f crypto_box/curve25519xsalsa20poly1305/ref/*.$(OBJEXT)
	-rm -f crypto_box/curve25519xsalsa20poly1305/ref/*.lo
	-rm -f crypto_core/hsalsa20/*.$(OBJEXT)
	-rm -f crypto_core/hsalsa20/*.lo
	-rm -f crypto_core/hsalsa20/ref2/*.$(OBJEXT)
	-rm -f crypto_core/hsalsa20/ref2/*.lo
	-rm -f crypto_core/salsa20/*.$(OBJEXT)
	-rm -f crypto_core/salsa20/*.lo
	-rm -f crypto_core/salsa20/ref/*.$(OBJEXT)
	-rm -f crypto_core/salsa20/ref/*.lo
	-rm -f crypto_core/salsa2012/*.$(OBJEXT)
	-rm -f crypto_core/salsa2012/*.lo
	-rm -f crypto_core/salsa2012/ref/*.$(OBJEXT)
	-rm -f crypto_core/salsa2012/ref/*.lo
	-rm -f crypto_core/salsa208/*.$(OBJEXT)
	-rm -f crypto_core/salsa208/*.lo
	-rm -f crypto_core/salsa208/ref/*.$(OBJEXT)
	-rm -f crypto_core/salsa208/ref/*.lo
	-rm -f crypto_generichash/*.$(OBJEXT)
	-rm -f crypto_generichash/*.lo
	-rm -f crypto_generichash/blake2/*.$(OBJEXT)
	-rm -f crypto_generichash/blake2/*.lo
	-rm -f crypto_generichash/blake2/ref/*.$(OBJEXT)
	-rm -f crypto_generichash/blake2/ref/*.lo
	-rm -f crypto_hash/*.$(OBJEXT)
	-rm -f crypto_hash/*.lo
	-rm -f crypto_hash/sha256/*.$(OBJEXT)
	-rm -f crypto_hash/sha256/*.lo
	-rm -f crypto_hash/sha256/cp/*.$(OBJEXT)
	-rm -f crypto_hash/sha256/cp/*.lo
	-rm -f crypto_hash/sha512/*.$(OBJEXT)
	-rm -f crypto_hash/sha512/*.lo
	-rm -f crypto_hash/sha512/cp/*.$(OBJEXT)
	-rm -f crypto_hash/sha512/cp/*.lo
	-rm -f crypto_onetimeauth/*.$(OBJEXT)
	-rm -f crypto_onetimeauth/*.lo
	-rm -f crypto_onetimeauth/poly1305/*.$(OBJEXT)
	-rm -f crypto_onetimeauth/poly1305/*.lo
	-rm -f crypto_onetimeauth/poly1305/donna/*.$(OBJEXT)
	-rm -f crypto_onetimeauth/poly1305/donna/*.lo
	-rm -f crypto_pwhash/scryptsalsa208sha256/*.$(OBJEXT)
	-rm -f crypto_pwhash/scryptsalsa208sha256/*.lo
	-rm -f crypto_pwhash/scryptsalsa208sha256/nosse/*.$(OBJEXT)
	-rm -f crypto_pwhash/scryptsalsa208sha256/nosse/*.lo
	-rm -f crypto_pwhash/scryptsalsa208sha256/sse/*.$(OBJEXT)
	-rm -f crypto_pwhash/scryptsalsa208sha256/sse/*.lo
	-rm -f crypto_scalarmult/*.$(OBJEXT)
	-rm -f crypto_scalarmult/*.lo
	-rm -f crypto_scalarmult/curve25519/*.$(OBJEXT)
	-rm -f crypto_scalarmult/curve25519/*.lo
	-rm -f crypto_scalarmult/curve25519/donna_c64/*.$(OBJEXT)
	-rm -f crypto_scalarmult/curve25519/donna_c64/*.lo
	-rm -f crypto_scalarmult/curve25519/ref10/*.$(OBJEXT)
	-rm -f crypto_scalarmult/curve25519/ref10/*.lo
	-rm -f crypto_secretbox/*.$(OBJEXT)
	-rm -f crypto_secretbox/*.lo
	-rm -f crypto_secretbox/xsalsa20poly1305/*.$(OBJEXT)
	-rm -f crypto_secretbox/xsalsa20poly1305/*.lo
	-rm -f crypto_secretbox/xsalsa20poly1305/ref/*.$(OBJEXT)
	-rm -f crypto_secretbox/xsalsa20poly1305/ref/*.lo
	-rm -f crypto_shorthash/*.$(OBJEXT)
	-rm -f crypto_shorthash/*.lo
	-rm -f crypto_shorthash/siphash24/*.$(OBJEXT)
	-rm -f crypto_shorthash/siphash24/*.lo
	-rm -f crypto_shorthash/siphash24/ref/*.$(OBJEXT)
	-rm -f crypto_shorthash/siphash24/ref/*.lo
	-rm -f crypto_sign/*.$(OBJEXT)
	-rm -f crypto_sign/*.lo
	-rm -f crypto_sign/ed25519/*.$(OBJEXT)
	-rm -f crypto_sign/ed25519/*.lo
	-rm -f crypto_sign/ed25519/ref10/*.$(OBJEXT)
	-rm -f crypto_sign/ed25519/ref10/*.lo
	-rm -f crypto_sign/edwards25519sha512batch/*.$(OBJEXT)
	-rm -f crypto_sign/edwards25519sha512batch/*.lo
	-rm -f crypto_sign/edwards25519sha512batch/ref/*.$(OBJEXT)
	-rm -f crypto_sign/edwards25519sha512batch/ref/*.lo
	-rm -f crypto_stream/*.$(OBJEXT)
	-rm -f crypto_stream/*.lo
	-rm -f crypto_stream/aes128ctr/*.$(OBJEXT)
	-rm -f crypto_stream/aes128ctr/*.lo
	-rm -f crypto_stream/aes128ctr/portable/*.$(OBJEXT)
	-rm -f crypto_stream/aes128ctr/portable/*.lo
	-rm -f crypto_stream/chacha20/*.$(OBJEXT)
	-rm -f crypto_stream/chacha20/*.lo
	-rm -f crypto_stream/chacha20/ref/*.$(OBJEXT)
	-rm -f crypto_stream/chacha20/ref/*.lo
	-rm -f crypto_stream/salsa20/*.$(OBJEXT)
	-rm -f crypto_stream/salsa20/*.lo
	-rm -f crypto_stream/salsa20/amd64_xmm6/*.$(OBJEXT)
	-rm -f crypto_stream/salsa20/amd64_xmm6/*.lo
	-rm -f crypto_stream/salsa20/ref/*.$(OBJEXT)
	-rm -f crypto_stream/salsa20/ref/*.lo
	-rm -f crypto_stream/salsa2012/*.$(OBJEXT)
	-rm -f crypto_stream/salsa2012/*.lo
	-rm -f crypto_stream/salsa2012/ref/*.$(OBJEXT)
	-rm -f crypto_stream/salsa2012/ref/*.lo
	-rm -f crypto_stream/salsa208/*.$(OBJEXT)
	-rm -f crypto_stream/salsa208/*.lo
	-rm -f crypto_stream/salsa208/ref/*.$(OBJEXT)
	-rm -f crypto_stream/salsa208/ref/*.lo
	-rm -f crypto_stream/xsalsa20/*.$(OBJEXT)
	-rm -f crypto_stream/xsalsa20/*.lo
	-rm -f crypto_stream/xsalsa20/ref/*.$(OBJEXT)
	-rm -f crypto_stream/xsalsa20/ref/*.lo
	-rm -f crypto_verify/16/*.$(OBJEXT)
	-rm -f crypto_verify/16/*.lo
	-rm -f crypto_verify/16/ref/*.$(OBJEXT)
	-rm -f crypto_verify/16/ref/*.lo
	-rm -f crypto_verify/32/*.$(OBJEXT)
	-rm -f crypto_verify/32/*.lo
	-rm -f crypto_verify/32/ref/*.$(OBJEXT)
	-rm -f crypto_verify/32/ref/*.lo
	-rm -f crypto_verify/64/*.$(OBJEXT)
	-rm -f crypto_verify/64/*.lo
	-rm -f crypto_verify/64/ref/*.$(OBJEXT)
	-rm -f crypto_verify/64/ref/*.lo
	-rm -f randombytes/*.$(OBJEXT)
	-rm -f randombytes/*.lo
	-rm -f randombytes/salsa20/*.$(OBJEXT)
	-rm -f randombytes/salsa20/*.lo
	-rm -f randombytes/sysrandom/*.$(OBJEXT)
	-rm -f randombytes/sysrandom/*.lo
	-rm -f sodium/*.$(OBJEXT)
	-rm -f sodium/*.lo

distclean-compile:
	-rm -f *.tab.c

include crypto_aead/chacha20poly1305/sodium/$(DEPDIR)/libsodium_la-aead_chacha20poly1305.Plo
include crypto_auth/$(DEPDIR)/libsodium_la-crypto_auth.Plo
include crypto_auth/hmacsha256/$(DEPDIR)/libsodium_la-auth_hmacsha256_api.Plo
include crypto_auth/hmacsha256/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha256.Plo
include crypto_auth/hmacsha256/cp/$(DEPDIR)/libsodium_la-verify_hmacsha256.Plo
include crypto_auth/hmacsha512/$(DEPDIR)/libsodium_la-auth_hmacsha512_api.Plo
include crypto_auth/hmacsha512/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha512.Plo
include crypto_auth/hmacsha512/cp/$(DEPDIR)/libsodium_la-verify_hmacsha512.Plo
include crypto_auth/hmacsha512256/$(DEPDIR)/libsodium_la-auth_hmacsha512256_api.Plo
include crypto_auth/hmacsha512256/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha512256.Plo
include crypto_auth/hmacsha512256/cp/$(DEPDIR)/libsodium_la-verify_hmacsha512256.Plo
include crypto_box/$(DEPDIR)/libsodium_la-crypto_box.Plo
include crypto_box/$(DEPDIR)/libsodium_la-crypto_box_easy.Plo
include crypto_box/$(DEPDIR)/libsodium_la-crypto_box_seal.Plo
include crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305_api.Plo
include crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-after_curve25519xsalsa20poly1305.Plo
include crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-before_curve25519xsalsa20poly1305.Plo
include crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305.Plo
include crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-keypair_curve25519xsalsa20poly1305.Plo
include crypto_core/hsalsa20/$(DEPDIR)/libsodium_la-core_hsalsa20_api.Plo
include crypto_core/hsalsa20/ref2/$(DEPDIR)/libsodium_la-core_hsalsa20.Plo
include crypto_core/salsa20/$(DEPDIR)/libsodium_la-core_salsa20_api.Plo
include crypto_core/salsa20/ref/$(DEPDIR)/libsodium_la-core_salsa20.Plo
include crypto_core/salsa2012/$(DEPDIR)/libsodium_la-core_salsa2012_api.Plo
include crypto_core/salsa2012/ref/$(DEPDIR)/libsodium_la-core_salsa2012.Plo
include crypto_core/salsa208/$(DEPDIR)/libsodium_la-core_salsa208_api.Plo
include crypto_core/salsa208/ref/$(DEPDIR)/libsodium_la-core_salsa208.Plo
include crypto_generichash/$(DEPDIR)/libsodium_la-crypto_generichash.Plo
include crypto_generichash/blake2/$(DEPDIR)/libsodium_la-generichash_blake2_api.Plo
include crypto_generichash/blake2/ref/$(DEPDIR)/libsodium_la-blake2b-ref.Plo
include crypto_generichash/blake2/ref/$(DEPDIR)/libsodium_la-generichash_blake2b.Plo
include crypto_hash/$(DEPDIR)/libsodium_la-crypto_hash.Plo
include crypto_hash/sha256/$(DEPDIR)/libsodium_la-hash_sha256_api.Plo
include crypto_hash/sha256/cp/$(DEPDIR)/libsodium_la-hash_sha256.Plo
include crypto_hash/sha512/$(DEPDIR)/libsodium_la-hash_sha512_api.Plo
include crypto_hash/sha512/cp/$(DEPDIR)/libsodium_la-hash_sha512.Plo
include crypto_onetimeauth/$(DEPDIR)/libsodium_la-crypto_onetimeauth.Plo
include crypto_onetimeauth/poly1305/$(DEPDIR)/libsodium_la-onetimeauth_poly1305.Plo
include crypto_onetimeauth/poly1305/$(DEPDIR)/libsodium_la-onetimeauth_poly1305_api.Plo
include crypto_onetimeauth/poly1305/$(DEPDIR)/libsodium_la-onetimeauth_poly1305_try.Plo
include crypto_onetimeauth/poly1305/donna/$(DEPDIR)/libsodium_la-auth_poly1305_donna.Plo
include crypto_onetimeauth/poly1305/donna/$(DEPDIR)/libsodium_la-verify_poly1305_donna.Plo
include crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-crypto_scrypt-common.Plo
include crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pbkdf2-sha256.Plo
include crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256.Plo
include crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-scrypt_platform.Plo
include crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256_nosse.Plo
include crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256_sse.Plo
include crypto_scalarmult/$(DEPDIR)/libsodium_la-crypto_scalarmult.Plo
include crypto_scalarmult/curve25519/$(DEPDIR)/libsodium_la-scalarmult_curve25519_api.Plo
include crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)/libsodium_la-base_curve25519_donna_c64.Plo
include crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)/libsodium_la-smult_curve25519_donna_c64.Plo
include crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-base_curve25519_ref10.Plo
include crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_0_curve25519_ref10.Plo
include crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_1_curve25519_ref10.Plo
include crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_add_curve25519_ref10.Plo
include crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_copy_curve25519_ref10.Plo
include crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_cswap_curve25519_ref10.Plo
include crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_frombytes_curve25519_ref10.Plo
include crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_invert_curve25519_ref10.Plo
include crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_mul121666_curve25519_ref10.Plo
include crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_mul_curve25519_ref10.Plo
include crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_sq_curve25519_ref10.Plo
include crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_sub_curve25519_ref10.Plo
include crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_tobytes_curve25519_ref10.Plo
include crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-scalarmult_curve25519_ref10.Plo
include crypto_secretbox/$(DEPDIR)/libsodium_la-crypto_secretbox.Plo
include crypto_secretbox/$(DEPDIR)/libsodium_la-crypto_secretbox_easy.Plo
include crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/libsodium_la-secretbox_xsalsa20poly1305_api.Plo
include crypto_secretbox/xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-box_xsalsa20poly1305.Plo
include crypto_shorthash/$(DEPDIR)/libsodium_la-crypto_shorthash.Plo
include crypto_shorthash/siphash24/$(DEPDIR)/libsodium_la-shorthash_siphash24_api.Plo
include crypto_shorthash/siphash24/ref/$(DEPDIR)/libsodium_la-shorthash_siphash24.Plo
include crypto_sign/$(DEPDIR)/libsodium_la-crypto_sign.Plo
include crypto_sign/ed25519/$(DEPDIR)/libsodium_la-sign_ed25519_api.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_0.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_1.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_add.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_cmov.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_copy.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_frombytes.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_invert.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_isnegative.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_isnonzero.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_mul.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_neg.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_pow22523.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sq.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sq2.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sub.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_tobytes.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_add.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_double_scalarmult.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_frombytes.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_madd.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_msub.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p1p1_to_p2.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p1p1_to_p3.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p2_0.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p2_dbl.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_0.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_dbl.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_to_cached.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_to_p2.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_tobytes.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_precomp_0.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_scalarmult_base.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_sub.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_tobytes.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-keypair.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-open.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sc_muladd.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sc_reduce.Plo
include crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sign.Plo
include crypto_sign/edwards25519sha512batch/$(DEPDIR)/libsodium_la-sign_edwards25519sha512batch_api.Plo
include crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/libsodium_la-fe25519_edwards25519sha512batch.Plo
include crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/libsodium_la-ge25519_edwards25519sha512batch.Plo
include crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/libsodium_la-sc25519_edwards25519sha512batch.Plo
include crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/libsodium_la-sign_edwards25519sha512batch.Plo
include crypto_stream/$(DEPDIR)/libsodium_la-crypto_stream.Plo
include crypto_stream/aes128ctr/$(DEPDIR)/libsodium_la-stream_aes128ctr_api.Plo
include crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-afternm_aes128ctr.Plo
include crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-beforenm_aes128ctr.Plo
include crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-common_aes128ctr.Plo
include crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-consts_aes128ctr.Plo
include crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-int128_aes128ctr.Plo
include crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-stream_aes128ctr.Plo
include crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-xor_afternm_aes128ctr.Plo
include crypto_stream/chacha20/$(DEPDIR)/libsodium_la-stream_chacha20_api.Plo
include crypto_stream/chacha20/ref/$(DEPDIR)/libsodium_la-stream_chacha20_ref.Plo
include crypto_stream/salsa20/$(DEPDIR)/libsodium_la-stream_salsa20_api.Plo
include crypto_stream/salsa20/amd64_xmm6/$(DEPDIR)/libsodium_la-stream_salsa20_amd64_xmm6.Plo
include crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-stream_salsa20_ref.Plo
include crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-xor_salsa20_ref.Plo
include crypto_stream/salsa2012/$(DEPDIR)/libsodium_la-stream_salsa2012_api.Plo
include crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-stream_salsa2012.Plo
include crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-xor_salsa2012.Plo
include crypto_stream/salsa208/$(DEPDIR)/libsodium_la-stream_salsa208_api.Plo
include crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-stream_salsa208.Plo
include crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-xor_salsa208.Plo
include crypto_stream/xsalsa20/$(DEPDIR)/libsodium_la-stream_xsalsa20_api.Plo
include crypto_stream/xsalsa20/ref/$(DEPDIR)/libsodium_la-stream_xsalsa20.Plo
include crypto_stream/xsalsa20/ref/$(DEPDIR)/libsodium_la-xor_xsalsa20.Plo
include crypto_verify/16/$(DEPDIR)/libsodium_la-verify_16_api.Plo
include crypto_verify/16/ref/$(DEPDIR)/libsodium_la-verify_16.Plo
include crypto_verify/32/$(DEPDIR)/libsodium_la-verify_32_api.Plo
include crypto_verify/32/ref/$(DEPDIR)/libsodium_la-verify_32.Plo
include crypto_verify/64/$(DEPDIR)/libsodium_la-verify_64_api.Plo
include crypto_verify/64/ref/$(DEPDIR)/libsodium_la-verify_64.Plo
include randombytes/$(DEPDIR)/libsodium_la-randombytes.Plo
include randombytes/salsa20/$(DEPDIR)/libsodium_la-randombytes_salsa20_random.Plo
include randombytes/sysrandom/$(DEPDIR)/libsodium_la-randombytes_sysrandom.Plo
include sodium/$(DEPDIR)/libsodium_la-core.Plo
include sodium/$(DEPDIR)/libsodium_la-runtime.Plo
include sodium/$(DEPDIR)/libsodium_la-utils.Plo
include sodium/$(DEPDIR)/libsodium_la-version.Plo

.S.o:
	$(AM_V_CPPAS)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CPPASCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CPPAS)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CPPASCOMPILE) -c -o $@ $<

.S.obj:
	$(AM_V_CPPAS)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CPPASCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CPPAS)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CPPASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.S.lo:
	$(AM_V_CPPAS)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCPPASCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CPPAS)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(LTCPPASCOMPILE) -c -o $@ $<

crypto_stream/salsa20/amd64_xmm6/libsodium_la-stream_salsa20_amd64_xmm6.lo: crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S
	$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT crypto_stream/salsa20/amd64_xmm6/libsodium_la-stream_salsa20_amd64_xmm6.lo -MD -MP -MF crypto_stream/salsa20/amd64_xmm6/$(DEPDIR)/libsodium_la-stream_salsa20_amd64_xmm6.Tpo -c -o crypto_stream/salsa20/amd64_xmm6/libsodium_la-stream_salsa20_amd64_xmm6.lo `test -f 'crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S' || echo '$(srcdir)/'`crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S
	$(AM_V_at)$(am__mv) crypto_stream/salsa20/amd64_xmm6/$(DEPDIR)/libsodium_la-stream_salsa20_amd64_xmm6.Tpo crypto_stream/salsa20/amd64_xmm6/$(DEPDIR)/libsodium_la-stream_salsa20_amd64_xmm6.Plo
#	$(AM_V_CPPAS)source='crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S' object='crypto_stream/salsa20/amd64_xmm6/libsodium_la-stream_salsa20_amd64_xmm6.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o crypto_stream/salsa20/amd64_xmm6/libsodium_la-stream_salsa20_amd64_xmm6.lo `test -f 'crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S' || echo '$(srcdir)/'`crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo: crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo -MD -MP -MF crypto_aead/chacha20poly1305/sodium/$(DEPDIR)/libsodium_la-aead_chacha20poly1305.Tpo -c -o crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo `test -f 'crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c' || echo '$(srcdir)/'`crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c
	$(AM_V_at)$(am__mv) crypto_aead/chacha20poly1305/sodium/$(DEPDIR)/libsodium_la-aead_chacha20poly1305.Tpo crypto_aead/chacha20poly1305/sodium/$(DEPDIR)/libsodium_la-aead_chacha20poly1305.Plo
#	$(AM_V_CC)source='crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c' object='crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo `test -f 'crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c' || echo '$(srcdir)/'`crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c

crypto_auth/libsodium_la-crypto_auth.lo: crypto_auth/crypto_auth.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/libsodium_la-crypto_auth.lo -MD -MP -MF crypto_auth/$(DEPDIR)/libsodium_la-crypto_auth.Tpo -c -o crypto_auth/libsodium_la-crypto_auth.lo `test -f 'crypto_auth/crypto_auth.c' || echo '$(srcdir)/'`crypto_auth/crypto_auth.c
	$(AM_V_at)$(am__mv) crypto_auth/$(DEPDIR)/libsodium_la-crypto_auth.Tpo crypto_auth/$(DEPDIR)/libsodium_la-crypto_auth.Plo
#	$(AM_V_CC)source='crypto_auth/crypto_auth.c' object='crypto_auth/libsodium_la-crypto_auth.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/libsodium_la-crypto_auth.lo `test -f 'crypto_auth/crypto_auth.c' || echo '$(srcdir)/'`crypto_auth/crypto_auth.c

crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256_api.lo: crypto_auth/hmacsha256/auth_hmacsha256_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256_api.lo -MD -MP -MF crypto_auth/hmacsha256/$(DEPDIR)/libsodium_la-auth_hmacsha256_api.Tpo -c -o crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256_api.lo `test -f 'crypto_auth/hmacsha256/auth_hmacsha256_api.c' || echo '$(srcdir)/'`crypto_auth/hmacsha256/auth_hmacsha256_api.c
	$(AM_V_at)$(am__mv) crypto_auth/hmacsha256/$(DEPDIR)/libsodium_la-auth_hmacsha256_api.Tpo crypto_auth/hmacsha256/$(DEPDIR)/libsodium_la-auth_hmacsha256_api.Plo
#	$(AM_V_CC)source='crypto_auth/hmacsha256/auth_hmacsha256_api.c' object='crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256_api.lo `test -f 'crypto_auth/hmacsha256/auth_hmacsha256_api.c' || echo '$(srcdir)/'`crypto_auth/hmacsha256/auth_hmacsha256_api.c

crypto_auth/hmacsha256/cp/libsodium_la-hmac_hmacsha256.lo: crypto_auth/hmacsha256/cp/hmac_hmacsha256.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/hmacsha256/cp/libsodium_la-hmac_hmacsha256.lo -MD -MP -MF crypto_auth/hmacsha256/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha256.Tpo -c -o crypto_auth/hmacsha256/cp/libsodium_la-hmac_hmacsha256.lo `test -f 'crypto_auth/hmacsha256/cp/hmac_hmacsha256.c' || echo '$(srcdir)/'`crypto_auth/hmacsha256/cp/hmac_hmacsha256.c
	$(AM_V_at)$(am__mv) crypto_auth/hmacsha256/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha256.Tpo crypto_auth/hmacsha256/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha256.Plo
#	$(AM_V_CC)source='crypto_auth/hmacsha256/cp/hmac_hmacsha256.c' object='crypto_auth/hmacsha256/cp/libsodium_la-hmac_hmacsha256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/hmacsha256/cp/libsodium_la-hmac_hmacsha256.lo `test -f 'crypto_auth/hmacsha256/cp/hmac_hmacsha256.c' || echo '$(srcdir)/'`crypto_auth/hmacsha256/cp/hmac_hmacsha256.c

crypto_auth/hmacsha256/cp/libsodium_la-verify_hmacsha256.lo: crypto_auth/hmacsha256/cp/verify_hmacsha256.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/hmacsha256/cp/libsodium_la-verify_hmacsha256.lo -MD -MP -MF crypto_auth/hmacsha256/cp/$(DEPDIR)/libsodium_la-verify_hmacsha256.Tpo -c -o crypto_auth/hmacsha256/cp/libsodium_la-verify_hmacsha256.lo `test -f 'crypto_auth/hmacsha256/cp/verify_hmacsha256.c' || echo '$(srcdir)/'`crypto_auth/hmacsha256/cp/verify_hmacsha256.c
	$(AM_V_at)$(am__mv) crypto_auth/hmacsha256/cp/$(DEPDIR)/libsodium_la-verify_hmacsha256.Tpo crypto_auth/hmacsha256/cp/$(DEPDIR)/libsodium_la-verify_hmacsha256.Plo
#	$(AM_V_CC)source='crypto_auth/hmacsha256/cp/verify_hmacsha256.c' object='crypto_auth/hmacsha256/cp/libsodium_la-verify_hmacsha256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/hmacsha256/cp/libsodium_la-verify_hmacsha256.lo `test -f 'crypto_auth/hmacsha256/cp/verify_hmacsha256.c' || echo '$(srcdir)/'`crypto_auth/hmacsha256/cp/verify_hmacsha256.c

crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512_api.lo: crypto_auth/hmacsha512/auth_hmacsha512_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512_api.lo -MD -MP -MF crypto_auth/hmacsha512/$(DEPDIR)/libsodium_la-auth_hmacsha512_api.Tpo -c -o crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512_api.lo `test -f 'crypto_auth/hmacsha512/auth_hmacsha512_api.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512/auth_hmacsha512_api.c
	$(AM_V_at)$(am__mv) crypto_auth/hmacsha512/$(DEPDIR)/libsodium_la-auth_hmacsha512_api.Tpo crypto_auth/hmacsha512/$(DEPDIR)/libsodium_la-auth_hmacsha512_api.Plo
#	$(AM_V_CC)source='crypto_auth/hmacsha512/auth_hmacsha512_api.c' object='crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512_api.lo `test -f 'crypto_auth/hmacsha512/auth_hmacsha512_api.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512/auth_hmacsha512_api.c

crypto_auth/hmacsha512/cp/libsodium_la-hmac_hmacsha512.lo: crypto_auth/hmacsha512/cp/hmac_hmacsha512.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/hmacsha512/cp/libsodium_la-hmac_hmacsha512.lo -MD -MP -MF crypto_auth/hmacsha512/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha512.Tpo -c -o crypto_auth/hmacsha512/cp/libsodium_la-hmac_hmacsha512.lo `test -f 'crypto_auth/hmacsha512/cp/hmac_hmacsha512.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512/cp/hmac_hmacsha512.c
	$(AM_V_at)$(am__mv) crypto_auth/hmacsha512/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha512.Tpo crypto_auth/hmacsha512/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha512.Plo
#	$(AM_V_CC)source='crypto_auth/hmacsha512/cp/hmac_hmacsha512.c' object='crypto_auth/hmacsha512/cp/libsodium_la-hmac_hmacsha512.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/hmacsha512/cp/libsodium_la-hmac_hmacsha512.lo `test -f 'crypto_auth/hmacsha512/cp/hmac_hmacsha512.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512/cp/hmac_hmacsha512.c

crypto_auth/hmacsha512/cp/libsodium_la-verify_hmacsha512.lo: crypto_auth/hmacsha512/cp/verify_hmacsha512.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/hmacsha512/cp/libsodium_la-verify_hmacsha512.lo -MD -MP -MF crypto_auth/hmacsha512/cp/$(DEPDIR)/libsodium_la-verify_hmacsha512.Tpo -c -o crypto_auth/hmacsha512/cp/libsodium_la-verify_hmacsha512.lo `test -f 'crypto_auth/hmacsha512/cp/verify_hmacsha512.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512/cp/verify_hmacsha512.c
	$(AM_V_at)$(am__mv) crypto_auth/hmacsha512/cp/$(DEPDIR)/libsodium_la-verify_hmacsha512.Tpo crypto_auth/hmacsha512/cp/$(DEPDIR)/libsodium_la-verify_hmacsha512.Plo
#	$(AM_V_CC)source='crypto_auth/hmacsha512/cp/verify_hmacsha512.c' object='crypto_auth/hmacsha512/cp/libsodium_la-verify_hmacsha512.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/hmacsha512/cp/libsodium_la-verify_hmacsha512.lo `test -f 'crypto_auth/hmacsha512/cp/verify_hmacsha512.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512/cp/verify_hmacsha512.c

crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256_api.lo: crypto_auth/hmacsha512256/auth_hmacsha512256_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256_api.lo -MD -MP -MF crypto_auth/hmacsha512256/$(DEPDIR)/libsodium_la-auth_hmacsha512256_api.Tpo -c -o crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256_api.lo `test -f 'crypto_auth/hmacsha512256/auth_hmacsha512256_api.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512256/auth_hmacsha512256_api.c
	$(AM_V_at)$(am__mv) crypto_auth/hmacsha512256/$(DEPDIR)/libsodium_la-auth_hmacsha512256_api.Tpo crypto_auth/hmacsha512256/$(DEPDIR)/libsodium_la-auth_hmacsha512256_api.Plo
#	$(AM_V_CC)source='crypto_auth/hmacsha512256/auth_hmacsha512256_api.c' object='crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256_api.lo `test -f 'crypto_auth/hmacsha512256/auth_hmacsha512256_api.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512256/auth_hmacsha512256_api.c

crypto_auth/hmacsha512256/cp/libsodium_la-hmac_hmacsha512256.lo: crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/hmacsha512256/cp/libsodium_la-hmac_hmacsha512256.lo -MD -MP -MF crypto_auth/hmacsha512256/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha512256.Tpo -c -o crypto_auth/hmacsha512256/cp/libsodium_la-hmac_hmacsha512256.lo `test -f 'crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c
	$(AM_V_at)$(am__mv) crypto_auth/hmacsha512256/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha512256.Tpo crypto_auth/hmacsha512256/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha512256.Plo
#	$(AM_V_CC)source='crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c' object='crypto_auth/hmacsha512256/cp/libsodium_la-hmac_hmacsha512256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/hmacsha512256/cp/libsodium_la-hmac_hmacsha512256.lo `test -f 'crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c

crypto_auth/hmacsha512256/cp/libsodium_la-verify_hmacsha512256.lo: crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/hmacsha512256/cp/libsodium_la-verify_hmacsha512256.lo -MD -MP -MF crypto_auth/hmacsha512256/cp/$(DEPDIR)/libsodium_la-verify_hmacsha512256.Tpo -c -o crypto_auth/hmacsha512256/cp/libsodium_la-verify_hmacsha512256.lo `test -f 'crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c
	$(AM_V_at)$(am__mv) crypto_auth/hmacsha512256/cp/$(DEPDIR)/libsodium_la-verify_hmacsha512256.Tpo crypto_auth/hmacsha512256/cp/$(DEPDIR)/libsodium_la-verify_hmacsha512256.Plo
#	$(AM_V_CC)source='crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c' object='crypto_auth/hmacsha512256/cp/libsodium_la-verify_hmacsha512256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/hmacsha512256/cp/libsodium_la-verify_hmacsha512256.lo `test -f 'crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c

crypto_box/libsodium_la-crypto_box.lo: crypto_box/crypto_box.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_box/libsodium_la-crypto_box.lo -MD -MP -MF crypto_box/$(DEPDIR)/libsodium_la-crypto_box.Tpo -c -o crypto_box/libsodium_la-crypto_box.lo `test -f 'crypto_box/crypto_box.c' || echo '$(srcdir)/'`crypto_box/crypto_box.c
	$(AM_V_at)$(am__mv) crypto_box/$(DEPDIR)/libsodium_la-crypto_box.Tpo crypto_box/$(DEPDIR)/libsodium_la-crypto_box.Plo
#	$(AM_V_CC)source='crypto_box/crypto_box.c' object='crypto_box/libsodium_la-crypto_box.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_box/libsodium_la-crypto_box.lo `test -f 'crypto_box/crypto_box.c' || echo '$(srcdir)/'`crypto_box/crypto_box.c

crypto_box/libsodium_la-crypto_box_easy.lo: crypto_box/crypto_box_easy.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_box/libsodium_la-crypto_box_easy.lo -MD -MP -MF crypto_box/$(DEPDIR)/libsodium_la-crypto_box_easy.Tpo -c -o crypto_box/libsodium_la-crypto_box_easy.lo `test -f 'crypto_box/crypto_box_easy.c' || echo '$(srcdir)/'`crypto_box/crypto_box_easy.c
	$(AM_V_at)$(am__mv) crypto_box/$(DEPDIR)/libsodium_la-crypto_box_easy.Tpo crypto_box/$(DEPDIR)/libsodium_la-crypto_box_easy.Plo
#	$(AM_V_CC)source='crypto_box/crypto_box_easy.c' object='crypto_box/libsodium_la-crypto_box_easy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_box/libsodium_la-crypto_box_easy.lo `test -f 'crypto_box/crypto_box_easy.c' || echo '$(srcdir)/'`crypto_box/crypto_box_easy.c

crypto_box/libsodium_la-crypto_box_seal.lo: crypto_box/crypto_box_seal.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_box/libsodium_la-crypto_box_seal.lo -MD -MP -MF crypto_box/$(DEPDIR)/libsodium_la-crypto_box_seal.Tpo -c -o crypto_box/libsodium_la-crypto_box_seal.lo `test -f 'crypto_box/crypto_box_seal.c' || echo '$(srcdir)/'`crypto_box/crypto_box_seal.c
	$(AM_V_at)$(am__mv) crypto_box/$(DEPDIR)/libsodium_la-crypto_box_seal.Tpo crypto_box/$(DEPDIR)/libsodium_la-crypto_box_seal.Plo
#	$(AM_V_CC)source='crypto_box/crypto_box_seal.c' object='crypto_box/libsodium_la-crypto_box_seal.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_box/libsodium_la-crypto_box_seal.lo `test -f 'crypto_box/crypto_box_seal.c' || echo '$(srcdir)/'`crypto_box/crypto_box_seal.c

crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305_api.lo: crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305_api.lo -MD -MP -MF crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305_api.Tpo -c -o crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305_api.lo `test -f 'crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c' || echo '$(srcdir)/'`crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c
	$(AM_V_at)$(am__mv) crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305_api.Tpo crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305_api.Plo
#	$(AM_V_CC)source='crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c' object='crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305_api.lo `test -f 'crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c' || echo '$(srcdir)/'`crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c

crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-after_curve25519xsalsa20poly1305.lo: crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-after_curve25519xsalsa20poly1305.lo -MD -MP -MF crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-after_curve25519xsalsa20poly1305.Tpo -c -o crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-after_curve25519xsalsa20poly1305.lo `test -f 'crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c
	$(AM_V_at)$(am__mv) crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-after_curve25519xsalsa20poly1305.Tpo crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-after_curve25519xsalsa20poly1305.Plo
#	$(AM_V_CC)source='crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c' object='crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-after_curve25519xsalsa20poly1305.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-after_curve25519xsalsa20poly1305.lo `test -f 'crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c

crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-before_curve25519xsalsa20poly1305.lo: crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-before_curve25519xsalsa20poly1305.lo -MD -MP -MF crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-before_curve25519xsalsa20poly1305.Tpo -c -o crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-before_curve25519xsalsa20poly1305.lo `test -f 'crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c
	$(AM_V_at)$(am__mv) crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-before_curve25519xsalsa20poly1305.Tpo crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-before_curve25519xsalsa20poly1305.Plo
#	$(AM_V_CC)source='crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c' object='crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-before_curve25519xsalsa20poly1305.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-before_curve25519xsalsa20poly1305.lo `test -f 'crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c

crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-box_curve25519xsalsa20poly1305.lo: crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-box_curve25519xsalsa20poly1305.lo -MD -MP -MF crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305.Tpo -c -o crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-box_curve25519xsalsa20poly1305.lo `test -f 'crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c
	$(AM_V_at)$(am__mv) crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305.Tpo crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305.Plo
#	$(AM_V_CC)source='crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c' object='crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-box_curve25519xsalsa20poly1305.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-box_curve25519xsalsa20poly1305.lo `test -f 'crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c

crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-keypair_curve25519xsalsa20poly1305.lo: crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-keypair_curve25519xsalsa20poly1305.lo -MD -MP -MF crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-keypair_curve25519xsalsa20poly1305.Tpo -c -o crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-keypair_curve25519xsalsa20poly1305.lo `test -f 'crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c
	$(AM_V_at)$(am__mv) crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-keypair_curve25519xsalsa20poly1305.Tpo crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-keypair_curve25519xsalsa20poly1305.Plo
#	$(AM_V_CC)source='crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c' object='crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-keypair_curve25519xsalsa20poly1305.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-keypair_curve25519xsalsa20poly1305.lo `test -f 'crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c

crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20.lo: crypto_core/hsalsa20/ref2/core_hsalsa20.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20.lo -MD -MP -MF crypto_core/hsalsa20/ref2/$(DEPDIR)/libsodium_la-core_hsalsa20.Tpo -c -o crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20.lo `test -f 'crypto_core/hsalsa20/ref2/core_hsalsa20.c' || echo '$(srcdir)/'`crypto_core/hsalsa20/ref2/core_hsalsa20.c
	$(AM_V_at)$(am__mv) crypto_core/hsalsa20/ref2/$(DEPDIR)/libsodium_la-core_hsalsa20.Tpo crypto_core/hsalsa20/ref2/$(DEPDIR)/libsodium_la-core_hsalsa20.Plo
#	$(AM_V_CC)source='crypto_core/hsalsa20/ref2/core_hsalsa20.c' object='crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20.lo `test -f 'crypto_core/hsalsa20/ref2/core_hsalsa20.c' || echo '$(srcdir)/'`crypto_core/hsalsa20/ref2/core_hsalsa20.c

crypto_core/hsalsa20/libsodium_la-core_hsalsa20_api.lo: crypto_core/hsalsa20/core_hsalsa20_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/hsalsa20/libsodium_la-core_hsalsa20_api.lo -MD -MP -MF crypto_core/hsalsa20/$(DEPDIR)/libsodium_la-core_hsalsa20_api.Tpo -c -o crypto_core/hsalsa20/libsodium_la-core_hsalsa20_api.lo `test -f 'crypto_core/hsalsa20/core_hsalsa20_api.c' || echo '$(srcdir)/'`crypto_core/hsalsa20/core_hsalsa20_api.c
	$(AM_V_at)$(am__mv) crypto_core/hsalsa20/$(DEPDIR)/libsodium_la-core_hsalsa20_api.Tpo crypto_core/hsalsa20/$(DEPDIR)/libsodium_la-core_hsalsa20_api.Plo
#	$(AM_V_CC)source='crypto_core/hsalsa20/core_hsalsa20_api.c' object='crypto_core/hsalsa20/libsodium_la-core_hsalsa20_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/hsalsa20/libsodium_la-core_hsalsa20_api.lo `test -f 'crypto_core/hsalsa20/core_hsalsa20_api.c' || echo '$(srcdir)/'`crypto_core/hsalsa20/core_hsalsa20_api.c

crypto_core/salsa20/ref/libsodium_la-core_salsa20.lo: crypto_core/salsa20/ref/core_salsa20.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/salsa20/ref/libsodium_la-core_salsa20.lo -MD -MP -MF crypto_core/salsa20/ref/$(DEPDIR)/libsodium_la-core_salsa20.Tpo -c -o crypto_core/salsa20/ref/libsodium_la-core_salsa20.lo `test -f 'crypto_core/salsa20/ref/core_salsa20.c' || echo '$(srcdir)/'`crypto_core/salsa20/ref/core_salsa20.c
	$(AM_V_at)$(am__mv) crypto_core/salsa20/ref/$(DEPDIR)/libsodium_la-core_salsa20.Tpo crypto_core/salsa20/ref/$(DEPDIR)/libsodium_la-core_salsa20.Plo
#	$(AM_V_CC)source='crypto_core/salsa20/ref/core_salsa20.c' object='crypto_core/salsa20/ref/libsodium_la-core_salsa20.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/salsa20/ref/libsodium_la-core_salsa20.lo `test -f 'crypto_core/salsa20/ref/core_salsa20.c' || echo '$(srcdir)/'`crypto_core/salsa20/ref/core_salsa20.c

crypto_core/salsa20/libsodium_la-core_salsa20_api.lo: crypto_core/salsa20/core_salsa20_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/salsa20/libsodium_la-core_salsa20_api.lo -MD -MP -MF crypto_core/salsa20/$(DEPDIR)/libsodium_la-core_salsa20_api.Tpo -c -o crypto_core/salsa20/libsodium_la-core_salsa20_api.lo `test -f 'crypto_core/salsa20/core_salsa20_api.c' || echo '$(srcdir)/'`crypto_core/salsa20/core_salsa20_api.c
	$(AM_V_at)$(am__mv) crypto_core/salsa20/$(DEPDIR)/libsodium_la-core_salsa20_api.Tpo crypto_core/salsa20/$(DEPDIR)/libsodium_la-core_salsa20_api.Plo
#	$(AM_V_CC)source='crypto_core/salsa20/core_salsa20_api.c' object='crypto_core/salsa20/libsodium_la-core_salsa20_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/salsa20/libsodium_la-core_salsa20_api.lo `test -f 'crypto_core/salsa20/core_salsa20_api.c' || echo '$(srcdir)/'`crypto_core/salsa20/core_salsa20_api.c

crypto_generichash/libsodium_la-crypto_generichash.lo: crypto_generichash/crypto_generichash.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_generichash/libsodium_la-crypto_generichash.lo -MD -MP -MF crypto_generichash/$(DEPDIR)/libsodium_la-crypto_generichash.Tpo -c -o crypto_generichash/libsodium_la-crypto_generichash.lo `test -f 'crypto_generichash/crypto_generichash.c' || echo '$(srcdir)/'`crypto_generichash/crypto_generichash.c
	$(AM_V_at)$(am__mv) crypto_generichash/$(DEPDIR)/libsodium_la-crypto_generichash.Tpo crypto_generichash/$(DEPDIR)/libsodium_la-crypto_generichash.Plo
#	$(AM_V_CC)source='crypto_generichash/crypto_generichash.c' object='crypto_generichash/libsodium_la-crypto_generichash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_generichash/libsodium_la-crypto_generichash.lo `test -f 'crypto_generichash/crypto_generichash.c' || echo '$(srcdir)/'`crypto_generichash/crypto_generichash.c

crypto_generichash/blake2/libsodium_la-generichash_blake2_api.lo: crypto_generichash/blake2/generichash_blake2_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_generichash/blake2/libsodium_la-generichash_blake2_api.lo -MD -MP -MF crypto_generichash/blake2/$(DEPDIR)/libsodium_la-generichash_blake2_api.Tpo -c -o crypto_generichash/blake2/libsodium_la-generichash_blake2_api.lo `test -f 'crypto_generichash/blake2/generichash_blake2_api.c' || echo '$(srcdir)/'`crypto_generichash/blake2/generichash_blake2_api.c
	$(AM_V_at)$(am__mv) crypto_generichash/blake2/$(DEPDIR)/libsodium_la-generichash_blake2_api.Tpo crypto_generichash/blake2/$(DEPDIR)/libsodium_la-generichash_blake2_api.Plo
#	$(AM_V_CC)source='crypto_generichash/blake2/generichash_blake2_api.c' object='crypto_generichash/blake2/libsodium_la-generichash_blake2_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_generichash/blake2/libsodium_la-generichash_blake2_api.lo `test -f 'crypto_generichash/blake2/generichash_blake2_api.c' || echo '$(srcdir)/'`crypto_generichash/blake2/generichash_blake2_api.c

crypto_generichash/blake2/ref/libsodium_la-blake2b-ref.lo: crypto_generichash/blake2/ref/blake2b-ref.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_generichash/blake2/ref/libsodium_la-blake2b-ref.lo -MD -MP -MF crypto_generichash/blake2/ref/$(DEPDIR)/libsodium_la-blake2b-ref.Tpo -c -o crypto_generichash/blake2/ref/libsodium_la-blake2b-ref.lo `test -f 'crypto_generichash/blake2/ref/blake2b-ref.c' || echo '$(srcdir)/'`crypto_generichash/blake2/ref/blake2b-ref.c
	$(AM_V_at)$(am__mv) crypto_generichash/blake2/ref/$(DEPDIR)/libsodium_la-blake2b-ref.Tpo crypto_generichash/blake2/ref/$(DEPDIR)/libsodium_la-blake2b-ref.Plo
#	$(AM_V_CC)source='crypto_generichash/blake2/ref/blake2b-ref.c' object='crypto_generichash/blake2/ref/libsodium_la-blake2b-ref.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_generichash/blake2/ref/libsodium_la-blake2b-ref.lo `test -f 'crypto_generichash/blake2/ref/blake2b-ref.c' || echo '$(srcdir)/'`crypto_generichash/blake2/ref/blake2b-ref.c

crypto_generichash/blake2/ref/libsodium_la-generichash_blake2b.lo: crypto_generichash/blake2/ref/generichash_blake2b.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_generichash/blake2/ref/libsodium_la-generichash_blake2b.lo -MD -MP -MF crypto_generichash/blake2/ref/$(DEPDIR)/libsodium_la-generichash_blake2b.Tpo -c -o crypto_generichash/blake2/ref/libsodium_la-generichash_blake2b.lo `test -f 'crypto_generichash/blake2/ref/generichash_blake2b.c' || echo '$(srcdir)/'`crypto_generichash/blake2/ref/generichash_blake2b.c
	$(AM_V_at)$(am__mv) crypto_generichash/blake2/ref/$(DEPDIR)/libsodium_la-generichash_blake2b.Tpo crypto_generichash/blake2/ref/$(DEPDIR)/libsodium_la-generichash_blake2b.Plo
#	$(AM_V_CC)source='crypto_generichash/blake2/ref/generichash_blake2b.c' object='crypto_generichash/blake2/ref/libsodium_la-generichash_blake2b.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_generichash/blake2/ref/libsodium_la-generichash_blake2b.lo `test -f 'crypto_generichash/blake2/ref/generichash_blake2b.c' || echo '$(srcdir)/'`crypto_generichash/blake2/ref/generichash_blake2b.c

crypto_hash/libsodium_la-crypto_hash.lo: crypto_hash/crypto_hash.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_hash/libsodium_la-crypto_hash.lo -MD -MP -MF crypto_hash/$(DEPDIR)/libsodium_la-crypto_hash.Tpo -c -o crypto_hash/libsodium_la-crypto_hash.lo `test -f 'crypto_hash/crypto_hash.c' || echo '$(srcdir)/'`crypto_hash/crypto_hash.c
	$(AM_V_at)$(am__mv) crypto_hash/$(DEPDIR)/libsodium_la-crypto_hash.Tpo crypto_hash/$(DEPDIR)/libsodium_la-crypto_hash.Plo
#	$(AM_V_CC)source='crypto_hash/crypto_hash.c' object='crypto_hash/libsodium_la-crypto_hash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_hash/libsodium_la-crypto_hash.lo `test -f 'crypto_hash/crypto_hash.c' || echo '$(srcdir)/'`crypto_hash/crypto_hash.c

crypto_hash/sha256/libsodium_la-hash_sha256_api.lo: crypto_hash/sha256/hash_sha256_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_hash/sha256/libsodium_la-hash_sha256_api.lo -MD -MP -MF crypto_hash/sha256/$(DEPDIR)/libsodium_la-hash_sha256_api.Tpo -c -o crypto_hash/sha256/libsodium_la-hash_sha256_api.lo `test -f 'crypto_hash/sha256/hash_sha256_api.c' || echo '$(srcdir)/'`crypto_hash/sha256/hash_sha256_api.c
	$(AM_V_at)$(am__mv) crypto_hash/sha256/$(DEPDIR)/libsodium_la-hash_sha256_api.Tpo crypto_hash/sha256/$(DEPDIR)/libsodium_la-hash_sha256_api.Plo
#	$(AM_V_CC)source='crypto_hash/sha256/hash_sha256_api.c' object='crypto_hash/sha256/libsodium_la-hash_sha256_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_hash/sha256/libsodium_la-hash_sha256_api.lo `test -f 'crypto_hash/sha256/hash_sha256_api.c' || echo '$(srcdir)/'`crypto_hash/sha256/hash_sha256_api.c

crypto_hash/sha256/cp/libsodium_la-hash_sha256.lo: crypto_hash/sha256/cp/hash_sha256.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_hash/sha256/cp/libsodium_la-hash_sha256.lo -MD -MP -MF crypto_hash/sha256/cp/$(DEPDIR)/libsodium_la-hash_sha256.Tpo -c -o crypto_hash/sha256/cp/libsodium_la-hash_sha256.lo `test -f 'crypto_hash/sha256/cp/hash_sha256.c' || echo '$(srcdir)/'`crypto_hash/sha256/cp/hash_sha256.c
	$(AM_V_at)$(am__mv) crypto_hash/sha256/cp/$(DEPDIR)/libsodium_la-hash_sha256.Tpo crypto_hash/sha256/cp/$(DEPDIR)/libsodium_la-hash_sha256.Plo
#	$(AM_V_CC)source='crypto_hash/sha256/cp/hash_sha256.c' object='crypto_hash/sha256/cp/libsodium_la-hash_sha256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_hash/sha256/cp/libsodium_la-hash_sha256.lo `test -f 'crypto_hash/sha256/cp/hash_sha256.c' || echo '$(srcdir)/'`crypto_hash/sha256/cp/hash_sha256.c

crypto_hash/sha512/libsodium_la-hash_sha512_api.lo: crypto_hash/sha512/hash_sha512_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_hash/sha512/libsodium_la-hash_sha512_api.lo -MD -MP -MF crypto_hash/sha512/$(DEPDIR)/libsodium_la-hash_sha512_api.Tpo -c -o crypto_hash/sha512/libsodium_la-hash_sha512_api.lo `test -f 'crypto_hash/sha512/hash_sha512_api.c' || echo '$(srcdir)/'`crypto_hash/sha512/hash_sha512_api.c
	$(AM_V_at)$(am__mv) crypto_hash/sha512/$(DEPDIR)/libsodium_la-hash_sha512_api.Tpo crypto_hash/sha512/$(DEPDIR)/libsodium_la-hash_sha512_api.Plo
#	$(AM_V_CC)source='crypto_hash/sha512/hash_sha512_api.c' object='crypto_hash/sha512/libsodium_la-hash_sha512_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_hash/sha512/libsodium_la-hash_sha512_api.lo `test -f 'crypto_hash/sha512/hash_sha512_api.c' || echo '$(srcdir)/'`crypto_hash/sha512/hash_sha512_api.c

crypto_hash/sha512/cp/libsodium_la-hash_sha512.lo: crypto_hash/sha512/cp/hash_sha512.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_hash/sha512/cp/libsodium_la-hash_sha512.lo -MD -MP -MF crypto_hash/sha512/cp/$(DEPDIR)/libsodium_la-hash_sha512.Tpo -c -o crypto_hash/sha512/cp/libsodium_la-hash_sha512.lo `test -f 'crypto_hash/sha512/cp/hash_sha512.c' || echo '$(srcdir)/'`crypto_hash/sha512/cp/hash_sha512.c
	$(AM_V_at)$(am__mv) crypto_hash/sha512/cp/$(DEPDIR)/libsodium_la-hash_sha512.Tpo crypto_hash/sha512/cp/$(DEPDIR)/libsodium_la-hash_sha512.Plo
#	$(AM_V_CC)source='crypto_hash/sha512/cp/hash_sha512.c' object='crypto_hash/sha512/cp/libsodium_la-hash_sha512.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_hash/sha512/cp/libsodium_la-hash_sha512.lo `test -f 'crypto_hash/sha512/cp/hash_sha512.c' || echo '$(srcdir)/'`crypto_hash/sha512/cp/hash_sha512.c

crypto_onetimeauth/libsodium_la-crypto_onetimeauth.lo: crypto_onetimeauth/crypto_onetimeauth.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_onetimeauth/libsodium_la-crypto_onetimeauth.lo -MD -MP -MF crypto_onetimeauth/$(DEPDIR)/libsodium_la-crypto_onetimeauth.Tpo -c -o crypto_onetimeauth/libsodium_la-crypto_onetimeauth.lo `test -f 'crypto_onetimeauth/crypto_onetimeauth.c' || echo '$(srcdir)/'`crypto_onetimeauth/crypto_onetimeauth.c
	$(AM_V_at)$(am__mv) crypto_onetimeauth/$(DEPDIR)/libsodium_la-crypto_onetimeauth.Tpo crypto_onetimeauth/$(DEPDIR)/libsodium_la-crypto_onetimeauth.Plo
#	$(AM_V_CC)source='crypto_onetimeauth/crypto_onetimeauth.c' object='crypto_onetimeauth/libsodium_la-crypto_onetimeauth.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_onetimeauth/libsodium_la-crypto_onetimeauth.lo `test -f 'crypto_onetimeauth/crypto_onetimeauth.c' || echo '$(srcdir)/'`crypto_onetimeauth/crypto_onetimeauth.c

crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305.lo: crypto_onetimeauth/poly1305/onetimeauth_poly1305.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305.lo -MD -MP -MF crypto_onetimeauth/poly1305/$(DEPDIR)/libsodium_la-onetimeauth_poly1305.Tpo -c -o crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305.lo `test -f 'crypto_onetimeauth/poly1305/onetimeauth_poly1305.c' || echo '$(srcdir)/'`crypto_onetimeauth/poly1305/onetimeauth_poly1305.c
	$(AM_V_at)$(am__mv) crypto_onetimeauth/poly1305/$(DEPDIR)/libsodium_la-onetimeauth_poly1305.Tpo crypto_onetimeauth/poly1305/$(DEPDIR)/libsodium_la-onetimeauth_poly1305.Plo
#	$(AM_V_CC)source='crypto_onetimeauth/poly1305/onetimeauth_poly1305.c' object='crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305.lo `test -f 'crypto_onetimeauth/poly1305/onetimeauth_poly1305.c' || echo '$(srcdir)/'`crypto_onetimeauth/poly1305/onetimeauth_poly1305.c

crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305_api.lo: crypto_onetimeauth/poly1305/onetimeauth_poly1305_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305_api.lo -MD -MP -MF crypto_onetimeauth/poly1305/$(DEPDIR)/libsodium_la-onetimeauth_poly1305_api.Tpo -c -o crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305_api.lo `test -f 'crypto_onetimeauth/poly1305/onetimeauth_poly1305_api.c' || echo '$(srcdir)/'`crypto_onetimeauth/poly1305/onetimeauth_poly1305_api.c
	$(AM_V_at)$(am__mv) crypto_onetimeauth/poly1305/$(DEPDIR)/libsodium_la-onetimeauth_poly1305_api.Tpo crypto_onetimeauth/poly1305/$(DEPDIR)/libsodium_la-onetimeauth_poly1305_api.Plo
#	$(AM_V_CC)source='crypto_onetimeauth/poly1305/onetimeauth_poly1305_api.c' object='crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305_api.lo `test -f 'crypto_onetimeauth/poly1305/onetimeauth_poly1305_api.c' || echo '$(srcdir)/'`crypto_onetimeauth/poly1305/onetimeauth_poly1305_api.c

crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305_try.lo: crypto_onetimeauth/poly1305/onetimeauth_poly1305_try.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305_try.lo -MD -MP -MF crypto_onetimeauth/poly1305/$(DEPDIR)/libsodium_la-onetimeauth_poly1305_try.Tpo -c -o crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305_try.lo `test -f 'crypto_onetimeauth/poly1305/onetimeauth_poly1305_try.c' || echo '$(srcdir)/'`crypto_onetimeauth/poly1305/onetimeauth_poly1305_try.c
	$(AM_V_at)$(am__mv) crypto_onetimeauth/poly1305/$(DEPDIR)/libsodium_la-onetimeauth_poly1305_try.Tpo crypto_onetimeauth/poly1305/$(DEPDIR)/libsodium_la-onetimeauth_poly1305_try.Plo
#	$(AM_V_CC)source='crypto_onetimeauth/poly1305/onetimeauth_poly1305_try.c' object='crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305_try.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305_try.lo `test -f 'crypto_onetimeauth/poly1305/onetimeauth_poly1305_try.c' || echo '$(srcdir)/'`crypto_onetimeauth/poly1305/onetimeauth_poly1305_try.c

crypto_onetimeauth/poly1305/donna/libsodium_la-auth_poly1305_donna.lo: crypto_onetimeauth/poly1305/donna/auth_poly1305_donna.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_onetimeauth/poly1305/donna/libsodium_la-auth_poly1305_donna.lo -MD -MP -MF crypto_onetimeauth/poly1305/donna/$(DEPDIR)/libsodium_la-auth_poly1305_donna.Tpo -c -o crypto_onetimeauth/poly1305/donna/libsodium_la-auth_poly1305_donna.lo `test -f 'crypto_onetimeauth/poly1305/donna/auth_poly1305_donna.c' || echo '$(srcdir)/'`crypto_onetimeauth/poly1305/donna/auth_poly1305_donna.c
	$(AM_V_at)$(am__mv) crypto_onetimeauth/poly1305/donna/$(DEPDIR)/libsodium_la-auth_poly1305_donna.Tpo crypto_onetimeauth/poly1305/donna/$(DEPDIR)/libsodium_la-auth_poly1305_donna.Plo
#	$(AM_V_CC)source='crypto_onetimeauth/poly1305/donna/auth_poly1305_donna.c' object='crypto_onetimeauth/poly1305/donna/libsodium_la-auth_poly1305_donna.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_onetimeauth/poly1305/donna/libsodium_la-auth_poly1305_donna.lo `test -f 'crypto_onetimeauth/poly1305/donna/auth_poly1305_donna.c' || echo '$(srcdir)/'`crypto_onetimeauth/poly1305/donna/auth_poly1305_donna.c

crypto_onetimeauth/poly1305/donna/libsodium_la-verify_poly1305_donna.lo: crypto_onetimeauth/poly1305/donna/verify_poly1305_donna.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_onetimeauth/poly1305/donna/libsodium_la-verify_poly1305_donna.lo -MD -MP -MF crypto_onetimeauth/poly1305/donna/$(DEPDIR)/libsodium_la-verify_poly1305_donna.Tpo -c -o crypto_onetimeauth/poly1305/donna/libsodium_la-verify_poly1305_donna.lo `test -f 'crypto_onetimeauth/poly1305/donna/verify_poly1305_donna.c' || echo '$(srcdir)/'`crypto_onetimeauth/poly1305/donna/verify_poly1305_donna.c
	$(AM_V_at)$(am__mv) crypto_onetimeauth/poly1305/donna/$(DEPDIR)/libsodium_la-verify_poly1305_donna.Tpo crypto_onetimeauth/poly1305/donna/$(DEPDIR)/libsodium_la-verify_poly1305_donna.Plo
#	$(AM_V_CC)source='crypto_onetimeauth/poly1305/donna/verify_poly1305_donna.c' object='crypto_onetimeauth/poly1305/donna/libsodium_la-verify_poly1305_donna.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_onetimeauth/poly1305/donna/libsodium_la-verify_poly1305_donna.lo `test -f 'crypto_onetimeauth/poly1305/donna/verify_poly1305_donna.c' || echo '$(srcdir)/'`crypto_onetimeauth/poly1305/donna/verify_poly1305_donna.c

crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo: crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo -MD -MP -MF crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-crypto_scrypt-common.Tpo -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c
	$(AM_V_at)$(am__mv) crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-crypto_scrypt-common.Tpo crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-crypto_scrypt-common.Plo
#	$(AM_V_CC)source='crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c' object='crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c

crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo: crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo -MD -MP -MF crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-scrypt_platform.Tpo -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c
	$(AM_V_at)$(am__mv) crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-scrypt_platform.Tpo crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-scrypt_platform.Plo
#	$(AM_V_CC)source='crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c' object='crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c

crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo: crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo -MD -MP -MF crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pbkdf2-sha256.Tpo -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c
	$(AM_V_at)$(am__mv) crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pbkdf2-sha256.Tpo crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pbkdf2-sha256.Plo
#	$(AM_V_CC)source='crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c' object='crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c

crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo: crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo -MD -MP -MF crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256.Tpo -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c
	$(AM_V_at)$(am__mv) crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256.Tpo crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256.Plo
#	$(AM_V_CC)source='crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c' object='crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c

crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo: crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo -MD -MP -MF crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256_nosse.Tpo -c -o crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c
	$(AM_V_at)$(am__mv) crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256_nosse.Tpo crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256_nosse.Plo
#	$(AM_V_CC)source='crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c' object='crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c

crypto_pwhash/scryptsalsa208sha256/sse/libsodium_la-pwhash_scryptsalsa208sha256_sse.lo: crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/scryptsalsa208sha256/sse/libsodium_la-pwhash_scryptsalsa208sha256_sse.lo -MD -MP -MF crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256_sse.Tpo -c -o crypto_pwhash/scryptsalsa208sha256/sse/libsodium_la-pwhash_scryptsalsa208sha256_sse.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c
	$(AM_V_at)$(am__mv) crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256_sse.Tpo crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256_sse.Plo
#	$(AM_V_CC)source='crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c' object='crypto_pwhash/scryptsalsa208sha256/sse/libsodium_la-pwhash_scryptsalsa208sha256_sse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/scryptsalsa208sha256/sse/libsodium_la-pwhash_scryptsalsa208sha256_sse.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c

crypto_scalarmult/libsodium_la-crypto_scalarmult.lo: crypto_scalarmult/crypto_scalarmult.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/libsodium_la-crypto_scalarmult.lo -MD -MP -MF crypto_scalarmult/$(DEPDIR)/libsodium_la-crypto_scalarmult.Tpo -c -o crypto_scalarmult/libsodium_la-crypto_scalarmult.lo `test -f 'crypto_scalarmult/crypto_scalarmult.c' || echo '$(srcdir)/'`crypto_scalarmult/crypto_scalarmult.c
	$(AM_V_at)$(am__mv) crypto_scalarmult/$(DEPDIR)/libsodium_la-crypto_scalarmult.Tpo crypto_scalarmult/$(DEPDIR)/libsodium_la-crypto_scalarmult.Plo
#	$(AM_V_CC)source='crypto_scalarmult/crypto_scalarmult.c' object='crypto_scalarmult/libsodium_la-crypto_scalarmult.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/libsodium_la-crypto_scalarmult.lo `test -f 'crypto_scalarmult/crypto_scalarmult.c' || echo '$(srcdir)/'`crypto_scalarmult/crypto_scalarmult.c

crypto_scalarmult/curve25519/libsodium_la-scalarmult_curve25519_api.lo: crypto_scalarmult/curve25519/scalarmult_curve25519_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/libsodium_la-scalarmult_curve25519_api.lo -MD -MP -MF crypto_scalarmult/curve25519/$(DEPDIR)/libsodium_la-scalarmult_curve25519_api.Tpo -c -o crypto_scalarmult/curve25519/libsodium_la-scalarmult_curve25519_api.lo `test -f 'crypto_scalarmult/curve25519/scalarmult_curve25519_api.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/scalarmult_curve25519_api.c
	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/$(DEPDIR)/libsodium_la-scalarmult_curve25519_api.Tpo crypto_scalarmult/curve25519/$(DEPDIR)/libsodium_la-scalarmult_curve25519_api.Plo
#	$(AM_V_CC)source='crypto_scalarmult/curve25519/scalarmult_curve25519_api.c' object='crypto_scalarmult/curve25519/libsodium_la-scalarmult_curve25519_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/libsodium_la-scalarmult_curve25519_api.lo `test -f 'crypto_scalarmult/curve25519/scalarmult_curve25519_api.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/scalarmult_curve25519_api.c

crypto_secretbox/libsodium_la-crypto_secretbox.lo: crypto_secretbox/crypto_secretbox.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_secretbox/libsodium_la-crypto_secretbox.lo -MD -MP -MF crypto_secretbox/$(DEPDIR)/libsodium_la-crypto_secretbox.Tpo -c -o crypto_secretbox/libsodium_la-crypto_secretbox.lo `test -f 'crypto_secretbox/crypto_secretbox.c' || echo '$(srcdir)/'`crypto_secretbox/crypto_secretbox.c
	$(AM_V_at)$(am__mv) crypto_secretbox/$(DEPDIR)/libsodium_la-crypto_secretbox.Tpo crypto_secretbox/$(DEPDIR)/libsodium_la-crypto_secretbox.Plo
#	$(AM_V_CC)source='crypto_secretbox/crypto_secretbox.c' object='crypto_secretbox/libsodium_la-crypto_secretbox.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_secretbox/libsodium_la-crypto_secretbox.lo `test -f 'crypto_secretbox/crypto_secretbox.c' || echo '$(srcdir)/'`crypto_secretbox/crypto_secretbox.c

crypto_secretbox/libsodium_la-crypto_secretbox_easy.lo: crypto_secretbox/crypto_secretbox_easy.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_secretbox/libsodium_la-crypto_secretbox_easy.lo -MD -MP -MF crypto_secretbox/$(DEPDIR)/libsodium_la-crypto_secretbox_easy.Tpo -c -o crypto_secretbox/libsodium_la-crypto_secretbox_easy.lo `test -f 'crypto_secretbox/crypto_secretbox_easy.c' || echo '$(srcdir)/'`crypto_secretbox/crypto_secretbox_easy.c
	$(AM_V_at)$(am__mv) crypto_secretbox/$(DEPDIR)/libsodium_la-crypto_secretbox_easy.Tpo crypto_secretbox/$(DEPDIR)/libsodium_la-crypto_secretbox_easy.Plo
#	$(AM_V_CC)source='crypto_secretbox/crypto_secretbox_easy.c' object='crypto_secretbox/libsodium_la-crypto_secretbox_easy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_secretbox/libsodium_la-crypto_secretbox_easy.lo `test -f 'crypto_secretbox/crypto_secretbox_easy.c' || echo '$(srcdir)/'`crypto_secretbox/crypto_secretbox_easy.c

crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305_api.lo: crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305_api.lo -MD -MP -MF crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/libsodium_la-secretbox_xsalsa20poly1305_api.Tpo -c -o crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305_api.lo `test -f 'crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c' || echo '$(srcdir)/'`crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c
	$(AM_V_at)$(am__mv) crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/libsodium_la-secretbox_xsalsa20poly1305_api.Tpo crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/libsodium_la-secretbox_xsalsa20poly1305_api.Plo
#	$(AM_V_CC)source='crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c' object='crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305_api.lo `test -f 'crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c' || echo '$(srcdir)/'`crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c

crypto_secretbox/xsalsa20poly1305/ref/libsodium_la-box_xsalsa20poly1305.lo: crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_secretbox/xsalsa20poly1305/ref/libsodium_la-box_xsalsa20poly1305.lo -MD -MP -MF crypto_secretbox/xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-box_xsalsa20poly1305.Tpo -c -o crypto_secretbox/xsalsa20poly1305/ref/libsodium_la-box_xsalsa20poly1305.lo `test -f 'crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c
	$(AM_V_at)$(am__mv) crypto_secretbox/xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-box_xsalsa20poly1305.Tpo crypto_secretbox/xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-box_xsalsa20poly1305.Plo
#	$(AM_V_CC)source='crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c' object='crypto_secretbox/xsalsa20poly1305/ref/libsodium_la-box_xsalsa20poly1305.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_secretbox/xsalsa20poly1305/ref/libsodium_la-box_xsalsa20poly1305.lo `test -f 'crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c

crypto_shorthash/libsodium_la-crypto_shorthash.lo: crypto_shorthash/crypto_shorthash.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_shorthash/libsodium_la-crypto_shorthash.lo -MD -MP -MF crypto_shorthash/$(DEPDIR)/libsodium_la-crypto_shorthash.Tpo -c -o crypto_shorthash/libsodium_la-crypto_shorthash.lo `test -f 'crypto_shorthash/crypto_shorthash.c' || echo '$(srcdir)/'`crypto_shorthash/crypto_shorthash.c
	$(AM_V_at)$(am__mv) crypto_shorthash/$(DEPDIR)/libsodium_la-crypto_shorthash.Tpo crypto_shorthash/$(DEPDIR)/libsodium_la-crypto_shorthash.Plo
#	$(AM_V_CC)source='crypto_shorthash/crypto_shorthash.c' object='crypto_shorthash/libsodium_la-crypto_shorthash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_shorthash/libsodium_la-crypto_shorthash.lo `test -f 'crypto_shorthash/crypto_shorthash.c' || echo '$(srcdir)/'`crypto_shorthash/crypto_shorthash.c

crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24_api.lo: crypto_shorthash/siphash24/shorthash_siphash24_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24_api.lo -MD -MP -MF crypto_shorthash/siphash24/$(DEPDIR)/libsodium_la-shorthash_siphash24_api.Tpo -c -o crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24_api.lo `test -f 'crypto_shorthash/siphash24/shorthash_siphash24_api.c' || echo '$(srcdir)/'`crypto_shorthash/siphash24/shorthash_siphash24_api.c
	$(AM_V_at)$(am__mv) crypto_shorthash/siphash24/$(DEPDIR)/libsodium_la-shorthash_siphash24_api.Tpo crypto_shorthash/siphash24/$(DEPDIR)/libsodium_la-shorthash_siphash24_api.Plo
#	$(AM_V_CC)source='crypto_shorthash/siphash24/shorthash_siphash24_api.c' object='crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24_api.lo `test -f 'crypto_shorthash/siphash24/shorthash_siphash24_api.c' || echo '$(srcdir)/'`crypto_shorthash/siphash24/shorthash_siphash24_api.c

crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24.lo: crypto_shorthash/siphash24/ref/shorthash_siphash24.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24.lo -MD -MP -MF crypto_shorthash/siphash24/ref/$(DEPDIR)/libsodium_la-shorthash_siphash24.Tpo -c -o crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24.lo `test -f 'crypto_shorthash/siphash24/ref/shorthash_siphash24.c' || echo '$(srcdir)/'`crypto_shorthash/siphash24/ref/shorthash_siphash24.c
	$(AM_V_at)$(am__mv) crypto_shorthash/siphash24/ref/$(DEPDIR)/libsodium_la-shorthash_siphash24.Tpo crypto_shorthash/siphash24/ref/$(DEPDIR)/libsodium_la-shorthash_siphash24.Plo
#	$(AM_V_CC)source='crypto_shorthash/siphash24/ref/shorthash_siphash24.c' object='crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24.lo `test -f 'crypto_shorthash/siphash24/ref/shorthash_siphash24.c' || echo '$(srcdir)/'`crypto_shorthash/siphash24/ref/shorthash_siphash24.c

crypto_sign/libsodium_la-crypto_sign.lo: crypto_sign/crypto_sign.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/libsodium_la-crypto_sign.lo -MD -MP -MF crypto_sign/$(DEPDIR)/libsodium_la-crypto_sign.Tpo -c -o crypto_sign/libsodium_la-crypto_sign.lo `test -f 'crypto_sign/crypto_sign.c' || echo '$(srcdir)/'`crypto_sign/crypto_sign.c
	$(AM_V_at)$(am__mv) crypto_sign/$(DEPDIR)/libsodium_la-crypto_sign.Tpo crypto_sign/$(DEPDIR)/libsodium_la-crypto_sign.Plo
#	$(AM_V_CC)source='crypto_sign/crypto_sign.c' object='crypto_sign/libsodium_la-crypto_sign.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/libsodium_la-crypto_sign.lo `test -f 'crypto_sign/crypto_sign.c' || echo '$(srcdir)/'`crypto_sign/crypto_sign.c

crypto_sign/ed25519/libsodium_la-sign_ed25519_api.lo: crypto_sign/ed25519/sign_ed25519_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/libsodium_la-sign_ed25519_api.lo -MD -MP -MF crypto_sign/ed25519/$(DEPDIR)/libsodium_la-sign_ed25519_api.Tpo -c -o crypto_sign/ed25519/libsodium_la-sign_ed25519_api.lo `test -f 'crypto_sign/ed25519/sign_ed25519_api.c' || echo '$(srcdir)/'`crypto_sign/ed25519/sign_ed25519_api.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/$(DEPDIR)/libsodium_la-sign_ed25519_api.Tpo crypto_sign/ed25519/$(DEPDIR)/libsodium_la-sign_ed25519_api.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/sign_ed25519_api.c' object='crypto_sign/ed25519/libsodium_la-sign_ed25519_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/libsodium_la-sign_ed25519_api.lo `test -f 'crypto_sign/ed25519/sign_ed25519_api.c' || echo '$(srcdir)/'`crypto_sign/ed25519/sign_ed25519_api.c

crypto_sign/ed25519/ref10/libsodium_la-fe_0.lo: crypto_sign/ed25519/ref10/fe_0.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_0.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_0.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_0.lo `test -f 'crypto_sign/ed25519/ref10/fe_0.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_0.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_0.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_0.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_0.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_0.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_0.lo `test -f 'crypto_sign/ed25519/ref10/fe_0.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_0.c

crypto_sign/ed25519/ref10/libsodium_la-fe_1.lo: crypto_sign/ed25519/ref10/fe_1.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_1.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_1.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_1.lo `test -f 'crypto_sign/ed25519/ref10/fe_1.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_1.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_1.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_1.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_1.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_1.lo `test -f 'crypto_sign/ed25519/ref10/fe_1.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_1.c

crypto_sign/ed25519/ref10/libsodium_la-fe_add.lo: crypto_sign/ed25519/ref10/fe_add.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_add.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_add.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_add.lo `test -f 'crypto_sign/ed25519/ref10/fe_add.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_add.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_add.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_add.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_add.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_add.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_add.lo `test -f 'crypto_sign/ed25519/ref10/fe_add.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_add.c

crypto_sign/ed25519/ref10/libsodium_la-fe_cmov.lo: crypto_sign/ed25519/ref10/fe_cmov.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_cmov.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_cmov.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_cmov.lo `test -f 'crypto_sign/ed25519/ref10/fe_cmov.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_cmov.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_cmov.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_cmov.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_cmov.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_cmov.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_cmov.lo `test -f 'crypto_sign/ed25519/ref10/fe_cmov.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_cmov.c

crypto_sign/ed25519/ref10/libsodium_la-fe_copy.lo: crypto_sign/ed25519/ref10/fe_copy.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_copy.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_copy.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_copy.lo `test -f 'crypto_sign/ed25519/ref10/fe_copy.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_copy.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_copy.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_copy.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_copy.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_copy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_copy.lo `test -f 'crypto_sign/ed25519/ref10/fe_copy.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_copy.c

crypto_sign/ed25519/ref10/libsodium_la-fe_frombytes.lo: crypto_sign/ed25519/ref10/fe_frombytes.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_frombytes.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_frombytes.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_frombytes.lo `test -f 'crypto_sign/ed25519/ref10/fe_frombytes.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_frombytes.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_frombytes.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_frombytes.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_frombytes.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_frombytes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_frombytes.lo `test -f 'crypto_sign/ed25519/ref10/fe_frombytes.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_frombytes.c

crypto_sign/ed25519/ref10/libsodium_la-fe_invert.lo: crypto_sign/ed25519/ref10/fe_invert.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_invert.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_invert.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_invert.lo `test -f 'crypto_sign/ed25519/ref10/fe_invert.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_invert.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_invert.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_invert.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_invert.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_invert.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_invert.lo `test -f 'crypto_sign/ed25519/ref10/fe_invert.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_invert.c

crypto_sign/ed25519/ref10/libsodium_la-fe_isnegative.lo: crypto_sign/ed25519/ref10/fe_isnegative.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_isnegative.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_isnegative.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_isnegative.lo `test -f 'crypto_sign/ed25519/ref10/fe_isnegative.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_isnegative.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_isnegative.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_isnegative.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_isnegative.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_isnegative.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_isnegative.lo `test -f 'crypto_sign/ed25519/ref10/fe_isnegative.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_isnegative.c

crypto_sign/ed25519/ref10/libsodium_la-fe_isnonzero.lo: crypto_sign/ed25519/ref10/fe_isnonzero.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_isnonzero.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_isnonzero.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_isnonzero.lo `test -f 'crypto_sign/ed25519/ref10/fe_isnonzero.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_isnonzero.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_isnonzero.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_isnonzero.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_isnonzero.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_isnonzero.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_isnonzero.lo `test -f 'crypto_sign/ed25519/ref10/fe_isnonzero.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_isnonzero.c

crypto_sign/ed25519/ref10/libsodium_la-fe_mul.lo: crypto_sign/ed25519/ref10/fe_mul.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_mul.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_mul.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_mul.lo `test -f 'crypto_sign/ed25519/ref10/fe_mul.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_mul.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_mul.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_mul.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_mul.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_mul.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_mul.lo `test -f 'crypto_sign/ed25519/ref10/fe_mul.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_mul.c

crypto_sign/ed25519/ref10/libsodium_la-fe_neg.lo: crypto_sign/ed25519/ref10/fe_neg.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_neg.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_neg.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_neg.lo `test -f 'crypto_sign/ed25519/ref10/fe_neg.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_neg.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_neg.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_neg.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_neg.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_neg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_neg.lo `test -f 'crypto_sign/ed25519/ref10/fe_neg.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_neg.c

crypto_sign/ed25519/ref10/libsodium_la-fe_pow22523.lo: crypto_sign/ed25519/ref10/fe_pow22523.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_pow22523.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_pow22523.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_pow22523.lo `test -f 'crypto_sign/ed25519/ref10/fe_pow22523.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_pow22523.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_pow22523.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_pow22523.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_pow22523.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_pow22523.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_pow22523.lo `test -f 'crypto_sign/ed25519/ref10/fe_pow22523.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_pow22523.c

crypto_sign/ed25519/ref10/libsodium_la-fe_sq.lo: crypto_sign/ed25519/ref10/fe_sq.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_sq.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sq.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_sq.lo `test -f 'crypto_sign/ed25519/ref10/fe_sq.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_sq.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sq.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sq.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_sq.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_sq.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_sq.lo `test -f 'crypto_sign/ed25519/ref10/fe_sq.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_sq.c

crypto_sign/ed25519/ref10/libsodium_la-fe_sq2.lo: crypto_sign/ed25519/ref10/fe_sq2.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_sq2.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sq2.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_sq2.lo `test -f 'crypto_sign/ed25519/ref10/fe_sq2.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_sq2.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sq2.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sq2.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_sq2.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_sq2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_sq2.lo `test -f 'crypto_sign/ed25519/ref10/fe_sq2.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_sq2.c

crypto_sign/ed25519/ref10/libsodium_la-fe_sub.lo: crypto_sign/ed25519/ref10/fe_sub.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_sub.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sub.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_sub.lo `test -f 'crypto_sign/ed25519/ref10/fe_sub.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_sub.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sub.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sub.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_sub.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_sub.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_sub.lo `test -f 'crypto_sign/ed25519/ref10/fe_sub.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_sub.c

crypto_sign/ed25519/ref10/libsodium_la-fe_tobytes.lo: crypto_sign/ed25519/ref10/fe_tobytes.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_tobytes.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_tobytes.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_tobytes.lo `test -f 'crypto_sign/ed25519/ref10/fe_tobytes.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_tobytes.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_tobytes.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_tobytes.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_tobytes.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_tobytes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_tobytes.lo `test -f 'crypto_sign/ed25519/ref10/fe_tobytes.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_tobytes.c

crypto_sign/ed25519/ref10/libsodium_la-ge_add.lo: crypto_sign/ed25519/ref10/ge_add.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_add.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_add.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_add.lo `test -f 'crypto_sign/ed25519/ref10/ge_add.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_add.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_add.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_add.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_add.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_add.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_add.lo `test -f 'crypto_sign/ed25519/ref10/ge_add.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_add.c

crypto_sign/ed25519/ref10/libsodium_la-ge_double_scalarmult.lo: crypto_sign/ed25519/ref10/ge_double_scalarmult.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_double_scalarmult.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_double_scalarmult.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_double_scalarmult.lo `test -f 'crypto_sign/ed25519/ref10/ge_double_scalarmult.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_double_scalarmult.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_double_scalarmult.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_double_scalarmult.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_double_scalarmult.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_double_scalarmult.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_double_scalarmult.lo `test -f 'crypto_sign/ed25519/ref10/ge_double_scalarmult.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_double_scalarmult.c

crypto_sign/ed25519/ref10/libsodium_la-ge_frombytes.lo: crypto_sign/ed25519/ref10/ge_frombytes.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_frombytes.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_frombytes.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_frombytes.lo `test -f 'crypto_sign/ed25519/ref10/ge_frombytes.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_frombytes.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_frombytes.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_frombytes.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_frombytes.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_frombytes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_frombytes.lo `test -f 'crypto_sign/ed25519/ref10/ge_frombytes.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_frombytes.c

crypto_sign/ed25519/ref10/libsodium_la-ge_madd.lo: crypto_sign/ed25519/ref10/ge_madd.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_madd.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_madd.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_madd.lo `test -f 'crypto_sign/ed25519/ref10/ge_madd.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_madd.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_madd.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_madd.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_madd.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_madd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_madd.lo `test -f 'crypto_sign/ed25519/ref10/ge_madd.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_madd.c

crypto_sign/ed25519/ref10/libsodium_la-ge_msub.lo: crypto_sign/ed25519/ref10/ge_msub.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_msub.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_msub.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_msub.lo `test -f 'crypto_sign/ed25519/ref10/ge_msub.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_msub.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_msub.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_msub.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_msub.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_msub.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_msub.lo `test -f 'crypto_sign/ed25519/ref10/ge_msub.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_msub.c

crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p2.lo: crypto_sign/ed25519/ref10/ge_p1p1_to_p2.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p2.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p1p1_to_p2.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p2.lo `test -f 'crypto_sign/ed25519/ref10/ge_p1p1_to_p2.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p1p1_to_p2.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p1p1_to_p2.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p1p1_to_p2.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_p1p1_to_p2.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p2.lo `test -f 'crypto_sign/ed25519/ref10/ge_p1p1_to_p2.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p1p1_to_p2.c

crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p3.lo: crypto_sign/ed25519/ref10/ge_p1p1_to_p3.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p3.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p1p1_to_p3.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p3.lo `test -f 'crypto_sign/ed25519/ref10/ge_p1p1_to_p3.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p1p1_to_p3.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p1p1_to_p3.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p1p1_to_p3.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_p1p1_to_p3.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p3.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p3.lo `test -f 'crypto_sign/ed25519/ref10/ge_p1p1_to_p3.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p1p1_to_p3.c

crypto_sign/ed25519/ref10/libsodium_la-ge_p2_0.lo: crypto_sign/ed25519/ref10/ge_p2_0.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_p2_0.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p2_0.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p2_0.lo `test -f 'crypto_sign/ed25519/ref10/ge_p2_0.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p2_0.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p2_0.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p2_0.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_p2_0.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_p2_0.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p2_0.lo `test -f 'crypto_sign/ed25519/ref10/ge_p2_0.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p2_0.c

crypto_sign/ed25519/ref10/libsodium_la-ge_p2_dbl.lo: crypto_sign/ed25519/ref10/ge_p2_dbl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_p2_dbl.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p2_dbl.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p2_dbl.lo `test -f 'crypto_sign/ed25519/ref10/ge_p2_dbl.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p2_dbl.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p2_dbl.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p2_dbl.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_p2_dbl.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_p2_dbl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p2_dbl.lo `test -f 'crypto_sign/ed25519/ref10/ge_p2_dbl.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p2_dbl.c

crypto_sign/ed25519/ref10/libsodium_la-ge_p3_0.lo: crypto_sign/ed25519/ref10/ge_p3_0.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_p3_0.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_0.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p3_0.lo `test -f 'crypto_sign/ed25519/ref10/ge_p3_0.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p3_0.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_0.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_0.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_p3_0.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_p3_0.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p3_0.lo `test -f 'crypto_sign/ed25519/ref10/ge_p3_0.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p3_0.c

crypto_sign/ed25519/ref10/libsodium_la-ge_p3_dbl.lo: crypto_sign/ed25519/ref10/ge_p3_dbl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_p3_dbl.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_dbl.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p3_dbl.lo `test -f 'crypto_sign/ed25519/ref10/ge_p3_dbl.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p3_dbl.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_dbl.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_dbl.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_p3_dbl.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_p3_dbl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p3_dbl.lo `test -f 'crypto_sign/ed25519/ref10/ge_p3_dbl.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p3_dbl.c

crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_cached.lo: crypto_sign/ed25519/ref10/ge_p3_to_cached.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_cached.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_to_cached.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_cached.lo `test -f 'crypto_sign/ed25519/ref10/ge_p3_to_cached.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p3_to_cached.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_to_cached.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_to_cached.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_p3_to_cached.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_cached.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_cached.lo `test -f 'crypto_sign/ed25519/ref10/ge_p3_to_cached.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p3_to_cached.c

crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_p2.lo: crypto_sign/ed25519/ref10/ge_p3_to_p2.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_p2.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_to_p2.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_p2.lo `test -f 'crypto_sign/ed25519/ref10/ge_p3_to_p2.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p3_to_p2.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_to_p2.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_to_p2.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_p3_to_p2.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_p2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_p2.lo `test -f 'crypto_sign/ed25519/ref10/ge_p3_to_p2.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p3_to_p2.c

crypto_sign/ed25519/ref10/libsodium_la-ge_p3_tobytes.lo: crypto_sign/ed25519/ref10/ge_p3_tobytes.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_p3_tobytes.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_tobytes.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p3_tobytes.lo `test -f 'crypto_sign/ed25519/ref10/ge_p3_tobytes.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p3_tobytes.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_tobytes.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_tobytes.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_p3_tobytes.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_p3_tobytes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p3_tobytes.lo `test -f 'crypto_sign/ed25519/ref10/ge_p3_tobytes.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p3_tobytes.c

crypto_sign/ed25519/ref10/libsodium_la-ge_precomp_0.lo: crypto_sign/ed25519/ref10/ge_precomp_0.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_precomp_0.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_precomp_0.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_precomp_0.lo `test -f 'crypto_sign/ed25519/ref10/ge_precomp_0.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_precomp_0.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_precomp_0.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_precomp_0.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_precomp_0.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_precomp_0.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_precomp_0.lo `test -f 'crypto_sign/ed25519/ref10/ge_precomp_0.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_precomp_0.c

crypto_sign/ed25519/ref10/libsodium_la-ge_scalarmult_base.lo: crypto_sign/ed25519/ref10/ge_scalarmult_base.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_scalarmult_base.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_scalarmult_base.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_scalarmult_base.lo `test -f 'crypto_sign/ed25519/ref10/ge_scalarmult_base.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_scalarmult_base.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_scalarmult_base.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_scalarmult_base.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_scalarmult_base.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_scalarmult_base.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_scalarmult_base.lo `test -f 'crypto_sign/ed25519/ref10/ge_scalarmult_base.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_scalarmult_base.c

crypto_sign/ed25519/ref10/libsodium_la-ge_sub.lo: crypto_sign/ed25519/ref10/ge_sub.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_sub.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_sub.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_sub.lo `test -f 'crypto_sign/ed25519/ref10/ge_sub.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_sub.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_sub.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_sub.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_sub.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_sub.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_sub.lo `test -f 'crypto_sign/ed25519/ref10/ge_sub.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_sub.c

crypto_sign/ed25519/ref10/libsodium_la-ge_tobytes.lo: crypto_sign/ed25519/ref10/ge_tobytes.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_tobytes.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_tobytes.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_tobytes.lo `test -f 'crypto_sign/ed25519/ref10/ge_tobytes.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_tobytes.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_tobytes.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_tobytes.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_tobytes.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_tobytes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_tobytes.lo `test -f 'crypto_sign/ed25519/ref10/ge_tobytes.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_tobytes.c

crypto_sign/ed25519/ref10/libsodium_la-keypair.lo: crypto_sign/ed25519/ref10/keypair.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-keypair.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-keypair.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-keypair.lo `test -f 'crypto_sign/ed25519/ref10/keypair.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/keypair.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-keypair.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-keypair.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/keypair.c' object='crypto_sign/ed25519/ref10/libsodium_la-keypair.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-keypair.lo `test -f 'crypto_sign/ed25519/ref10/keypair.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/keypair.c

crypto_sign/ed25519/ref10/libsodium_la-open.lo: crypto_sign/ed25519/ref10/open.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-open.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-open.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-open.lo `test -f 'crypto_sign/ed25519/ref10/open.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/open.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-open.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-open.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/open.c' object='crypto_sign/ed25519/ref10/libsodium_la-open.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-open.lo `test -f 'crypto_sign/ed25519/ref10/open.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/open.c

crypto_sign/ed25519/ref10/libsodium_la-sc_muladd.lo: crypto_sign/ed25519/ref10/sc_muladd.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-sc_muladd.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sc_muladd.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-sc_muladd.lo `test -f 'crypto_sign/ed25519/ref10/sc_muladd.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/sc_muladd.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sc_muladd.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sc_muladd.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/sc_muladd.c' object='crypto_sign/ed25519/ref10/libsodium_la-sc_muladd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-sc_muladd.lo `test -f 'crypto_sign/ed25519/ref10/sc_muladd.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/sc_muladd.c

crypto_sign/ed25519/ref10/libsodium_la-sc_reduce.lo: crypto_sign/ed25519/ref10/sc_reduce.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-sc_reduce.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sc_reduce.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-sc_reduce.lo `test -f 'crypto_sign/ed25519/ref10/sc_reduce.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/sc_reduce.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sc_reduce.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sc_reduce.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/sc_reduce.c' object='crypto_sign/ed25519/ref10/libsodium_la-sc_reduce.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-sc_reduce.lo `test -f 'crypto_sign/ed25519/ref10/sc_reduce.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/sc_reduce.c

crypto_sign/ed25519/ref10/libsodium_la-sign.lo: crypto_sign/ed25519/ref10/sign.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-sign.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sign.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-sign.lo `test -f 'crypto_sign/ed25519/ref10/sign.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/sign.c
	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sign.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sign.Plo
#	$(AM_V_CC)source='crypto_sign/ed25519/ref10/sign.c' object='crypto_sign/ed25519/ref10/libsodium_la-sign.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-sign.lo `test -f 'crypto_sign/ed25519/ref10/sign.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/sign.c

crypto_stream/libsodium_la-crypto_stream.lo: crypto_stream/crypto_stream.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/libsodium_la-crypto_stream.lo -MD -MP -MF crypto_stream/$(DEPDIR)/libsodium_la-crypto_stream.Tpo -c -o crypto_stream/libsodium_la-crypto_stream.lo `test -f 'crypto_stream/crypto_stream.c' || echo '$(srcdir)/'`crypto_stream/crypto_stream.c
	$(AM_V_at)$(am__mv) crypto_stream/$(DEPDIR)/libsodium_la-crypto_stream.Tpo crypto_stream/$(DEPDIR)/libsodium_la-crypto_stream.Plo
#	$(AM_V_CC)source='crypto_stream/crypto_stream.c' object='crypto_stream/libsodium_la-crypto_stream.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/libsodium_la-crypto_stream.lo `test -f 'crypto_stream/crypto_stream.c' || echo '$(srcdir)/'`crypto_stream/crypto_stream.c

crypto_stream/chacha20/libsodium_la-stream_chacha20_api.lo: crypto_stream/chacha20/stream_chacha20_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/chacha20/libsodium_la-stream_chacha20_api.lo -MD -MP -MF crypto_stream/chacha20/$(DEPDIR)/libsodium_la-stream_chacha20_api.Tpo -c -o crypto_stream/chacha20/libsodium_la-stream_chacha20_api.lo `test -f 'crypto_stream/chacha20/stream_chacha20_api.c' || echo '$(srcdir)/'`crypto_stream/chacha20/stream_chacha20_api.c
	$(AM_V_at)$(am__mv) crypto_stream/chacha20/$(DEPDIR)/libsodium_la-stream_chacha20_api.Tpo crypto_stream/chacha20/$(DEPDIR)/libsodium_la-stream_chacha20_api.Plo
#	$(AM_V_CC)source='crypto_stream/chacha20/stream_chacha20_api.c' object='crypto_stream/chacha20/libsodium_la-stream_chacha20_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/chacha20/libsodium_la-stream_chacha20_api.lo `test -f 'crypto_stream/chacha20/stream_chacha20_api.c' || echo '$(srcdir)/'`crypto_stream/chacha20/stream_chacha20_api.c

crypto_stream/chacha20/ref/libsodium_la-stream_chacha20_ref.lo: crypto_stream/chacha20/ref/stream_chacha20_ref.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/chacha20/ref/libsodium_la-stream_chacha20_ref.lo -MD -MP -MF crypto_stream/chacha20/ref/$(DEPDIR)/libsodium_la-stream_chacha20_ref.Tpo -c -o crypto_stream/chacha20/ref/libsodium_la-stream_chacha20_ref.lo `test -f 'crypto_stream/chacha20/ref/stream_chacha20_ref.c' || echo '$(srcdir)/'`crypto_stream/chacha20/ref/stream_chacha20_ref.c
	$(AM_V_at)$(am__mv) crypto_stream/chacha20/ref/$(DEPDIR)/libsodium_la-stream_chacha20_ref.Tpo crypto_stream/chacha20/ref/$(DEPDIR)/libsodium_la-stream_chacha20_ref.Plo
#	$(AM_V_CC)source='crypto_stream/chacha20/ref/stream_chacha20_ref.c' object='crypto_stream/chacha20/ref/libsodium_la-stream_chacha20_ref.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/chacha20/ref/libsodium_la-stream_chacha20_ref.lo `test -f 'crypto_stream/chacha20/ref/stream_chacha20_ref.c' || echo '$(srcdir)/'`crypto_stream/chacha20/ref/stream_chacha20_ref.c

crypto_stream/salsa20/libsodium_la-stream_salsa20_api.lo: crypto_stream/salsa20/stream_salsa20_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa20/libsodium_la-stream_salsa20_api.lo -MD -MP -MF crypto_stream/salsa20/$(DEPDIR)/libsodium_la-stream_salsa20_api.Tpo -c -o crypto_stream/salsa20/libsodium_la-stream_salsa20_api.lo `test -f 'crypto_stream/salsa20/stream_salsa20_api.c' || echo '$(srcdir)/'`crypto_stream/salsa20/stream_salsa20_api.c
	$(AM_V_at)$(am__mv) crypto_stream/salsa20/$(DEPDIR)/libsodium_la-stream_salsa20_api.Tpo crypto_stream/salsa20/$(DEPDIR)/libsodium_la-stream_salsa20_api.Plo
#	$(AM_V_CC)source='crypto_stream/salsa20/stream_salsa20_api.c' object='crypto_stream/salsa20/libsodium_la-stream_salsa20_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa20/libsodium_la-stream_salsa20_api.lo `test -f 'crypto_stream/salsa20/stream_salsa20_api.c' || echo '$(srcdir)/'`crypto_stream/salsa20/stream_salsa20_api.c

crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20_api.lo: crypto_stream/xsalsa20/stream_xsalsa20_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20_api.lo -MD -MP -MF crypto_stream/xsalsa20/$(DEPDIR)/libsodium_la-stream_xsalsa20_api.Tpo -c -o crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20_api.lo `test -f 'crypto_stream/xsalsa20/stream_xsalsa20_api.c' || echo '$(srcdir)/'`crypto_stream/xsalsa20/stream_xsalsa20_api.c
	$(AM_V_at)$(am__mv) crypto_stream/xsalsa20/$(DEPDIR)/libsodium_la-stream_xsalsa20_api.Tpo crypto_stream/xsalsa20/$(DEPDIR)/libsodium_la-stream_xsalsa20_api.Plo
#	$(AM_V_CC)source='crypto_stream/xsalsa20/stream_xsalsa20_api.c' object='crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20_api.lo `test -f 'crypto_stream/xsalsa20/stream_xsalsa20_api.c' || echo '$(srcdir)/'`crypto_stream/xsalsa20/stream_xsalsa20_api.c

crypto_stream/xsalsa20/ref/libsodium_la-stream_xsalsa20.lo: crypto_stream/xsalsa20/ref/stream_xsalsa20.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/xsalsa20/ref/libsodium_la-stream_xsalsa20.lo -MD -MP -MF crypto_stream/xsalsa20/ref/$(DEPDIR)/libsodium_la-stream_xsalsa20.Tpo -c -o crypto_stream/xsalsa20/ref/libsodium_la-stream_xsalsa20.lo `test -f 'crypto_stream/xsalsa20/ref/stream_xsalsa20.c' || echo '$(srcdir)/'`crypto_stream/xsalsa20/ref/stream_xsalsa20.c
	$(AM_V_at)$(am__mv) crypto_stream/xsalsa20/ref/$(DEPDIR)/libsodium_la-stream_xsalsa20.Tpo crypto_stream/xsalsa20/ref/$(DEPDIR)/libsodium_la-stream_xsalsa20.Plo
#	$(AM_V_CC)source='crypto_stream/xsalsa20/ref/stream_xsalsa20.c' object='crypto_stream/xsalsa20/ref/libsodium_la-stream_xsalsa20.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/xsalsa20/ref/libsodium_la-stream_xsalsa20.lo `test -f 'crypto_stream/xsalsa20/ref/stream_xsalsa20.c' || echo '$(srcdir)/'`crypto_stream/xsalsa20/ref/stream_xsalsa20.c

crypto_stream/xsalsa20/ref/libsodium_la-xor_xsalsa20.lo: crypto_stream/xsalsa20/ref/xor_xsalsa20.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/xsalsa20/ref/libsodium_la-xor_xsalsa20.lo -MD -MP -MF crypto_stream/xsalsa20/ref/$(DEPDIR)/libsodium_la-xor_xsalsa20.Tpo -c -o crypto_stream/xsalsa20/ref/libsodium_la-xor_xsalsa20.lo `test -f 'crypto_stream/xsalsa20/ref/xor_xsalsa20.c' || echo '$(srcdir)/'`crypto_stream/xsalsa20/ref/xor_xsalsa20.c
	$(AM_V_at)$(am__mv) crypto_stream/xsalsa20/ref/$(DEPDIR)/libsodium_la-xor_xsalsa20.Tpo crypto_stream/xsalsa20/ref/$(DEPDIR)/libsodium_la-xor_xsalsa20.Plo
#	$(AM_V_CC)source='crypto_stream/xsalsa20/ref/xor_xsalsa20.c' object='crypto_stream/xsalsa20/ref/libsodium_la-xor_xsalsa20.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/xsalsa20/ref/libsodium_la-xor_xsalsa20.lo `test -f 'crypto_stream/xsalsa20/ref/xor_xsalsa20.c' || echo '$(srcdir)/'`crypto_stream/xsalsa20/ref/xor_xsalsa20.c

crypto_verify/16/libsodium_la-verify_16_api.lo: crypto_verify/16/verify_16_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_verify/16/libsodium_la-verify_16_api.lo -MD -MP -MF crypto_verify/16/$(DEPDIR)/libsodium_la-verify_16_api.Tpo -c -o crypto_verify/16/libsodium_la-verify_16_api.lo `test -f 'crypto_verify/16/verify_16_api.c' || echo '$(srcdir)/'`crypto_verify/16/verify_16_api.c
	$(AM_V_at)$(am__mv) crypto_verify/16/$(DEPDIR)/libsodium_la-verify_16_api.Tpo crypto_verify/16/$(DEPDIR)/libsodium_la-verify_16_api.Plo
#	$(AM_V_CC)source='crypto_verify/16/verify_16_api.c' object='crypto_verify/16/libsodium_la-verify_16_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_verify/16/libsodium_la-verify_16_api.lo `test -f 'crypto_verify/16/verify_16_api.c' || echo '$(srcdir)/'`crypto_verify/16/verify_16_api.c

crypto_verify/16/ref/libsodium_la-verify_16.lo: crypto_verify/16/ref/verify_16.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_verify/16/ref/libsodium_la-verify_16.lo -MD -MP -MF crypto_verify/16/ref/$(DEPDIR)/libsodium_la-verify_16.Tpo -c -o crypto_verify/16/ref/libsodium_la-verify_16.lo `test -f 'crypto_verify/16/ref/verify_16.c' || echo '$(srcdir)/'`crypto_verify/16/ref/verify_16.c
	$(AM_V_at)$(am__mv) crypto_verify/16/ref/$(DEPDIR)/libsodium_la-verify_16.Tpo crypto_verify/16/ref/$(DEPDIR)/libsodium_la-verify_16.Plo
#	$(AM_V_CC)source='crypto_verify/16/ref/verify_16.c' object='crypto_verify/16/ref/libsodium_la-verify_16.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_verify/16/ref/libsodium_la-verify_16.lo `test -f 'crypto_verify/16/ref/verify_16.c' || echo '$(srcdir)/'`crypto_verify/16/ref/verify_16.c

crypto_verify/32/libsodium_la-verify_32_api.lo: crypto_verify/32/verify_32_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_verify/32/libsodium_la-verify_32_api.lo -MD -MP -MF crypto_verify/32/$(DEPDIR)/libsodium_la-verify_32_api.Tpo -c -o crypto_verify/32/libsodium_la-verify_32_api.lo `test -f 'crypto_verify/32/verify_32_api.c' || echo '$(srcdir)/'`crypto_verify/32/verify_32_api.c
	$(AM_V_at)$(am__mv) crypto_verify/32/$(DEPDIR)/libsodium_la-verify_32_api.Tpo crypto_verify/32/$(DEPDIR)/libsodium_la-verify_32_api.Plo
#	$(AM_V_CC)source='crypto_verify/32/verify_32_api.c' object='crypto_verify/32/libsodium_la-verify_32_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_verify/32/libsodium_la-verify_32_api.lo `test -f 'crypto_verify/32/verify_32_api.c' || echo '$(srcdir)/'`crypto_verify/32/verify_32_api.c

crypto_verify/32/ref/libsodium_la-verify_32.lo: crypto_verify/32/ref/verify_32.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_verify/32/ref/libsodium_la-verify_32.lo -MD -MP -MF crypto_verify/32/ref/$(DEPDIR)/libsodium_la-verify_32.Tpo -c -o crypto_verify/32/ref/libsodium_la-verify_32.lo `test -f 'crypto_verify/32/ref/verify_32.c' || echo '$(srcdir)/'`crypto_verify/32/ref/verify_32.c
	$(AM_V_at)$(am__mv) crypto_verify/32/ref/$(DEPDIR)/libsodium_la-verify_32.Tpo crypto_verify/32/ref/$(DEPDIR)/libsodium_la-verify_32.Plo
#	$(AM_V_CC)source='crypto_verify/32/ref/verify_32.c' object='crypto_verify/32/ref/libsodium_la-verify_32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_verify/32/ref/libsodium_la-verify_32.lo `test -f 'crypto_verify/32/ref/verify_32.c' || echo '$(srcdir)/'`crypto_verify/32/ref/verify_32.c

crypto_verify/64/libsodium_la-verify_64_api.lo: crypto_verify/64/verify_64_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_verify/64/libsodium_la-verify_64_api.lo -MD -MP -MF crypto_verify/64/$(DEPDIR)/libsodium_la-verify_64_api.Tpo -c -o crypto_verify/64/libsodium_la-verify_64_api.lo `test -f 'crypto_verify/64/verify_64_api.c' || echo '$(srcdir)/'`crypto_verify/64/verify_64_api.c
	$(AM_V_at)$(am__mv) crypto_verify/64/$(DEPDIR)/libsodium_la-verify_64_api.Tpo crypto_verify/64/$(DEPDIR)/libsodium_la-verify_64_api.Plo
#	$(AM_V_CC)source='crypto_verify/64/verify_64_api.c' object='crypto_verify/64/libsodium_la-verify_64_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_verify/64/libsodium_la-verify_64_api.lo `test -f 'crypto_verify/64/verify_64_api.c' || echo '$(srcdir)/'`crypto_verify/64/verify_64_api.c

crypto_verify/64/ref/libsodium_la-verify_64.lo: crypto_verify/64/ref/verify_64.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_verify/64/ref/libsodium_la-verify_64.lo -MD -MP -MF crypto_verify/64/ref/$(DEPDIR)/libsodium_la-verify_64.Tpo -c -o crypto_verify/64/ref/libsodium_la-verify_64.lo `test -f 'crypto_verify/64/ref/verify_64.c' || echo '$(srcdir)/'`crypto_verify/64/ref/verify_64.c
	$(AM_V_at)$(am__mv) crypto_verify/64/ref/$(DEPDIR)/libsodium_la-verify_64.Tpo crypto_verify/64/ref/$(DEPDIR)/libsodium_la-verify_64.Plo
#	$(AM_V_CC)source='crypto_verify/64/ref/verify_64.c' object='crypto_verify/64/ref/libsodium_la-verify_64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_verify/64/ref/libsodium_la-verify_64.lo `test -f 'crypto_verify/64/ref/verify_64.c' || echo '$(srcdir)/'`crypto_verify/64/ref/verify_64.c

randombytes/libsodium_la-randombytes.lo: randombytes/randombytes.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT randombytes/libsodium_la-randombytes.lo -MD -MP -MF randombytes/$(DEPDIR)/libsodium_la-randombytes.Tpo -c -o randombytes/libsodium_la-randombytes.lo `test -f 'randombytes/randombytes.c' || echo '$(srcdir)/'`randombytes/randombytes.c
	$(AM_V_at)$(am__mv) randombytes/$(DEPDIR)/libsodium_la-randombytes.Tpo randombytes/$(DEPDIR)/libsodium_la-randombytes.Plo
#	$(AM_V_CC)source='randombytes/randombytes.c' object='randombytes/libsodium_la-randombytes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o randombytes/libsodium_la-randombytes.lo `test -f 'randombytes/randombytes.c' || echo '$(srcdir)/'`randombytes/randombytes.c

sodium/libsodium_la-core.lo: sodium/core.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sodium/libsodium_la-core.lo -MD -MP -MF sodium/$(DEPDIR)/libsodium_la-core.Tpo -c -o sodium/libsodium_la-core.lo `test -f 'sodium/core.c' || echo '$(srcdir)/'`sodium/core.c
	$(AM_V_at)$(am__mv) sodium/$(DEPDIR)/libsodium_la-core.Tpo sodium/$(DEPDIR)/libsodium_la-core.Plo
#	$(AM_V_CC)source='sodium/core.c' object='sodium/libsodium_la-core.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sodium/libsodium_la-core.lo `test -f 'sodium/core.c' || echo '$(srcdir)/'`sodium/core.c

sodium/libsodium_la-runtime.lo: sodium/runtime.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sodium/libsodium_la-runtime.lo -MD -MP -MF sodium/$(DEPDIR)/libsodium_la-runtime.Tpo -c -o sodium/libsodium_la-runtime.lo `test -f 'sodium/runtime.c' || echo '$(srcdir)/'`sodium/runtime.c
	$(AM_V_at)$(am__mv) sodium/$(DEPDIR)/libsodium_la-runtime.Tpo sodium/$(DEPDIR)/libsodium_la-runtime.Plo
#	$(AM_V_CC)source='sodium/runtime.c' object='sodium/libsodium_la-runtime.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sodium/libsodium_la-runtime.lo `test -f 'sodium/runtime.c' || echo '$(srcdir)/'`sodium/runtime.c

sodium/libsodium_la-utils.lo: sodium/utils.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sodium/libsodium_la-utils.lo -MD -MP -MF sodium/$(DEPDIR)/libsodium_la-utils.Tpo -c -o sodium/libsodium_la-utils.lo `test -f 'sodium/utils.c' || echo '$(srcdir)/'`sodium/utils.c
	$(AM_V_at)$(am__mv) sodium/$(DEPDIR)/libsodium_la-utils.Tpo sodium/$(DEPDIR)/libsodium_la-utils.Plo
#	$(AM_V_CC)source='sodium/utils.c' object='sodium/libsodium_la-utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sodium/libsodium_la-utils.lo `test -f 'sodium/utils.c' || echo '$(srcdir)/'`sodium/utils.c

sodium/libsodium_la-version.lo: sodium/version.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sodium/libsodium_la-version.lo -MD -MP -MF sodium/$(DEPDIR)/libsodium_la-version.Tpo -c -o sodium/libsodium_la-version.lo `test -f 'sodium/version.c' || echo '$(srcdir)/'`sodium/version.c
	$(AM_V_at)$(am__mv) sodium/$(DEPDIR)/libsodium_la-version.Tpo sodium/$(DEPDIR)/libsodium_la-version.Plo
#	$(AM_V_CC)source='sodium/version.c' object='sodium/libsodium_la-version.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sodium/libsodium_la-version.lo `test -f 'sodium/version.c' || echo '$(srcdir)/'`sodium/version.c

randombytes/salsa20/libsodium_la-randombytes_salsa20_random.lo: randombytes/salsa20/randombytes_salsa20_random.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT randombytes/salsa20/libsodium_la-randombytes_salsa20_random.lo -MD -MP -MF randombytes/salsa20/$(DEPDIR)/libsodium_la-randombytes_salsa20_random.Tpo -c -o randombytes/salsa20/libsodium_la-randombytes_salsa20_random.lo `test -f 'randombytes/salsa20/randombytes_salsa20_random.c' || echo '$(srcdir)/'`randombytes/salsa20/randombytes_salsa20_random.c
	$(AM_V_at)$(am__mv) randombytes/salsa20/$(DEPDIR)/libsodium_la-randombytes_salsa20_random.Tpo randombytes/salsa20/$(DEPDIR)/libsodium_la-randombytes_salsa20_random.Plo
#	$(AM_V_CC)source='randombytes/salsa20/randombytes_salsa20_random.c' object='randombytes/salsa20/libsodium_la-randombytes_salsa20_random.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o randombytes/salsa20/libsodium_la-randombytes_salsa20_random.lo `test -f 'randombytes/salsa20/randombytes_salsa20_random.c' || echo '$(srcdir)/'`randombytes/salsa20/randombytes_salsa20_random.c

randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo: randombytes/sysrandom/randombytes_sysrandom.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo -MD -MP -MF randombytes/sysrandom/$(DEPDIR)/libsodium_la-randombytes_sysrandom.Tpo -c -o randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo `test -f 'randombytes/sysrandom/randombytes_sysrandom.c' || echo '$(srcdir)/'`randombytes/sysrandom/randombytes_sysrandom.c
	$(AM_V_at)$(am__mv) randombytes/sysrandom/$(DEPDIR)/libsodium_la-randombytes_sysrandom.Tpo randombytes/sysrandom/$(DEPDIR)/libsodium_la-randombytes_sysrandom.Plo
#	$(AM_V_CC)source='randombytes/sysrandom/randombytes_sysrandom.c' object='randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo `test -f 'randombytes/sysrandom/randombytes_sysrandom.c' || echo '$(srcdir)/'`randombytes/sysrandom/randombytes_sysrandom.c

crypto_scalarmult/curve25519/donna_c64/libsodium_la-base_curve25519_donna_c64.lo: crypto_scalarmult/curve25519/donna_c64/base_curve25519_donna_c64.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/donna_c64/libsodium_la-base_curve25519_donna_c64.lo -MD -MP -MF crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)/libsodium_la-base_curve25519_donna_c64.Tpo -c -o crypto_scalarmult/curve25519/donna_c64/libsodium_la-base_curve25519_donna_c64.lo `test -f 'crypto_scalarmult/curve25519/donna_c64/base_curve25519_donna_c64.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/donna_c64/base_curve25519_donna_c64.c
	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)/libsodium_la-base_curve25519_donna_c64.Tpo crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)/libsodium_la-base_curve25519_donna_c64.Plo
#	$(AM_V_CC)source='crypto_scalarmult/curve25519/donna_c64/base_curve25519_donna_c64.c' object='crypto_scalarmult/curve25519/donna_c64/libsodium_la-base_curve25519_donna_c64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/donna_c64/libsodium_la-base_curve25519_donna_c64.lo `test -f 'crypto_scalarmult/curve25519/donna_c64/base_curve25519_donna_c64.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/donna_c64/base_curve25519_donna_c64.c

crypto_scalarmult/curve25519/donna_c64/libsodium_la-smult_curve25519_donna_c64.lo: crypto_scalarmult/curve25519/donna_c64/smult_curve25519_donna_c64.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/donna_c64/libsodium_la-smult_curve25519_donna_c64.lo -MD -MP -MF crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)/libsodium_la-smult_curve25519_donna_c64.Tpo -c -o crypto_scalarmult/curve25519/donna_c64/libsodium_la-smult_curve25519_donna_c64.lo `test -f 'crypto_scalarmult/curve25519/donna_c64/smult_curve25519_donna_c64.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/donna_c64/smult_curve25519_donna_c64.c
	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)/libsodium_la-smult_curve25519_donna_c64.Tpo crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)/libsodium_la-smult_curve25519_donna_c64.Plo
#	$(AM_V_CC)source='crypto_scalarmult/curve25519/donna_c64/smult_curve25519_donna_c64.c' object='crypto_scalarmult/curve25519/donna_c64/libsodium_la-smult_curve25519_donna_c64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/donna_c64/libsodium_la-smult_curve25519_donna_c64.lo `test -f 'crypto_scalarmult/curve25519/donna_c64/smult_curve25519_donna_c64.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/donna_c64/smult_curve25519_donna_c64.c

crypto_scalarmult/curve25519/ref10/libsodium_la-base_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/base_curve25519_ref10.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-base_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-base_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-base_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/base_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/base_curve25519_ref10.c
	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-base_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-base_curve25519_ref10.Plo
#	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/base_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-base_curve25519_ref10.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-base_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/base_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/base_curve25519_ref10.c

crypto_scalarmult/curve25519/ref10/libsodium_la-fe_0_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_0_curve25519_ref10.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_0_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_0_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_0_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_0_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_0_curve25519_ref10.c
	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_0_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_0_curve25519_ref10.Plo
#	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_0_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_0_curve25519_ref10.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_0_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_0_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_0_curve25519_ref10.c

crypto_scalarmult/curve25519/ref10/libsodium_la-fe_1_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_1_curve25519_ref10.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_1_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_1_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_1_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_1_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_1_curve25519_ref10.c
	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_1_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_1_curve25519_ref10.Plo
#	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_1_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_1_curve25519_ref10.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_1_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_1_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_1_curve25519_ref10.c

crypto_scalarmult/curve25519/ref10/libsodium_la-fe_add_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_add_curve25519_ref10.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_add_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_add_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_add_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_add_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_add_curve25519_ref10.c
	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_add_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_add_curve25519_ref10.Plo
#	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_add_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_add_curve25519_ref10.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_add_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_add_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_add_curve25519_ref10.c

crypto_scalarmult/curve25519/ref10/libsodium_la-fe_copy_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_copy_curve25519_ref10.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_copy_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_copy_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_copy_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_copy_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_copy_curve25519_ref10.c
	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_copy_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_copy_curve25519_ref10.Plo
#	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_copy_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_copy_curve25519_ref10.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_copy_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_copy_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_copy_curve25519_ref10.c

crypto_scalarmult/curve25519/ref10/libsodium_la-fe_cswap_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_cswap_curve25519_ref10.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_cswap_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_cswap_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_cswap_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_cswap_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_cswap_curve25519_ref10.c
	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_cswap_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_cswap_curve25519_ref10.Plo
#	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_cswap_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_cswap_curve25519_ref10.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_cswap_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_cswap_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_cswap_curve25519_ref10.c

crypto_scalarmult/curve25519/ref10/libsodium_la-fe_frombytes_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_frombytes_curve25519_ref10.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_frombytes_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_frombytes_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_frombytes_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_frombytes_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_frombytes_curve25519_ref10.c
	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_frombytes_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_frombytes_curve25519_ref10.Plo
#	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_frombytes_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_frombytes_curve25519_ref10.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_frombytes_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_frombytes_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_frombytes_curve25519_ref10.c

crypto_scalarmult/curve25519/ref10/libsodium_la-fe_invert_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_invert_curve25519_ref10.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_invert_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_invert_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_invert_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_invert_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_invert_curve25519_ref10.c
	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_invert_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_invert_curve25519_ref10.Plo
#	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_invert_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_invert_curve25519_ref10.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_invert_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_invert_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_invert_curve25519_ref10.c

crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_mul_curve25519_ref10.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_mul_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_mul_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_mul_curve25519_ref10.c
	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_mul_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_mul_curve25519_ref10.Plo
#	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_mul_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul_curve25519_ref10.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_mul_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_mul_curve25519_ref10.c

crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul121666_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_mul121666_curve25519_ref10.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul121666_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_mul121666_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul121666_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_mul121666_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_mul121666_curve25519_ref10.c
	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_mul121666_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_mul121666_curve25519_ref10.Plo
#	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_mul121666_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul121666_curve25519_ref10.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul121666_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_mul121666_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_mul121666_curve25519_ref10.c

crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sq_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_sq_curve25519_ref10.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sq_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_sq_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sq_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_sq_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_sq_curve25519_ref10.c
	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_sq_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_sq_curve25519_ref10.Plo
#	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_sq_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sq_curve25519_ref10.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sq_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_sq_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_sq_curve25519_ref10.c

crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sub_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_sub_curve25519_ref10.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sub_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_sub_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sub_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_sub_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_sub_curve25519_ref10.c
	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_sub_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_sub_curve25519_ref10.Plo
#	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_sub_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sub_curve25519_ref10.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sub_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_sub_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_sub_curve25519_ref10.c

crypto_scalarmult/curve25519/ref10/libsodium_la-fe_tobytes_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_tobytes_curve25519_ref10.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_tobytes_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_tobytes_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_tobytes_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_tobytes_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_tobytes_curve25519_ref10.c
	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_tobytes_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_tobytes_curve25519_ref10.Plo
#	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_tobytes_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_tobytes_curve25519_ref10.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_tobytes_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_tobytes_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_tobytes_curve25519_ref10.c

crypto_scalarmult/curve25519/ref10/libsodium_la-scalarmult_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/scalarmult_curve25519_ref10.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-scalarmult_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-scalarmult_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-scalarmult_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/scalarmult_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/scalarmult_curve25519_ref10.c
	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-scalarmult_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-scalarmult_curve25519_ref10.Plo
#	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/scalarmult_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-scalarmult_curve25519_ref10.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-scalarmult_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/scalarmult_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/scalarmult_curve25519_ref10.c

crypto_stream/salsa20/ref/libsodium_la-stream_salsa20_ref.lo: crypto_stream/salsa20/ref/stream_salsa20_ref.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa20/ref/libsodium_la-stream_salsa20_ref.lo -MD -MP -MF crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-stream_salsa20_ref.Tpo -c -o crypto_stream/salsa20/ref/libsodium_la-stream_salsa20_ref.lo `test -f 'crypto_stream/salsa20/ref/stream_salsa20_ref.c' || echo '$(srcdir)/'`crypto_stream/salsa20/ref/stream_salsa20_ref.c
	$(AM_V_at)$(am__mv) crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-stream_salsa20_ref.Tpo crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-stream_salsa20_ref.Plo
#	$(AM_V_CC)source='crypto_stream/salsa20/ref/stream_salsa20_ref.c' object='crypto_stream/salsa20/ref/libsodium_la-stream_salsa20_ref.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa20/ref/libsodium_la-stream_salsa20_ref.lo `test -f 'crypto_stream/salsa20/ref/stream_salsa20_ref.c' || echo '$(srcdir)/'`crypto_stream/salsa20/ref/stream_salsa20_ref.c

crypto_stream/salsa20/ref/libsodium_la-xor_salsa20_ref.lo: crypto_stream/salsa20/ref/xor_salsa20_ref.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa20/ref/libsodium_la-xor_salsa20_ref.lo -MD -MP -MF crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-xor_salsa20_ref.Tpo -c -o crypto_stream/salsa20/ref/libsodium_la-xor_salsa20_ref.lo `test -f 'crypto_stream/salsa20/ref/xor_salsa20_ref.c' || echo '$(srcdir)/'`crypto_stream/salsa20/ref/xor_salsa20_ref.c
	$(AM_V_at)$(am__mv) crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-xor_salsa20_ref.Tpo crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-xor_salsa20_ref.Plo
#	$(AM_V_CC)source='crypto_stream/salsa20/ref/xor_salsa20_ref.c' object='crypto_stream/salsa20/ref/libsodium_la-xor_salsa20_ref.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa20/ref/libsodium_la-xor_salsa20_ref.lo `test -f 'crypto_stream/salsa20/ref/xor_salsa20_ref.c' || echo '$(srcdir)/'`crypto_stream/salsa20/ref/xor_salsa20_ref.c

crypto_core/salsa2012/ref/libsodium_la-core_salsa2012.lo: crypto_core/salsa2012/ref/core_salsa2012.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/salsa2012/ref/libsodium_la-core_salsa2012.lo -MD -MP -MF crypto_core/salsa2012/ref/$(DEPDIR)/libsodium_la-core_salsa2012.Tpo -c -o crypto_core/salsa2012/ref/libsodium_la-core_salsa2012.lo `test -f 'crypto_core/salsa2012/ref/core_salsa2012.c' || echo '$(srcdir)/'`crypto_core/salsa2012/ref/core_salsa2012.c
	$(AM_V_at)$(am__mv) crypto_core/salsa2012/ref/$(DEPDIR)/libsodium_la-core_salsa2012.Tpo crypto_core/salsa2012/ref/$(DEPDIR)/libsodium_la-core_salsa2012.Plo
#	$(AM_V_CC)source='crypto_core/salsa2012/ref/core_salsa2012.c' object='crypto_core/salsa2012/ref/libsodium_la-core_salsa2012.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/salsa2012/ref/libsodium_la-core_salsa2012.lo `test -f 'crypto_core/salsa2012/ref/core_salsa2012.c' || echo '$(srcdir)/'`crypto_core/salsa2012/ref/core_salsa2012.c

crypto_core/salsa2012/libsodium_la-core_salsa2012_api.lo: crypto_core/salsa2012/core_salsa2012_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/salsa2012/libsodium_la-core_salsa2012_api.lo -MD -MP -MF crypto_core/salsa2012/$(DEPDIR)/libsodium_la-core_salsa2012_api.Tpo -c -o crypto_core/salsa2012/libsodium_la-core_salsa2012_api.lo `test -f 'crypto_core/salsa2012/core_salsa2012_api.c' || echo '$(srcdir)/'`crypto_core/salsa2012/core_salsa2012_api.c
	$(AM_V_at)$(am__mv) crypto_core/salsa2012/$(DEPDIR)/libsodium_la-core_salsa2012_api.Tpo crypto_core/salsa2012/$(DEPDIR)/libsodium_la-core_salsa2012_api.Plo
#	$(AM_V_CC)source='crypto_core/salsa2012/core_salsa2012_api.c' object='crypto_core/salsa2012/libsodium_la-core_salsa2012_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/salsa2012/libsodium_la-core_salsa2012_api.lo `test -f 'crypto_core/salsa2012/core_salsa2012_api.c' || echo '$(srcdir)/'`crypto_core/salsa2012/core_salsa2012_api.c

crypto_core/salsa208/ref/libsodium_la-core_salsa208.lo: crypto_core/salsa208/ref/core_salsa208.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/salsa208/ref/libsodium_la-core_salsa208.lo -MD -MP -MF crypto_core/salsa208/ref/$(DEPDIR)/libsodium_la-core_salsa208.Tpo -c -o crypto_core/salsa208/ref/libsodium_la-core_salsa208.lo `test -f 'crypto_core/salsa208/ref/core_salsa208.c' || echo '$(srcdir)/'`crypto_core/salsa208/ref/core_salsa208.c
	$(AM_V_at)$(am__mv) crypto_core/salsa208/ref/$(DEPDIR)/libsodium_la-core_salsa208.Tpo crypto_core/salsa208/ref/$(DEPDIR)/libsodium_la-core_salsa208.Plo
#	$(AM_V_CC)source='crypto_core/salsa208/ref/core_salsa208.c' object='crypto_core/salsa208/ref/libsodium_la-core_salsa208.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/salsa208/ref/libsodium_la-core_salsa208.lo `test -f 'crypto_core/salsa208/ref/core_salsa208.c' || echo '$(srcdir)/'`crypto_core/salsa208/ref/core_salsa208.c

crypto_core/salsa208/libsodium_la-core_salsa208_api.lo: crypto_core/salsa208/core_salsa208_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/salsa208/libsodium_la-core_salsa208_api.lo -MD -MP -MF crypto_core/salsa208/$(DEPDIR)/libsodium_la-core_salsa208_api.Tpo -c -o crypto_core/salsa208/libsodium_la-core_salsa208_api.lo `test -f 'crypto_core/salsa208/core_salsa208_api.c' || echo '$(srcdir)/'`crypto_core/salsa208/core_salsa208_api.c
	$(AM_V_at)$(am__mv) crypto_core/salsa208/$(DEPDIR)/libsodium_la-core_salsa208_api.Tpo crypto_core/salsa208/$(DEPDIR)/libsodium_la-core_salsa208_api.Plo
#	$(AM_V_CC)source='crypto_core/salsa208/core_salsa208_api.c' object='crypto_core/salsa208/libsodium_la-core_salsa208_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/salsa208/libsodium_la-core_salsa208_api.lo `test -f 'crypto_core/salsa208/core_salsa208_api.c' || echo '$(srcdir)/'`crypto_core/salsa208/core_salsa208_api.c

crypto_sign/edwards25519sha512batch/libsodium_la-sign_edwards25519sha512batch_api.lo: crypto_sign/edwards25519sha512batch/sign_edwards25519sha512batch_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/edwards25519sha512batch/libsodium_la-sign_edwards25519sha512batch_api.lo -MD -MP -MF crypto_sign/edwards25519sha512batch/$(DEPDIR)/libsodium_la-sign_edwards25519sha512batch_api.Tpo -c -o crypto_sign/edwards25519sha512batch/libsodium_la-sign_edwards25519sha512batch_api.lo `test -f 'crypto_sign/edwards25519sha512batch/sign_edwards25519sha512batch_api.c' || echo '$(srcdir)/'`crypto_sign/edwards25519sha512batch/sign_edwards25519sha512batch_api.c
	$(AM_V_at)$(am__mv) crypto_sign/edwards25519sha512batch/$(DEPDIR)/libsodium_la-sign_edwards25519sha512batch_api.Tpo crypto_sign/edwards25519sha512batch/$(DEPDIR)/libsodium_la-sign_edwards25519sha512batch_api.Plo
#	$(AM_V_CC)source='crypto_sign/edwards25519sha512batch/sign_edwards25519sha512batch_api.c' object='crypto_sign/edwards25519sha512batch/libsodium_la-sign_edwards25519sha512batch_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/edwards25519sha512batch/libsodium_la-sign_edwards25519sha512batch_api.lo `test -f 'crypto_sign/edwards25519sha512batch/sign_edwards25519sha512batch_api.c' || echo '$(srcdir)/'`crypto_sign/edwards25519sha512batch/sign_edwards25519sha512batch_api.c

crypto_sign/edwards25519sha512batch/ref/libsodium_la-fe25519_edwards25519sha512batch.lo: crypto_sign/edwards25519sha512batch/ref/fe25519_edwards25519sha512batch.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/edwards25519sha512batch/ref/libsodium_la-fe25519_edwards25519sha512batch.lo -MD -MP -MF crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/libsodium_la-fe25519_edwards25519sha512batch.Tpo -c -o crypto_sign/edwards25519sha512batch/ref/libsodium_la-fe25519_edwards25519sha512batch.lo `test -f 'crypto_sign/edwards25519sha512batch/ref/fe25519_edwards25519sha512batch.c' || echo '$(srcdir)/'`crypto_sign/edwards25519sha512batch/ref/fe25519_edwards25519sha512batch.c
	$(AM_V_at)$(am__mv) crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/libsodium_la-fe25519_edwards25519sha512batch.Tpo crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/libsodium_la-fe25519_edwards25519sha512batch.Plo
#	$(AM_V_CC)source='crypto_sign/edwards25519sha512batch/ref/fe25519_edwards25519sha512batch.c' object='crypto_sign/edwards25519sha512batch/ref/libsodium_la-fe25519_edwards25519sha512batch.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/edwards25519sha512batch/ref/libsodium_la-fe25519_edwards25519sha512batch.lo `test -f 'crypto_sign/edwards25519sha512batch/ref/fe25519_edwards25519sha512batch.c' || echo '$(srcdir)/'`crypto_sign/edwards25519sha512batch/ref/fe25519_edwards25519sha512batch.c

crypto_sign/edwards25519sha512batch/ref/libsodium_la-ge25519_edwards25519sha512batch.lo: crypto_sign/edwards25519sha512batch/ref/ge25519_edwards25519sha512batch.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/edwards25519sha512batch/ref/libsodium_la-ge25519_edwards25519sha512batch.lo -MD -MP -MF crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/libsodium_la-ge25519_edwards25519sha512batch.Tpo -c -o crypto_sign/edwards25519sha512batch/ref/libsodium_la-ge25519_edwards25519sha512batch.lo `test -f 'crypto_sign/edwards25519sha512batch/ref/ge25519_edwards25519sha512batch.c' || echo '$(srcdir)/'`crypto_sign/edwards25519sha512batch/ref/ge25519_edwards25519sha512batch.c
	$(AM_V_at)$(am__mv) crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/libsodium_la-ge25519_edwards25519sha512batch.Tpo crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/libsodium_la-ge25519_edwards25519sha512batch.Plo
#	$(AM_V_CC)source='crypto_sign/edwards25519sha512batch/ref/ge25519_edwards25519sha512batch.c' object='crypto_sign/edwards25519sha512batch/ref/libsodium_la-ge25519_edwards25519sha512batch.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/edwards25519sha512batch/ref/libsodium_la-ge25519_edwards25519sha512batch.lo `test -f 'crypto_sign/edwards25519sha512batch/ref/ge25519_edwards25519sha512batch.c' || echo '$(srcdir)/'`crypto_sign/edwards25519sha512batch/ref/ge25519_edwards25519sha512batch.c

crypto_sign/edwards25519sha512batch/ref/libsodium_la-sc25519_edwards25519sha512batch.lo: crypto_sign/edwards25519sha512batch/ref/sc25519_edwards25519sha512batch.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/edwards25519sha512batch/ref/libsodium_la-sc25519_edwards25519sha512batch.lo -MD -MP -MF crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/libsodium_la-sc25519_edwards25519sha512batch.Tpo -c -o crypto_sign/edwards25519sha512batch/ref/libsodium_la-sc25519_edwards25519sha512batch.lo `test -f 'crypto_sign/edwards25519sha512batch/ref/sc25519_edwards25519sha512batch.c' || echo '$(srcdir)/'`crypto_sign/edwards25519sha512batch/ref/sc25519_edwards25519sha512batch.c
	$(AM_V_at)$(am__mv) crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/libsodium_la-sc25519_edwards25519sha512batch.Tpo crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/libsodium_la-sc25519_edwards25519sha512batch.Plo
#	$(AM_V_CC)source='crypto_sign/edwards25519sha512batch/ref/sc25519_edwards25519sha512batch.c' object='crypto_sign/edwards25519sha512batch/ref/libsodium_la-sc25519_edwards25519sha512batch.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/edwards25519sha512batch/ref/libsodium_la-sc25519_edwards25519sha512batch.lo `test -f 'crypto_sign/edwards25519sha512batch/ref/sc25519_edwards25519sha512batch.c' || echo '$(srcdir)/'`crypto_sign/edwards25519sha512batch/ref/sc25519_edwards25519sha512batch.c

crypto_sign/edwards25519sha512batch/ref/libsodium_la-sign_edwards25519sha512batch.lo: crypto_sign/edwards25519sha512batch/ref/sign_edwards25519sha512batch.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/edwards25519sha512batch/ref/libsodium_la-sign_edwards25519sha512batch.lo -MD -MP -MF crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/libsodium_la-sign_edwards25519sha512batch.Tpo -c -o crypto_sign/edwards25519sha512batch/ref/libsodium_la-sign_edwards25519sha512batch.lo `test -f 'crypto_sign/edwards25519sha512batch/ref/sign_edwards25519sha512batch.c' || echo '$(srcdir)/'`crypto_sign/edwards25519sha512batch/ref/sign_edwards25519sha512batch.c
	$(AM_V_at)$(am__mv) crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/libsodium_la-sign_edwards25519sha512batch.Tpo crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/libsodium_la-sign_edwards25519sha512batch.Plo
#	$(AM_V_CC)source='crypto_sign/edwards25519sha512batch/ref/sign_edwards25519sha512batch.c' object='crypto_sign/edwards25519sha512batch/ref/libsodium_la-sign_edwards25519sha512batch.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/edwards25519sha512batch/ref/libsodium_la-sign_edwards25519sha512batch.lo `test -f 'crypto_sign/edwards25519sha512batch/ref/sign_edwards25519sha512batch.c' || echo '$(srcdir)/'`crypto_sign/edwards25519sha512batch/ref/sign_edwards25519sha512batch.c

crypto_stream/aes128ctr/portable/libsodium_la-afternm_aes128ctr.lo: crypto_stream/aes128ctr/portable/afternm_aes128ctr.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/aes128ctr/portable/libsodium_la-afternm_aes128ctr.lo -MD -MP -MF crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-afternm_aes128ctr.Tpo -c -o crypto_stream/aes128ctr/portable/libsodium_la-afternm_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/afternm_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/afternm_aes128ctr.c
	$(AM_V_at)$(am__mv) crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-afternm_aes128ctr.Tpo crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-afternm_aes128ctr.Plo
#	$(AM_V_CC)source='crypto_stream/aes128ctr/portable/afternm_aes128ctr.c' object='crypto_stream/aes128ctr/portable/libsodium_la-afternm_aes128ctr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/aes128ctr/portable/libsodium_la-afternm_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/afternm_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/afternm_aes128ctr.c

crypto_stream/aes128ctr/libsodium_la-stream_aes128ctr_api.lo: crypto_stream/aes128ctr/stream_aes128ctr_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/aes128ctr/libsodium_la-stream_aes128ctr_api.lo -MD -MP -MF crypto_stream/aes128ctr/$(DEPDIR)/libsodium_la-stream_aes128ctr_api.Tpo -c -o crypto_stream/aes128ctr/libsodium_la-stream_aes128ctr_api.lo `test -f 'crypto_stream/aes128ctr/stream_aes128ctr_api.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/stream_aes128ctr_api.c
	$(AM_V_at)$(am__mv) crypto_stream/aes128ctr/$(DEPDIR)/libsodium_la-stream_aes128ctr_api.Tpo crypto_stream/aes128ctr/$(DEPDIR)/libsodium_la-stream_aes128ctr_api.Plo
#	$(AM_V_CC)source='crypto_stream/aes128ctr/stream_aes128ctr_api.c' object='crypto_stream/aes128ctr/libsodium_la-stream_aes128ctr_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/aes128ctr/libsodium_la-stream_aes128ctr_api.lo `test -f 'crypto_stream/aes128ctr/stream_aes128ctr_api.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/stream_aes128ctr_api.c

crypto_stream/aes128ctr/portable/libsodium_la-beforenm_aes128ctr.lo: crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/aes128ctr/portable/libsodium_la-beforenm_aes128ctr.lo -MD -MP -MF crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-beforenm_aes128ctr.Tpo -c -o crypto_stream/aes128ctr/portable/libsodium_la-beforenm_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c
	$(AM_V_at)$(am__mv) crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-beforenm_aes128ctr.Tpo crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-beforenm_aes128ctr.Plo
#	$(AM_V_CC)source='crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c' object='crypto_stream/aes128ctr/portable/libsodium_la-beforenm_aes128ctr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/aes128ctr/portable/libsodium_la-beforenm_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c

crypto_stream/aes128ctr/portable/libsodium_la-common_aes128ctr.lo: crypto_stream/aes128ctr/portable/common_aes128ctr.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/aes128ctr/portable/libsodium_la-common_aes128ctr.lo -MD -MP -MF crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-common_aes128ctr.Tpo -c -o crypto_stream/aes128ctr/portable/libsodium_la-common_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/common_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/common_aes128ctr.c
	$(AM_V_at)$(am__mv) crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-common_aes128ctr.Tpo crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-common_aes128ctr.Plo
#	$(AM_V_CC)source='crypto_stream/aes128ctr/portable/common_aes128ctr.c' object='crypto_stream/aes128ctr/portable/libsodium_la-common_aes128ctr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/aes128ctr/portable/libsodium_la-common_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/common_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/common_aes128ctr.c

crypto_stream/aes128ctr/portable/libsodium_la-consts_aes128ctr.lo: crypto_stream/aes128ctr/portable/consts_aes128ctr.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/aes128ctr/portable/libsodium_la-consts_aes128ctr.lo -MD -MP -MF crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-consts_aes128ctr.Tpo -c -o crypto_stream/aes128ctr/portable/libsodium_la-consts_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/consts_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/consts_aes128ctr.c
	$(AM_V_at)$(am__mv) crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-consts_aes128ctr.Tpo crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-consts_aes128ctr.Plo
#	$(AM_V_CC)source='crypto_stream/aes128ctr/portable/consts_aes128ctr.c' object='crypto_stream/aes128ctr/portable/libsodium_la-consts_aes128ctr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/aes128ctr/portable/libsodium_la-consts_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/consts_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/consts_aes128ctr.c

crypto_stream/aes128ctr/portable/libsodium_la-int128_aes128ctr.lo: crypto_stream/aes128ctr/portable/int128_aes128ctr.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/aes128ctr/portable/libsodium_la-int128_aes128ctr.lo -MD -MP -MF crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-int128_aes128ctr.Tpo -c -o crypto_stream/aes128ctr/portable/libsodium_la-int128_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/int128_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/int128_aes128ctr.c
	$(AM_V_at)$(am__mv) crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-int128_aes128ctr.Tpo crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-int128_aes128ctr.Plo
#	$(AM_V_CC)source='crypto_stream/aes128ctr/portable/int128_aes128ctr.c' object='crypto_stream/aes128ctr/portable/libsodium_la-int128_aes128ctr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/aes128ctr/portable/libsodium_la-int128_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/int128_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/int128_aes128ctr.c

crypto_stream/aes128ctr/portable/libsodium_la-stream_aes128ctr.lo: crypto_stream/aes128ctr/portable/stream_aes128ctr.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/aes128ctr/portable/libsodium_la-stream_aes128ctr.lo -MD -MP -MF crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-stream_aes128ctr.Tpo -c -o crypto_stream/aes128ctr/portable/libsodium_la-stream_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/stream_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/stream_aes128ctr.c
	$(AM_V_at)$(am__mv) crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-stream_aes128ctr.Tpo crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-stream_aes128ctr.Plo
#	$(AM_V_CC)source='crypto_stream/aes128ctr/portable/stream_aes128ctr.c' object='crypto_stream/aes128ctr/portable/libsodium_la-stream_aes128ctr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/aes128ctr/portable/libsodium_la-stream_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/stream_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/stream_aes128ctr.c

crypto_stream/aes128ctr/portable/libsodium_la-xor_afternm_aes128ctr.lo: crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/aes128ctr/portable/libsodium_la-xor_afternm_aes128ctr.lo -MD -MP -MF crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-xor_afternm_aes128ctr.Tpo -c -o crypto_stream/aes128ctr/portable/libsodium_la-xor_afternm_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c
	$(AM_V_at)$(am__mv) crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-xor_afternm_aes128ctr.Tpo crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-xor_afternm_aes128ctr.Plo
#	$(AM_V_CC)source='crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c' object='crypto_stream/aes128ctr/portable/libsodium_la-xor_afternm_aes128ctr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/aes128ctr/portable/libsodium_la-xor_afternm_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c

crypto_stream/salsa2012/libsodium_la-stream_salsa2012_api.lo: crypto_stream/salsa2012/stream_salsa2012_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa2012/libsodium_la-stream_salsa2012_api.lo -MD -MP -MF crypto_stream/salsa2012/$(DEPDIR)/libsodium_la-stream_salsa2012_api.Tpo -c -o crypto_stream/salsa2012/libsodium_la-stream_salsa2012_api.lo `test -f 'crypto_stream/salsa2012/stream_salsa2012_api.c' || echo '$(srcdir)/'`crypto_stream/salsa2012/stream_salsa2012_api.c
	$(AM_V_at)$(am__mv) crypto_stream/salsa2012/$(DEPDIR)/libsodium_la-stream_salsa2012_api.Tpo crypto_stream/salsa2012/$(DEPDIR)/libsodium_la-stream_salsa2012_api.Plo
#	$(AM_V_CC)source='crypto_stream/salsa2012/stream_salsa2012_api.c' object='crypto_stream/salsa2012/libsodium_la-stream_salsa2012_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa2012/libsodium_la-stream_salsa2012_api.lo `test -f 'crypto_stream/salsa2012/stream_salsa2012_api.c' || echo '$(srcdir)/'`crypto_stream/salsa2012/stream_salsa2012_api.c

crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012.lo: crypto_stream/salsa2012/ref/stream_salsa2012.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012.lo -MD -MP -MF crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-stream_salsa2012.Tpo -c -o crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012.lo `test -f 'crypto_stream/salsa2012/ref/stream_salsa2012.c' || echo '$(srcdir)/'`crypto_stream/salsa2012/ref/stream_salsa2012.c
	$(AM_V_at)$(am__mv) crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-stream_salsa2012.Tpo crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-stream_salsa2012.Plo
#	$(AM_V_CC)source='crypto_stream/salsa2012/ref/stream_salsa2012.c' object='crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012.lo `test -f 'crypto_stream/salsa2012/ref/stream_salsa2012.c' || echo '$(srcdir)/'`crypto_stream/salsa2012/ref/stream_salsa2012.c

crypto_stream/salsa2012/ref/libsodium_la-xor_salsa2012.lo: crypto_stream/salsa2012/ref/xor_salsa2012.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa2012/ref/libsodium_la-xor_salsa2012.lo -MD -MP -MF crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-xor_salsa2012.Tpo -c -o crypto_stream/salsa2012/ref/libsodium_la-xor_salsa2012.lo `test -f 'crypto_stream/salsa2012/ref/xor_salsa2012.c' || echo '$(srcdir)/'`crypto_stream/salsa2012/ref/xor_salsa2012.c
	$(AM_V_at)$(am__mv) crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-xor_salsa2012.Tpo crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-xor_salsa2012.Plo
#	$(AM_V_CC)source='crypto_stream/salsa2012/ref/xor_salsa2012.c' object='crypto_stream/salsa2012/ref/libsodium_la-xor_salsa2012.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa2012/ref/libsodium_la-xor_salsa2012.lo `test -f 'crypto_stream/salsa2012/ref/xor_salsa2012.c' || echo '$(srcdir)/'`crypto_stream/salsa2012/ref/xor_salsa2012.c

crypto_stream/salsa208/libsodium_la-stream_salsa208_api.lo: crypto_stream/salsa208/stream_salsa208_api.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa208/libsodium_la-stream_salsa208_api.lo -MD -MP -MF crypto_stream/salsa208/$(DEPDIR)/libsodium_la-stream_salsa208_api.Tpo -c -o crypto_stream/salsa208/libsodium_la-stream_salsa208_api.lo `test -f 'crypto_stream/salsa208/stream_salsa208_api.c' || echo '$(srcdir)/'`crypto_stream/salsa208/stream_salsa208_api.c
	$(AM_V_at)$(am__mv) crypto_stream/salsa208/$(DEPDIR)/libsodium_la-stream_salsa208_api.Tpo crypto_stream/salsa208/$(DEPDIR)/libsodium_la-stream_salsa208_api.Plo
#	$(AM_V_CC)source='crypto_stream/salsa208/stream_salsa208_api.c' object='crypto_stream/salsa208/libsodium_la-stream_salsa208_api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa208/libsodium_la-stream_salsa208_api.lo `test -f 'crypto_stream/salsa208/stream_salsa208_api.c' || echo '$(srcdir)/'`crypto_stream/salsa208/stream_salsa208_api.c

crypto_stream/salsa208/ref/libsodium_la-stream_salsa208.lo: crypto_stream/salsa208/ref/stream_salsa208.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa208/ref/libsodium_la-stream_salsa208.lo -MD -MP -MF crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-stream_salsa208.Tpo -c -o crypto_stream/salsa208/ref/libsodium_la-stream_salsa208.lo `test -f 'crypto_stream/salsa208/ref/stream_salsa208.c' || echo '$(srcdir)/'`crypto_stream/salsa208/ref/stream_salsa208.c
	$(AM_V_at)$(am__mv) crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-stream_salsa208.Tpo crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-stream_salsa208.Plo
#	$(AM_V_CC)source='crypto_stream/salsa208/ref/stream_salsa208.c' object='crypto_stream/salsa208/ref/libsodium_la-stream_salsa208.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa208/ref/libsodium_la-stream_salsa208.lo `test -f 'crypto_stream/salsa208/ref/stream_salsa208.c' || echo '$(srcdir)/'`crypto_stream/salsa208/ref/stream_salsa208.c

crypto_stream/salsa208/ref/libsodium_la-xor_salsa208.lo: crypto_stream/salsa208/ref/xor_salsa208.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa208/ref/libsodium_la-xor_salsa208.lo -MD -MP -MF crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-xor_salsa208.Tpo -c -o crypto_stream/salsa208/ref/libsodium_la-xor_salsa208.lo `test -f 'crypto_stream/salsa208/ref/xor_salsa208.c' || echo '$(srcdir)/'`crypto_stream/salsa208/ref/xor_salsa208.c
	$(AM_V_at)$(am__mv) crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-xor_salsa208.Tpo crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-xor_salsa208.Plo
#	$(AM_V_CC)source='crypto_stream/salsa208/ref/xor_salsa208.c' object='crypto_stream/salsa208/ref/libsodium_la-xor_salsa208.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa208/ref/libsodium_la-xor_salsa208.lo `test -f 'crypto_stream/salsa208/ref/xor_salsa208.c' || echo '$(srcdir)/'`crypto_stream/salsa208/ref/xor_salsa208.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf crypto_aead/chacha20poly1305/sodium/.libs crypto_aead/chacha20poly1305/sodium/_libs
	-rm -rf crypto_auth/.libs crypto_auth/_libs
	-rm -rf crypto_auth/hmacsha256/.libs crypto_auth/hmacsha256/_libs
	-rm -rf crypto_auth/hmacsha256/cp/.libs crypto_auth/hmacsha256/cp/_libs
	-rm -rf crypto_auth/hmacsha512/.libs crypto_auth/hmacsha512/_libs
	-rm -rf crypto_auth/hmacsha512/cp/.libs crypto_auth/hmacsha512/cp/_libs
	-rm -rf crypto_auth/hmacsha512256/.libs crypto_auth/hmacsha512256/_libs
	-rm -rf crypto_auth/hmacsha512256/cp/.libs crypto_auth/hmacsha512256/cp/_libs
	-rm -rf crypto_box/.libs crypto_box/_libs
	-rm -rf crypto_box/curve25519xsalsa20poly1305/.libs crypto_box/curve25519xsalsa20poly1305/_libs
	-rm -rf crypto_box/curve25519xsalsa20poly1305/ref/.libs crypto_box/curve25519xsalsa20poly1305/ref/_libs
	-rm -rf crypto_core/hsalsa20/.libs crypto_core/hsalsa20/_libs
	-rm -rf crypto_core/hsalsa20/ref2/.libs crypto_core/hsalsa20/ref2/_libs
	-rm -rf crypto_core/salsa20/.libs crypto_core/salsa20/_libs
	-rm -rf crypto_core/salsa20/ref/.libs crypto_core/salsa20/ref/_libs
	-rm -rf crypto_core/salsa2012/.libs crypto_core/salsa2012/_libs
	-rm -rf crypto_core/salsa2012/ref/.libs crypto_core/salsa2012/ref/_libs
	-rm -rf crypto_core/salsa208/.libs crypto_core/salsa208/_libs
	-rm -rf crypto_core/salsa208/ref/.libs crypto_core/salsa208/ref/_libs
	-rm -rf crypto_generichash/.libs crypto_generichash/_libs
	-rm -rf crypto_generichash/blake2/.libs crypto_generichash/blake2/_libs
	-rm -rf crypto_generichash/blake2/ref/.libs crypto_generichash/blake2/ref/_libs
	-rm -rf crypto_hash/.libs crypto_hash/_libs
	-rm -rf crypto_hash/sha256/.libs crypto_hash/sha256/_libs
	-rm -rf crypto_hash/sha256/cp/.libs crypto_hash/sha256/cp/_libs
	-rm -rf crypto_hash/sha512/.libs crypto_hash/sha512/_libs
	-rm -rf crypto_hash/sha512/cp/.libs crypto_hash/sha512/cp/_libs
	-rm -rf crypto_onetimeauth/.libs crypto_onetimeauth/_libs
	-rm -rf crypto_onetimeauth/poly1305/.libs crypto_onetimeauth/poly1305/_libs
	-rm -rf crypto_onetimeauth/poly1305/donna/.libs crypto_onetimeauth/poly1305/donna/_libs
	-rm -rf crypto_pwhash/scryptsalsa208sha256/.libs crypto_pwhash/scryptsalsa208sha256/_libs
	-rm -rf crypto_pwhash/scryptsalsa208sha256/nosse/.libs crypto_pwhash/scryptsalsa208sha256/nosse/_libs
	-rm -rf crypto_pwhash/scryptsalsa208sha256/sse/.libs crypto_pwhash/scryptsalsa208sha256/sse/_libs
	-rm -rf crypto_scalarmult/.libs crypto_scalarmult/_libs
	-rm -rf crypto_scalarmult/curve25519/.libs crypto_scalarmult/curve25519/_libs
	-rm -rf crypto_scalarmult/curve25519/donna_c64/.libs crypto_scalarmult/curve25519/donna_c64/_libs
	-rm -rf crypto_scalarmult/curve25519/ref10/.libs crypto_scalarmult/curve25519/ref10/_libs
	-rm -rf crypto_secretbox/.libs crypto_secretbox/_libs
	-rm -rf crypto_secretbox/xsalsa20poly1305/.libs crypto_secretbox/xsalsa20poly1305/_libs
	-rm -rf crypto_secretbox/xsalsa20poly1305/ref/.libs crypto_secretbox/xsalsa20poly1305/ref/_libs
	-rm -rf crypto_shorthash/.libs crypto_shorthash/_libs
	-rm -rf crypto_shorthash/siphash24/.libs crypto_shorthash/siphash24/_libs
	-rm -rf crypto_shorthash/siphash24/ref/.libs crypto_shorthash/siphash24/ref/_libs
	-rm -rf crypto_sign/.libs crypto_sign/_libs
	-rm -rf crypto_sign/ed25519/.libs crypto_sign/ed25519/_libs
	-rm -rf crypto_sign/ed25519/ref10/.libs crypto_sign/ed25519/ref10/_libs
	-rm -rf crypto_sign/edwards25519sha512batch/.libs crypto_sign/edwards25519sha512batch/_libs
	-rm -rf crypto_sign/edwards25519sha512batch/ref/.libs crypto_sign/edwards25519sha512batch/ref/_libs
	-rm -rf crypto_stream/.libs crypto_stream/_libs
	-rm -rf crypto_stream/aes128ctr/.libs crypto_stream/aes128ctr/_libs
	-rm -rf crypto_stream/aes128ctr/portable/.libs crypto_stream/aes128ctr/portable/_libs
	-rm -rf crypto_stream/chacha20/.libs crypto_stream/chacha20/_libs
	-rm -rf crypto_stream/chacha20/ref/.libs crypto_stream/chacha20/ref/_libs
	-rm -rf crypto_stream/salsa20/.libs crypto_stream/salsa20/_libs
	-rm -rf crypto_stream/salsa20/amd64_xmm6/.libs crypto_stream/salsa20/amd64_xmm6/_libs
	-rm -rf crypto_stream/salsa20/ref/.libs crypto_stream/salsa20/ref/_libs
	-rm -rf crypto_stream/salsa2012/.libs crypto_stream/salsa2012/_libs
	-rm -rf crypto_stream/salsa2012/ref/.libs crypto_stream/salsa2012/ref/_libs
	-rm -rf crypto_stream/salsa208/.libs crypto_stream/salsa208/_libs
	-rm -rf crypto_stream/salsa208/ref/.libs crypto_stream/salsa208/ref/_libs
	-rm -rf crypto_stream/xsalsa20/.libs crypto_stream/xsalsa20/_libs
	-rm -rf crypto_stream/xsalsa20/ref/.libs crypto_stream/xsalsa20/ref/_libs
	-rm -rf crypto_verify/16/.libs crypto_verify/16/_libs
	-rm -rf crypto_verify/16/ref/.libs crypto_verify/16/ref/_libs
	-rm -rf crypto_verify/32/.libs crypto_verify/32/_libs
	-rm -rf crypto_verify/32/ref/.libs crypto_verify/32/ref/_libs
	-rm -rf crypto_verify/64/.libs crypto_verify/64/_libs
	-rm -rf crypto_verify/64/ref/.libs crypto_verify/64/ref/_libs
	-rm -rf randombytes/.libs randombytes/_libs
	-rm -rf randombytes/salsa20/.libs randombytes/salsa20/_libs
	-rm -rf randombytes/sysrandom/.libs randombytes/sysrandom/_libs
	-rm -rf sodium/.libs sodium/_libs
install-defexecDATA: $(defexec_DATA)
	@$(NORMAL_INSTALL)
	@list='$(defexec_DATA)'; test -n "$(defexecdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(defexecdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(defexecdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(defexecdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(defexecdir)" || exit $$?; \
	done

uninstall-defexecDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(defexec_DATA)'; test -n "$(defexecdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(defexecdir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(defexecdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f crypto_aead/chacha20poly1305/sodium/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_aead/chacha20poly1305/sodium/$(am__dirstamp)
	-rm -f crypto_auth/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_auth/$(am__dirstamp)
	-rm -f crypto_auth/hmacsha256/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_auth/hmacsha256/$(am__dirstamp)
	-rm -f crypto_auth/hmacsha256/cp/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_auth/hmacsha256/cp/$(am__dirstamp)
	-rm -f crypto_auth/hmacsha512/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_auth/hmacsha512/$(am__dirstamp)
	-rm -f crypto_auth/hmacsha512/cp/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_auth/hmacsha512/cp/$(am__dirstamp)
	-rm -f crypto_auth/hmacsha512256/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_auth/hmacsha512256/$(am__dirstamp)
	-rm -f crypto_auth/hmacsha512256/cp/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_auth/hmacsha512256/cp/$(am__dirstamp)
	-rm -f crypto_box/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_box/$(am__dirstamp)
	-rm -f crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_box/curve25519xsalsa20poly1305/$(am__dirstamp)
	-rm -f crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_box/curve25519xsalsa20poly1305/ref/$(am__dirstamp)
	-rm -f crypto_core/hsalsa20/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_core/hsalsa20/$(am__dirstamp)
	-rm -f crypto_core/hsalsa20/ref2/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_core/hsalsa20/ref2/$(am__dirstamp)
	-rm -f crypto_core/salsa20/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_core/salsa20/$(am__dirstamp)
	-rm -f crypto_core/salsa20/ref/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_core/salsa20/ref/$(am__dirstamp)
	-rm -f crypto_core/salsa2012/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_core/salsa2012/$(am__dirstamp)
	-rm -f crypto_core/salsa2012/ref/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_core/salsa2012/ref/$(am__dirstamp)
	-rm -f crypto_core/salsa208/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_core/salsa208/$(am__dirstamp)
	-rm -f crypto_core/salsa208/ref/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_core/salsa208/ref/$(am__dirstamp)
	-rm -f crypto_generichash/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_generichash/$(am__dirstamp)
	-rm -f crypto_generichash/blake2/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_generichash/blake2/$(am__dirstamp)
	-rm -f crypto_generichash/blake2/ref/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_generichash/blake2/ref/$(am__dirstamp)
	-rm -f crypto_hash/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_hash/$(am__dirstamp)
	-rm -f crypto_hash/sha256/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_hash/sha256/$(am__dirstamp)
	-rm -f crypto_hash/sha256/cp/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_hash/sha256/cp/$(am__dirstamp)
	-rm -f crypto_hash/sha512/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_hash/sha512/$(am__dirstamp)
	-rm -f crypto_hash/sha512/cp/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_hash/sha512/cp/$(am__dirstamp)
	-rm -f crypto_onetimeauth/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_onetimeauth/$(am__dirstamp)
	-rm -f crypto_onetimeauth/poly1305/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_onetimeauth/poly1305/$(am__dirstamp)
	-rm -f crypto_onetimeauth/poly1305/donna/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_onetimeauth/poly1305/donna/$(am__dirstamp)
	-rm -f crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_pwhash/scryptsalsa208sha256/$(am__dirstamp)
	-rm -f crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_pwhash/scryptsalsa208sha256/nosse/$(am__dirstamp)
	-rm -f crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_pwhash/scryptsalsa208sha256/sse/$(am__dirstamp)
	-rm -f crypto_scalarmult/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_scalarmult/$(am__dirstamp)
	-rm -f crypto_scalarmult/curve25519/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_scalarmult/curve25519/$(am__dirstamp)
	-rm -f crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_scalarmult/curve25519/donna_c64/$(am__dirstamp)
	-rm -f crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_scalarmult/curve25519/ref10/$(am__dirstamp)
	-rm -f crypto_secretbox/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_secretbox/$(am__dirstamp)
	-rm -f crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_secretbox/xsalsa20poly1305/$(am__dirstamp)
	-rm -f crypto_secretbox/xsalsa20poly1305/ref/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_secretbox/xsalsa20poly1305/ref/$(am__dirstamp)
	-rm -f crypto_shorthash/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_shorthash/$(am__dirstamp)
	-rm -f crypto_shorthash/siphash24/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_shorthash/siphash24/$(am__dirstamp)
	-rm -f crypto_shorthash/siphash24/ref/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_shorthash/siphash24/ref/$(am__dirstamp)
	-rm -f crypto_sign/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_sign/$(am__dirstamp)
	-rm -f crypto_sign/ed25519/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_sign/ed25519/$(am__dirstamp)
	-rm -f crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_sign/ed25519/ref10/$(am__dirstamp)
	-rm -f crypto_sign/edwards25519sha512batch/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_sign/edwards25519sha512batch/$(am__dirstamp)
	-rm -f crypto_sign/edwards25519sha512batch/ref/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_sign/edwards25519sha512batch/ref/$(am__dirstamp)
	-rm -f crypto_stream/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_stream/$(am__dirstamp)
	-rm -f crypto_stream/aes128ctr/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_stream/aes128ctr/$(am__dirstamp)
	-rm -f crypto_stream/aes128ctr/portable/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_stream/aes128ctr/portable/$(am__dirstamp)
	-rm -f crypto_stream/chacha20/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_stream/chacha20/$(am__dirstamp)
	-rm -f crypto_stream/chacha20/ref/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_stream/chacha20/ref/$(am__dirstamp)
	-rm -f crypto_stream/salsa20/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_stream/salsa20/$(am__dirstamp)
	-rm -f crypto_stream/salsa20/amd64_xmm6/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_stream/salsa20/amd64_xmm6/$(am__dirstamp)
	-rm -f crypto_stream/salsa20/ref/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_stream/salsa20/ref/$(am__dirstamp)
	-rm -f crypto_stream/salsa2012/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_stream/salsa2012/$(am__dirstamp)
	-rm -f crypto_stream/salsa2012/ref/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_stream/salsa2012/ref/$(am__dirstamp)
	-rm -f crypto_stream/salsa208/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_stream/salsa208/$(am__dirstamp)
	-rm -f crypto_stream/salsa208/ref/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_stream/salsa208/ref/$(am__dirstamp)
	-rm -f crypto_stream/xsalsa20/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_stream/xsalsa20/$(am__dirstamp)
	-rm -f crypto_stream/xsalsa20/ref/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_stream/xsalsa20/ref/$(am__dirstamp)
	-rm -f crypto_verify/16/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_verify/16/$(am__dirstamp)
	-rm -f crypto_verify/16/ref/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_verify/16/ref/$(am__dirstamp)
	-rm -f crypto_verify/32/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_verify/32/$(am__dirstamp)
	-rm -f crypto_verify/32/ref/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_verify/32/ref/$(am__dirstamp)
	-rm -f crypto_verify/64/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_verify/64/$(am__dirstamp)
	-rm -f crypto_verify/64/ref/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto_verify/64/ref/$(am__dirstamp)
	-rm -f randombytes/$(DEPDIR)/$(am__dirstamp)
	-rm -f randombytes/$(am__dirstamp)
	-rm -f randombytes/salsa20/$(DEPDIR)/$(am__dirstamp)
	-rm -f randombytes/salsa20/$(am__dirstamp)
	-rm -f randombytes/sysrandom/$(DEPDIR)/$(am__dirstamp)
	-rm -f randombytes/sysrandom/$(am__dirstamp)
	-rm -f sodium/$(DEPDIR)/$(am__dirstamp)
	-rm -f sodium/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf crypto_aead/chacha20poly1305/sodium/$(DEPDIR) crypto_auth/$(DEPDIR) crypto_auth/hmacsha256/$(DEPDIR) crypto_auth/hmacsha256/cp/$(DEPDIR) crypto_auth/hmacsha512/$(DEPDIR) crypto_auth/hmacsha512/cp/$(DEPDIR) crypto_auth/hmacsha512256/$(DEPDIR) crypto_auth/hmacsha512256/cp/$(DEPDIR) crypto_box/$(DEPDIR) crypto_box/curve25519xsalsa20poly1305/$(DEPDIR) crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR) crypto_core/hsalsa20/$(DEPDIR) crypto_core/hsalsa20/ref2/$(DEPDIR) crypto_core/salsa20/$(DEPDIR) crypto_core/salsa20/ref/$(DEPDIR) crypto_core/salsa2012/$(DEPDIR) crypto_core/salsa2012/ref/$(DEPDIR) crypto_core/salsa208/$(DEPDIR) crypto_core/salsa208/ref/$(DEPDIR) crypto_generichash/$(DEPDIR) crypto_generichash/blake2/$(DEPDIR) crypto_generichash/blake2/ref/$(DEPDIR) crypto_hash/$(DEPDIR) crypto_hash/sha256/$(DEPDIR) crypto_hash/sha256/cp/$(DEPDIR) crypto_hash/sha512/$(DEPDIR) crypto_hash/sha512/cp/$(DEPDIR) crypto_onetimeauth/$(DEPDIR) crypto_onetimeauth/poly1305/$(DEPDIR) crypto_onetimeauth/poly1305/donna/$(DEPDIR) crypto_pwhash/scryptsalsa208sha256/$(DEPDIR) crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR) crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR) crypto_scalarmult/$(DEPDIR) crypto_scalarmult/curve25519/$(DEPDIR) crypto_scalarmult/curve25519/donna_c64/$(DEPDIR) crypto_scalarmult/curve25519/ref10/$(DEPDIR) crypto_secretbox/$(DEPDIR) crypto_secretbox/xsalsa20poly1305/$(DEPDIR) crypto_secretbox/xsalsa20poly1305/ref/$(DEPDIR) crypto_shorthash/$(DEPDIR) crypto_shorthash/siphash24/$(DEPDIR) crypto_shorthash/siphash24/ref/$(DEPDIR) crypto_sign/$(DEPDIR) crypto_sign/ed25519/$(DEPDIR) crypto_sign/ed25519/ref10/$(DEPDIR) crypto_sign/edwards25519sha512batch/$(DEPDIR) crypto_sign/edwards25519sha512batch/ref/$(DEPDIR) crypto_stream/$(DEPDIR) crypto_stream/aes128ctr/$(DEPDIR) crypto_stream/aes128ctr/portable/$(DEPDIR) crypto_stream/chacha20/$(DEPDIR) crypto_stream/chacha20/ref/$(DEPDIR) crypto_stream/salsa20/$(DEPDIR) crypto_stream/salsa20/amd64_xmm6/$(DEPDIR) crypto_stream/salsa20/ref/$(DEPDIR) crypto_stream/salsa2012/$(DEPDIR) crypto_stream/salsa2012/ref/$(DEPDIR) crypto_stream/salsa208/$(DEPDIR) crypto_stream/salsa208/ref/$(DEPDIR) crypto_stream/xsalsa20/$(DEPDIR) crypto_stream/xsalsa20/ref/$(DEPDIR) crypto_verify/16/$(DEPDIR) crypto_verify/16/ref/$(DEPDIR) crypto_verify/32/$(DEPDIR) crypto_verify/32/ref/$(DEPDIR) crypto_verify/64/$(DEPDIR) crypto_verify/64/ref/$(DEPDIR) randombytes/$(DEPDIR) randombytes/salsa20/$(DEPDIR) randombytes/sysrandom/$(DEPDIR) sodium/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-defexecDATA install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf crypto_aead/chacha20poly1305/sodium/$(DEPDIR) crypto_auth/$(DEPDIR) crypto_auth/hmacsha256/$(DEPDIR) crypto_auth/hmacsha256/cp/$(DEPDIR) crypto_auth/hmacsha512/$(DEPDIR) crypto_auth/hmacsha512/cp/$(DEPDIR) crypto_auth/hmacsha512256/$(DEPDIR) crypto_auth/hmacsha512256/cp/$(DEPDIR) crypto_box/$(DEPDIR) crypto_box/curve25519xsalsa20poly1305/$(DEPDIR) crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR) crypto_core/hsalsa20/$(DEPDIR) crypto_core/hsalsa20/ref2/$(DEPDIR) crypto_core/salsa20/$(DEPDIR) crypto_core/salsa20/ref/$(DEPDIR) crypto_core/salsa2012/$(DEPDIR) crypto_core/salsa2012/ref/$(DEPDIR) crypto_core/salsa208/$(DEPDIR) crypto_core/salsa208/ref/$(DEPDIR) crypto_generichash/$(DEPDIR) crypto_generichash/blake2/$(DEPDIR) crypto_generichash/blake2/ref/$(DEPDIR) crypto_hash/$(DEPDIR) crypto_hash/sha256/$(DEPDIR) crypto_hash/sha256/cp/$(DEPDIR) crypto_hash/sha512/$(DEPDIR) crypto_hash/sha512/cp/$(DEPDIR) crypto_onetimeauth/$(DEPDIR) crypto_onetimeauth/poly1305/$(DEPDIR) crypto_onetimeauth/poly1305/donna/$(DEPDIR) crypto_pwhash/scryptsalsa208sha256/$(DEPDIR) crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR) crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR) crypto_scalarmult/$(DEPDIR) crypto_scalarmult/curve25519/$(DEPDIR) crypto_scalarmult/curve25519/donna_c64/$(DEPDIR) crypto_scalarmult/curve25519/ref10/$(DEPDIR) crypto_secretbox/$(DEPDIR) crypto_secretbox/xsalsa20poly1305/$(DEPDIR) crypto_secretbox/xsalsa20poly1305/ref/$(DEPDIR) crypto_shorthash/$(DEPDIR) crypto_shorthash/siphash24/$(DEPDIR) crypto_shorthash/siphash24/ref/$(DEPDIR) crypto_sign/$(DEPDIR) crypto_sign/ed25519/$(DEPDIR) crypto_sign/ed25519/ref10/$(DEPDIR) crypto_sign/edwards25519sha512batch/$(DEPDIR) crypto_sign/edwards25519sha512batch/ref/$(DEPDIR) crypto_stream/$(DEPDIR) crypto_stream/aes128ctr/$(DEPDIR) crypto_stream/aes128ctr/portable/$(DEPDIR) crypto_stream/chacha20/$(DEPDIR) crypto_stream/chacha20/ref/$(DEPDIR) crypto_stream/salsa20/$(DEPDIR) crypto_stream/salsa20/amd64_xmm6/$(DEPDIR) crypto_stream/salsa20/ref/$(DEPDIR) crypto_stream/salsa2012/$(DEPDIR) crypto_stream/salsa2012/ref/$(DEPDIR) crypto_stream/salsa208/$(DEPDIR) crypto_stream/salsa208/ref/$(DEPDIR) crypto_stream/xsalsa20/$(DEPDIR) crypto_stream/xsalsa20/ref/$(DEPDIR) crypto_verify/16/$(DEPDIR) crypto_verify/16/ref/$(DEPDIR) crypto_verify/32/$(DEPDIR) crypto_verify/32/ref/$(DEPDIR) crypto_verify/64/$(DEPDIR) crypto_verify/64/ref/$(DEPDIR) randombytes/$(DEPDIR) randombytes/salsa20/$(DEPDIR) randombytes/sysrandom/$(DEPDIR) sodium/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-defexecDATA uninstall-libLTLIBRARIES

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am clean clean-generic clean-libLTLIBRARIES \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am \
	install-defexecDATA install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-defexecDATA uninstall-libLTLIBRARIES

.PRECIOUS: Makefile

#libsodium-$(DLL_VERSION).def: libsodium.la

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
